[
    {
        "id": "b46e5e48.494dc",
        "type": "tab",
        "label": "[RAK] Ingestion - PROD",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a53d296e.1ea118",
        "type": "tab",
        "label": "[RAK] Internal API - PROD",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b0648658.d6e708",
        "type": "tab",
        "label": "[NEW RAK] Internal API - PROD",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e35f4854.7d04a8",
        "type": "tab",
        "label": "[RAK] - Tagging New",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8bef0c82.c29b9",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b68ad1f2.8af23",
        "type": "tab",
        "label": "File System",
        "disabled": false,
        "info": "1) Update the default folder in the Init node \n2) Update the default folder in the Reset node as well \n3) You can duplicate the Reset nodes and use them as saved shortcuts \n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format. \n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point."
    },
    {
        "id": "24bd57.0c3052aa",
        "type": "tab",
        "label": "[RAK] SLP",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8cf8d9ad.9c9ed8",
        "type": "tab",
        "label": "[RAK] Internal - Stock Count PID",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d46758fd179faf99",
        "type": "tab",
        "label": "Test Flows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "29d858278349a4dd",
        "type": "tab",
        "label": "Mapped_Locations",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cc9eba98c223b353",
        "type": "tab",
        "label": "Stock_Count",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "944e5134.b26c4",
        "type": "subflow",
        "name": "Update Printing",
        "info": "",
        "in": [
            {
                "x": 180,
                "y": 220,
                "wires": [
                    {
                        "id": "54e513de.fb713c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1080,
                "y": 440,
                "wires": [
                    {
                        "id": "6a0c7fbd.3cffb",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "8c1c1099.827ec",
        "type": "subflow",
        "name": "Update CycleCount",
        "info": "",
        "in": [
            {
                "x": 100,
                "y": 140,
                "wires": [
                    {
                        "id": "412e3c2b.ac6454"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2200,
                "y": 800,
                "wires": [
                    {
                        "id": "d6754ad5.cfca68",
                        "port": 0
                    },
                    {
                        "id": "ae7feecb.00cb2",
                        "port": 0
                    },
                    {
                        "id": "ea5f6bcc.42a2c8",
                        "port": 0
                    },
                    {
                        "id": "169965a0.f3abfa",
                        "port": 0
                    },
                    {
                        "id": "7f869533.14e8dc",
                        "port": 0
                    },
                    {
                        "id": "bc89bc0c.3943a",
                        "port": 0
                    },
                    {
                        "id": "476bbd76.9dfd24",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "d6be62d.66635a",
        "type": "subflow",
        "name": "VerifySC",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 220,
                "wires": [
                    {
                        "id": "ea7d7516.991eb8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1318,
                "y": 160,
                "wires": [
                    {
                        "id": "7398e9d3.1858f8",
                        "port": 0
                    },
                    {
                        "id": "550abcd7.8e5704",
                        "port": 0
                    }
                ]
            },
            {
                "x": 780,
                "y": 360,
                "wires": [
                    {
                        "id": "4b9811b0.d897d",
                        "port": "0"
                    },
                    {
                        "id": "75e302a7.4bb27c",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "de11666a.1c75e8",
        "type": "subflow",
        "name": "Verify SC Epc's",
        "info": "",
        "in": [
            {
                "x": 220,
                "y": 320,
                "wires": [
                    {
                        "id": "994dabb.43e9f58"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "10ababd7.10f694",
        "type": "subflow",
        "name": "Verify GI Epc's",
        "info": "",
        "in": [
            {
                "x": 220,
                "y": 320,
                "wires": [
                    {
                        "id": "52ced9ae.146dd8"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "67277992.ab8158",
        "type": "subflow",
        "name": "Update Goods_In",
        "info": "",
        "in": [
            {
                "x": 80,
                "y": 200,
                "wires": [
                    {
                        "id": "47fa6191.15959"
                    },
                    {
                        "id": "4e397119.664b5"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 320,
                "wires": [
                    {
                        "id": "e3961ceb.130f9",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "e4de500e.5d6a9",
        "type": "subflow",
        "name": "Copy Metadata",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "4b421d09.5d6184"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 80,
                "wires": [
                    {
                        "id": "99e72fac.f29f5",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "ca62b170.d9c7a",
        "type": "subflow",
        "name": "Copy Metadata Printing",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "2194597d.52bde6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 220,
                "wires": [
                    {
                        "id": "9cbc2852.758d18",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "a0c7a088.bcdca",
        "type": "subflow",
        "name": "VerifySC sqlite",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "2e74053c.12483a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 220,
                "y": 940,
                "wires": [
                    {
                        "id": "d40585cc.c816b8",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "4b99f82d.4cd448",
        "type": "subflow",
        "name": "FTP Processor",
        "info": "ftp sub flow process to read data from file and moved to a processed folder\n\nINBOUND => \n    source file\n    path File (could include sub folders).\n    destination folder to processed file\n    \n\n\nOUTBOUND =>\n    ",
        "in": [
            {
                "x": 140,
                "y": 240,
                "wires": [
                    {
                        "id": "c6f5b306.ad11a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1720,
                "y": 240,
                "wires": [
                    {
                        "id": "5b496934.989398",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "e0bdfd8e.7b0fb",
        "type": "subflow",
        "name": "verifyTaggedPallet",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "90e1c632.a56428"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 200,
                "wires": [
                    {
                        "id": "6165e87b.e0ba28",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "10d82e1f.f08ab2",
        "type": "subflow",
        "name": "GetPalletData",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "545b4815.0f7528"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 200,
                "wires": [
                    {
                        "id": "7ee74f0e.c4227",
                        "port": 0
                    },
                    {
                        "id": "30bd93ba.9dc26c",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "ee8909d.0fb5ef8",
        "type": "subflow",
        "name": "verifyTaggedPallet (2)",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "49a7a27.6ce6d5c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 200,
                "wires": [
                    {
                        "id": "9216d6a7.6b9a28",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "6e0e5f0d2401051f",
        "type": "subflow",
        "name": "reTagging to VZ",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 420,
                "wires": [
                    {
                        "id": "e657e5b6dba97dc5"
                    },
                    {
                        "id": "931f398f4c5d25fc"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "8ba0e14d.7051a",
        "type": "node-red-contrib-whatsapp-cmb-account",
        "name": "Guillermo"
    },
    {
        "id": "a3916121.b302b",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#cc003d",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ed1d2ea9.5ac21",
        "type": "ui_tab",
        "name": "INICIO",
        "icon": "dashboard"
    },
    {
        "id": "f14fa106.0b4d8",
        "type": "ui_group",
        "name": "EVENTO",
        "tab": "b0b87d80.28b09",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7ecd3ac5.c0a9b4",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "8f33c443.49c7c8",
        "type": "ui_group",
        "name": "Data Export",
        "tab": "dd34b4a9.9c01f8",
        "disp": true,
        "width": "12"
    },
    {
        "id": "1ac77a41.e0c236",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "fa84ea78.eba818",
        "type": "ui_tab",
        "name": "INICIO",
        "icon": "dashboard"
    },
    {
        "id": "3982e61d.98fc1a",
        "type": "ui_group",
        "name": "EVENTO",
        "tab": "b0b87d80.28b09",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f8ad6277.5d71d",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "867443b.69dfac",
        "type": "ui_group",
        "name": "Data Export",
        "tab": "dd34b4a9.9c01f8",
        "disp": true,
        "width": "12"
    },
    {
        "id": "3f003dc3.e7e692",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "f49d62fe.95909",
        "type": "ui_tab",
        "name": "INICIO",
        "icon": "dashboard"
    },
    {
        "id": "5989c2ca.bc07cc",
        "type": "ui_group",
        "name": "EVENTO",
        "tab": "f49d62fe.95909",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "de7bbae7.001cd8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "8bb1a47.b712758",
        "type": "ui_group",
        "name": "Data Export",
        "tab": "abe46eb1.83c4d",
        "order": 1,
        "disp": true,
        "width": "12"
    },
    {
        "id": "abe46eb1.83c4d",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "85d49a2e.31fd08",
        "type": "ui_group",
        "name": "Download SOH source file",
        "tab": "1ab708f.961d4f7",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "ce726b86.99e398",
        "type": "ui_group",
        "name": "SOH Operations",
        "tab": "1ab708f.961d4f7",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "1ab708f.961d4f7",
        "type": "ui_tab",
        "name": "Operations",
        "icon": "Operations"
    },
    {
        "id": "92cb952d.dff288",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "9ad8210a.4e84b",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "c3f2eb0e.c1baf8",
        "type": "ui_group",
        "name": "CPU Load",
        "tab": "241c5269.46f4ce",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "a28761e7.d9e77",
        "type": "ui_group",
        "name": "Memory Usage",
        "tab": "241c5269.46f4ce",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fe6aa93e.3fbbd8",
        "type": "ui_group",
        "name": "System Information",
        "tab": "241c5269.46f4ce",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "94dd7390.cc4c9",
        "type": "ui_group",
        "name": "Disk Usage",
        "tab": "241c5269.46f4ce",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8af1f3c1.01463",
        "type": "ui_group",
        "name": "Table",
        "tab": "b035c21e.33a66",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "9ad8210a.4e84b",
        "type": "ui_tab",
        "name": "Files",
        "icon": "dashboard"
    },
    {
        "id": "241c5269.46f4ce",
        "type": "ui_tab",
        "name": "System",
        "icon": "computer"
    },
    {
        "id": "b035c21e.33a66",
        "type": "ui_tab",
        "name": "Operations",
        "icon": "Operations"
    },
    {
        "id": "6cfe6ea8.1b0f7",
        "type": "ftp",
        "host": "ftp.virginmena.com",
        "port": "22",
        "secure": false,
        "secureOptions": "",
        "user": "VMsRFID",
        "connTimeout": "50000",
        "pasvTimeout": "50000",
        "keepalive": "50000"
    },
    {
        "id": "93d5f95b04d87b92",
        "type": "SFTP-credentials",
        "host": "ftp.virginmena.com",
        "port": "22",
        "username": "VMsRFID",
        "password": "V1r!5R7!$20^21"
    },
    {
        "id": "407a31eb.80a13",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "e4c18acf.1a4bf8",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "crt.pem",
        "keyname": "key.pem",
        "caname": "bundle.pem",
        "verifyservercert": false
    },
    {
        "id": "d190b7eb.ac7af8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "892cdea0.0b439",
        "type": "sqlitedb",
        "z": "e0bdfd8e.7b0fb",
        "db": "/flows/sqlitedb/RAK_database.db",
        "mode": "RWC"
    },
    {
        "id": "e57bd4af.42b448",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "93d454c9.4c4898",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "d6b2bd9.de2cc4",
        "type": "ui_group",
        "name": "Default",
        "tab": "99fdf270.eecbb",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "8557a2db.08fba",
        "type": "ui_group",
        "name": "CPU Load",
        "tab": "e46195dc.ac0b08",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "bf70546e.d9c248",
        "type": "ui_group",
        "name": "Memory Usage",
        "tab": "e46195dc.ac0b08",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c5c9b400.16e73",
        "type": "ui_group",
        "name": "System Information",
        "tab": "e46195dc.ac0b08",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "326d9292.76233e",
        "type": "ui_group",
        "name": "Disk Usage",
        "tab": "e46195dc.ac0b08",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "93d454c9.4c4898",
        "type": "ui_tab",
        "name": "Files",
        "icon": "dashboard"
    },
    {
        "id": "99fdf270.eecbb",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "e46195dc.ac0b08",
        "type": "ui_tab",
        "name": "System",
        "icon": "computer"
    },
    {
        "id": "1535941d.0f78fc",
        "type": "sqlitedb",
        "z": "ee8909d.0fb5ef8",
        "db": "/flows/sqlitedb/RAK_database.db",
        "mode": "RWC"
    },
    {
        "id": "ae98c1c14c4ef5ac",
        "type": "sqlitedb",
        "db": "/data/sqlitedb/RAK_database.db",
        "mode": "RWC"
    },
    {
        "id": "7b064227b1398423",
        "type": "sqlitedb",
        "db": "/data/sqlitedb/SC-RUBAIYAT_CountData.db",
        "mode": "RWC"
    },
    {
        "id": "99d4bbcc06d2e943",
        "type": "mongodb",
        "hostname": "164.90.229.163",
        "topology": "direct",
        "connectOptions": "",
        "port": "27018",
        "db": "admin?authSource=admin",
        "name": ""
    },
    {
        "id": "bac210ad5fd22834",
        "type": "mongodb-aleph-config",
        "hostname": "164.90.229.163",
        "topology": "direct",
        "connectOptions": "",
        "port": "27018",
        "db": "admin?authSource=admin",
        "name": ""
    },
    {
        "id": "880aa783e78c1721",
        "type": "mongodb-config",
        "hostname": "139.59.151.223",
        "port": "27017",
        "db": "admin?authSource=admin",
        "name": ""
    },
    {
        "id": "82bf4fbd6bcb631d",
        "type": "mongodb3",
        "uri": "mongodb://rakc:rakcinnovent@164.90.229.163:27018/admin?authSource=admin",
        "name": "mongodb",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "7444309d7e63d49a",
        "type": "node-red-contrib-whatsapp-cmb-account",
        "name": "Nadeem"
    },
    {
        "id": "54e513de.fb713c",
        "type": "function",
        "z": "944e5134.b26c4",
        "name": "Prepare Item Messages",
        "func": "var itemList = msg.payload || [];\nvar blockSize = 50;\nvar defaultThingType = \"Item\"\nvar req=[];\nvar updateList = [];\n\n//node.warn('procesing payload');\nvar generateJson = function(thing){\n    if(!!thing){\n        var updJson = { \n                \"thingTypeCode\" : thing.thingTypeCode || defaultThingType,\n                \"serialNumber\":\"\"+thing.serialNumber,\n                \"timestamp\":(new Date()).getTime()\n        };\n        if(thing.udfs){\n            for(var key in thing.udfs){\n                updJson[key] = thing.udfs[key].value || \"\";\n                delete thing.udfs.Retail_Product_SKU;\n                delete thing.udfs.Retail_Product_SKUOriginal;\n            }    \n        }\n        \n        req.push(updJson);\n        if(req.length >= blockSize){\n            updateList.push({ payload:req });\n            req=[];\n        }\n    }\n}\n//node.warn(itemList);\nfor (var i=0; i<itemList.length; i++){\n    if(itemList[i].hasOwnProperty('serialNumber')){\n        generateJson(itemList[i]);\n    }\n}\n//node.warn('updateList');\n\nif(req.length > 0){\n    updateList.push({ payload:req});\n    req=[];\n}\nif(updateList.length === 0){\n    return null;\n}\n//node.warn(updateList);\n\nreturn [updateList];",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "61b75407.0ad57c"
            ]
        ]
    },
    {
        "id": "61b75407.0ad57c",
        "type": "delay",
        "z": "944e5134.b26c4",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "6bc02162.24b54"
            ]
        ]
    },
    {
        "id": "4e25c0f7.a1157",
        "type": "half-bridge",
        "z": "944e5134.b26c4",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 610,
        "y": 340,
        "wires": [
            [
                "55baa56.8cf745c"
            ]
        ]
    },
    {
        "id": "55baa56.8cf745c",
        "type": "http request",
        "z": "944e5134.b26c4",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 790,
        "y": 400,
        "wires": [
            [
                "6a0c7fbd.3cffb"
            ]
        ]
    },
    {
        "id": "b10409f5.4389c8",
        "type": "debug",
        "z": "944e5134.b26c4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 950,
        "y": 340,
        "wires": []
    },
    {
        "id": "6a0c7fbd.3cffb",
        "type": "function",
        "z": "944e5134.b26c4",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    return msg;\n}\n\nnode.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING PRINTING ---- \");\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "6bc02162.24b54",
        "type": "function",
        "z": "944e5134.b26c4",
        "name": "Prepare HTTP item",
        "func": "var tenant = global.get('tenant');\nmsg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/\"+tenant+\"/MOBILE&thingTypeCode=/\"+tenant+\"/ITEM\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 280,
        "wires": [
            [
                "4e25c0f7.a1157",
                "86b9bd08.12267"
            ]
        ]
    },
    {
        "id": "6eb5eedf.84ac",
        "type": "file",
        "z": "944e5134.b26c4",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1010,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "86b9bd08.12267",
        "type": "function",
        "z": "944e5134.b26c4",
        "name": "Outbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/PRINTING-SAVE/'+ shortDate + '/outbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 240,
        "wires": [
            [
                "6eb5eedf.84ac"
            ]
        ]
    },
    {
        "id": "37aa882b.e03678",
        "type": "delay",
        "z": "8c1c1099.827ec",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 410,
        "y": 820,
        "wires": [
            [
                "14593461.31f95c"
            ]
        ]
    },
    {
        "id": "14593461.31f95c",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nvar tenant = global.get('tenant');\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/\"+tenant+\"/MOBILECC&thingTypeCode=/\"+tenant+\"/ITEM\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 820,
        "wires": [
            [
                "a8ff3f16.7026"
            ]
        ]
    },
    {
        "id": "a8ff3f16.7026",
        "type": "half-bridge",
        "z": "8c1c1099.827ec",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 770,
        "y": 820,
        "wires": [
            [
                "d6754ad5.cfca68"
            ]
        ]
    },
    {
        "id": "d6754ad5.cfca68",
        "type": "http request",
        "z": "8c1c1099.827ec",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 930,
        "y": 820,
        "wires": [
            [
                "57038253.bc8e3c"
            ]
        ]
    },
    {
        "id": "57038253.bc8e3c",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    if (tmp = counter){\n        node.warn(\" ***** STOCK COUNT - Successfully processed: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 868,
        "wires": [
            []
        ]
    },
    {
        "id": "2b082555.d252ca",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 820,
        "wires": [
            [
                "37aa882b.e03678"
            ]
        ]
    },
    {
        "id": "412e3c2b.ac6454",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Outbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/CYCLECOUNT/'+ shortDate + '/outbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "4b393875.6f58b8"
            ]
        ]
    },
    {
        "id": "304a741d.390fbc",
        "type": "file",
        "z": "8c1c1099.827ec",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 610,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "4b393875.6f58b8",
        "type": "change",
        "z": "8c1c1099.827ec",
        "name": "payloadCC",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadcc",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 140,
        "wires": [
            [
                "304a741d.390fbc",
                "98c603c7.d21e"
            ]
        ]
    },
    {
        "id": "98c603c7.d21e",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Chunk PayloadCC",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 200,
        "wires": [
            [
                "fe2ac859.625ce8"
            ]
        ]
    },
    {
        "id": "efd83278.5ee7f",
        "type": "delay",
        "z": "8c1c1099.827ec",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "24f01ca8.b73d34"
            ]
        ]
    },
    {
        "id": "24f01ca8.b73d34",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Prepare HTTP itemcc",
        "func": "msg.method = \"PUT\";\nvar tenant = global.get('tenant');\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/\"+tenant+\"/MOBILECC&thingTypeCode=/\"+tenant+\"/ITEMCC\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 120,
        "wires": [
            [
                "e19a803b.7e381"
            ]
        ]
    },
    {
        "id": "ae7feecb.00cb2",
        "type": "http request",
        "z": "8c1c1099.827ec",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1550,
        "y": 120,
        "wires": [
            [
                "524af9b2.385268"
            ]
        ]
    },
    {
        "id": "524af9b2.385268",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Responsecc",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    if (tmp === counter){\n        node.warn(\" ***** STOCK COUNT - Successfully processed: \" +global.get('toprocess')+ \" ITEMSCC ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e19a803b.7e381",
        "type": "half-bridge",
        "z": "8c1c1099.827ec",
        "name": "",
        "bridgeCode": "MOBILECC",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1390,
        "y": 120,
        "wires": [
            [
                "ae7feecb.00cb2"
            ]
        ]
    },
    {
        "id": "363c810c.a3061e",
        "type": "comment",
        "z": "8c1c1099.827ec",
        "name": "Processing CycleCount - ITEMSCC",
        "info": "",
        "x": 320,
        "y": 40,
        "wires": []
    },
    {
        "id": "780e095f.d8b958",
        "type": "comment",
        "z": "8c1c1099.827ec",
        "name": "Processing CycleCount - ITEMS",
        "info": "",
        "x": 290,
        "y": 760,
        "wires": []
    },
    {
        "id": "fe2ac859.625ce8",
        "type": "Load Balance",
        "z": "8c1c1099.827ec",
        "defaultcapacity": 100,
        "dynamic": "ea3145e5.90fdc8",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 6,
        "routes": "5",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 740,
        "y": 360,
        "wires": [
            [
                "efd83278.5ee7f",
                "3c94df0a.7a822"
            ],
            [
                "80e49333.609e1"
            ],
            [
                "881c721c.f00b7"
            ],
            [
                "7a8d6360.e3825c"
            ],
            [
                "de1ceaa.0f74018"
            ],
            [
                "e44c80e6.0d1fb"
            ]
        ]
    },
    {
        "id": "80e49333.609e1",
        "type": "delay",
        "z": "8c1c1099.827ec",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1010,
        "y": 220,
        "wires": [
            [
                "8cad7fe5.398a1"
            ]
        ]
    },
    {
        "id": "8cad7fe5.398a1",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Prepare HTTP itemcc",
        "func": "msg.method = \"PUT\";\nvar tenant = global.get('tenant');\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/\"+tenant+\"/MOBILECC&thingTypeCode=/\"+tenant+\"/ITEMCC\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 220,
        "wires": [
            [
                "ee8068d9.0f9068"
            ]
        ]
    },
    {
        "id": "ea5f6bcc.42a2c8",
        "type": "http request",
        "z": "8c1c1099.827ec",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1550,
        "y": 220,
        "wires": [
            [
                "68a04a1d.3c3a94"
            ]
        ]
    },
    {
        "id": "68a04a1d.3c3a94",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Responsecc",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    if (tmp === counter){\n        node.warn(\" ***** STOCK COUNT - Successfully processed: \" +global.get('toprocess')+ \" ITEMSCC ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "ee8068d9.0f9068",
        "type": "half-bridge",
        "z": "8c1c1099.827ec",
        "name": "",
        "bridgeCode": "MOBILECC",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1390,
        "y": 220,
        "wires": [
            [
                "ea5f6bcc.42a2c8"
            ]
        ]
    },
    {
        "id": "881c721c.f00b7",
        "type": "delay",
        "z": "8c1c1099.827ec",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1010,
        "y": 320,
        "wires": [
            [
                "4e805650.ea7f98"
            ]
        ]
    },
    {
        "id": "4e805650.ea7f98",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Prepare HTTP itemcc",
        "func": "msg.method = \"PUT\";\nvar tenant = global.get('tenant');\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/\"+tenant+\"/MOBILECC&thingTypeCode=/\"+tenant+\"/ITEMCC\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 320,
        "wires": [
            [
                "b3e7d1b8.c2bf8"
            ]
        ]
    },
    {
        "id": "169965a0.f3abfa",
        "type": "http request",
        "z": "8c1c1099.827ec",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1550,
        "y": 320,
        "wires": [
            [
                "7945d043.4059a"
            ]
        ]
    },
    {
        "id": "7945d043.4059a",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Responsecc",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    if (tmp === counter){\n        node.warn(\" ***** STOCK COUNT - Successfully processed: \" +global.get('toprocess')+ \" ITEMSCC ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "b3e7d1b8.c2bf8",
        "type": "half-bridge",
        "z": "8c1c1099.827ec",
        "name": "",
        "bridgeCode": "MOBILECC",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1390,
        "y": 320,
        "wires": [
            [
                "169965a0.f3abfa"
            ]
        ]
    },
    {
        "id": "7a8d6360.e3825c",
        "type": "delay",
        "z": "8c1c1099.827ec",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1010,
        "y": 420,
        "wires": [
            [
                "9c41b2aa.ba88"
            ]
        ]
    },
    {
        "id": "9c41b2aa.ba88",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Prepare HTTP itemcc",
        "func": "msg.method = \"PUT\";\nvar tenant = global.get('tenant');\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/\"+tenant+\"/MOBILECC&thingTypeCode=/\"+tenant+\"/ITEMCC\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 420,
        "wires": [
            [
                "faf6864d.d87128"
            ]
        ]
    },
    {
        "id": "7f869533.14e8dc",
        "type": "http request",
        "z": "8c1c1099.827ec",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1550,
        "y": 420,
        "wires": [
            [
                "a399ce81.1997f"
            ]
        ]
    },
    {
        "id": "a399ce81.1997f",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Responsecc",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    if (tmp === counter){\n        node.warn(\" ***** STOCK COUNT - Successfully processed: \" +global.get('toprocess')+ \" ITEMSCC ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "faf6864d.d87128",
        "type": "half-bridge",
        "z": "8c1c1099.827ec",
        "name": "",
        "bridgeCode": "MOBILECC",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1390,
        "y": 420,
        "wires": [
            [
                "7f869533.14e8dc"
            ]
        ]
    },
    {
        "id": "de1ceaa.0f74018",
        "type": "delay",
        "z": "8c1c1099.827ec",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1010,
        "y": 520,
        "wires": [
            [
                "b492c887.576508"
            ]
        ]
    },
    {
        "id": "b492c887.576508",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Prepare HTTP itemcc",
        "func": "msg.method = \"PUT\";\nvar tenant = global.get('tenant');\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/\"+tenant+\"/MOBILECC&thingTypeCode=/\"+tenant+\"/ITEMCC\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 520,
        "wires": [
            [
                "68854c55.133c54"
            ]
        ]
    },
    {
        "id": "bc89bc0c.3943a",
        "type": "http request",
        "z": "8c1c1099.827ec",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1550,
        "y": 520,
        "wires": [
            [
                "fe3131ec.56515"
            ]
        ]
    },
    {
        "id": "fe3131ec.56515",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Responsecc",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    if (tmp === counter){\n        node.warn(\" ***** STOCK COUNT - Successfully processed: \" +global.get('toprocess')+ \" ITEMSCC ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "68854c55.133c54",
        "type": "half-bridge",
        "z": "8c1c1099.827ec",
        "name": "",
        "bridgeCode": "MOBILECC",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1390,
        "y": 520,
        "wires": [
            [
                "bc89bc0c.3943a"
            ]
        ]
    },
    {
        "id": "e44c80e6.0d1fb",
        "type": "delay",
        "z": "8c1c1099.827ec",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1010,
        "y": 620,
        "wires": [
            [
                "19d5f72b.1f2589"
            ]
        ]
    },
    {
        "id": "19d5f72b.1f2589",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Prepare HTTP itemcc",
        "func": "msg.method = \"PUT\";\nvar tenant = global.get('tenant');\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/\"+tenant+\"/MOBILECC&thingTypeCode=/\"+tenant+\"/ITEMCC\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 620,
        "wires": [
            [
                "44d7d7ff.04f838"
            ]
        ]
    },
    {
        "id": "476bbd76.9dfd24",
        "type": "http request",
        "z": "8c1c1099.827ec",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1550,
        "y": 620,
        "wires": [
            [
                "fc98df44.50dbc"
            ]
        ]
    },
    {
        "id": "fc98df44.50dbc",
        "type": "function",
        "z": "8c1c1099.827ec",
        "name": "Responsecc",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    if (tmp === counter){\n        node.warn(\" ***** STOCK COUNT - Successfully processed: \" +global.get('toprocess')+ \" ITEMSCC ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1550,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "44d7d7ff.04f838",
        "type": "half-bridge",
        "z": "8c1c1099.827ec",
        "name": "",
        "bridgeCode": "MOBILECC",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1390,
        "y": 620,
        "wires": [
            [
                "476bbd76.9dfd24"
            ]
        ]
    },
    {
        "id": "3c94df0a.7a822",
        "type": "debug",
        "z": "8c1c1099.827ec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 200,
        "wires": []
    },
    {
        "id": "ea7d7516.991eb8",
        "type": "switch",
        "z": "d6be62d.66635a",
        "name": "",
        "property": "process",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "packing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "shipping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "receiving",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cancelled",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 170,
        "y": 220,
        "wires": [
            [
                "70ce9fd0.091"
            ],
            [
                "131c768.0dda88a"
            ],
            [
                "62b76427.2d517c"
            ],
            [
                "e0edadc.0281a5"
            ]
        ]
    },
    {
        "id": "85e9b4a8.c8fcd8",
        "type": "DataOut",
        "z": "d6be62d.66635a",
        "collection": "",
        "name": "GET SupplyChainData",
        "path": "/",
        "error": false,
        "x": 500,
        "y": 200,
        "wires": [
            [
                "1f34e8e2.210877"
            ]
        ]
    },
    {
        "id": "1f34e8e2.210877",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "PARSER",
        "func": "var currentTime = new Date().getTime();\nvar availlableData = msg.payload;\nvar APIresponse = [];\nvar VtoUpdate = [];\nvar JtoUpdate = [];\nvar zone = \"\";\nvar message = \"\";\nvar messagej = \"\";\nmsg.response = 0;\n\nfor(var j=0; j < msg.count ; j++){\n    item = msg.serialNumber[j];\n\tvar Jitem = [];\n    if(availlableData[item]){\n        if(availlableData[item].ASN !== msg.ASN){\n            message = {\"ERROR\":msg.process+\" not processed for \" + item + \" already exists in ASN \" +  availlableData[item].ASN};\n\t\t\t//node.warn(\"Updating API ERROR mesage: \"+message);\n\t\t\tmsg.aux=1;\n\t\t\tAPIresponse.push(message);\n        }else{\n\t\t\t//message = {\"SUCCESS\": msg.process+\" processed for \" + item + \" in ASN \" +  msg.ASN};\n\t\t\t//node.warn(\"Updating API successful mesage for SHIPPING: \"+message);\n\t\t\t//APIresponse.push({payload:message});\n\t\t    //APIresponse.push(message);\n\t\t\tmsg.response++;\n\t\t\tif(msg.process !== \"packing\"){\n\t\t\t\tmessagej = {\"serialNumber\":item,\"ASN\":msg.ASN,\"OriginLocation\":msg.OriginLocation,\"ReceivingLocation\":msg.ReceivingLocation,\"process\":msg.process};\n\t\t\t\t//node.warn(\"Updating JSONDB mesage for SHIPPING: \"+messagej);\n\t\t\t\tJtoUpdate.push(messagej);\n\t\t\t}\n\t\t\t\n\t\t\tvar itemToUpdate = {  \n                \"thingTypeCode\" : \"ITEM\",\n                \"serialNumber\": item,\n                \"timestamp\":currentTime,\n                \"Retail_Bizlocation_Original\": msg.OriginLocation,\n\t\t\t\t\"deviceId\": msg.deviceId,\n\t\t\t\t\"Retail_BizTransactionId\": msg.ASN,\n\t\t\t\t\"Retail_BizTransactionProcess\": msg.process,\n\t\t\t\t\"Retail_BizTransactionProcessStatus\": msg.processStatus,\n\t\t\t\t\"user\": msg.user,\n\t\t\t\t\"Retail_Bizlocation\": msg.ReceivingLocation,\n\t\t\t\t\"source\": \"MOBILE\",\n\t\t\t\t\"sourceModule\":\"SupplyChain\",\n\t\t\t\t\"referenceListId\": msg.reflist,\n\t\t\t\t\"remarks\": msg.remarks\n            };\n\t\t\t//node.warn(\"Updating VIZIX mesage for SHIPPING: \"+itemToUpdate);\n\t\t\tVtoUpdate.push(itemToUpdate);\n\t\t}\n    }else{\n\t\t//message = {\"SUCCESS\": msg.process+\" processed for \" + item + \" in ASN \" +  msg.ASN};\n\t\t//node.warn(\"Updating API successful mesage for PACKING: \"+message);\n\t\t//APIresponse.push(message);\n\t\tzone = msg.OriginLocation+\"_SHIPPING\";\n\t\tmsg.response++;\n\t\tmessagej = {\"serialNumber\":item,\"ASN\":msg.ASN,\"OriginLocation\":msg.OriginLocation,\"ReceivingLocation\":msg.ReceivingLocation,\"process\":msg.process};\n\t\t//node.warn(\"Updating JSONDB mesage for PACKING: \"+messagej);\n\t\tJtoUpdate.push(messagej);\n\t\t\n\t\tvar itemToUpdate = {  \n            \"thingTypeCode\" : \"ITEM\",\n            \"serialNumber\": item,\n            \"timestamp\":currentTime,\n            \"Retail_Bizlocation_Original\": msg.OriginLocation,\n\t\t\t\"deviceId\": msg.deviceId,\n\t\t\t\"Retail_BizTransactionId\": msg.ASN,\n\t\t\t\"Retail_BizTransactionProcess\": msg.process,\n\t\t\t\"Retail_BizTransactionProcessStatus\": msg.processStatus,\n\t\t\t\"user\": msg.user,\n\t\t\t\"source\": \"MOBILE\",\n\t\t\t\"sourceModule\":\"SupplyChain\",\n\t\t\t\"referenceListId\": msg.reflist,\n\t\t\t\"remarks\": msg.remarks,\n\t\t\t\"zone\": zone\n        };\n\t\t//node.warn(\"Updating VIZIX mesage for PACKING: \"+itemToUpdate);\n\t\tVtoUpdate.push(itemToUpdate);\t\t\n\t}\n\t//node.send(null,JtoUpdate,null)\n}\nmsg.APIresponse = APIresponse;\nmsg.VtoUpdate = VtoUpdate;\nmsg.JtoUpdate = JtoUpdate;\nmsg.payload=\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "c27887c5.5fdb18",
                "48f09249.7059cc"
            ]
        ]
    },
    {
        "id": "7398e9d3.1858f8",
        "type": "change",
        "z": "d6be62d.66635a",
        "name": "API response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "APIresponse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "48f09249.7059cc",
        "type": "switch",
        "z": "d6be62d.66635a",
        "name": "Evaluator",
        "property": "aux",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 822,
        "y": 240,
        "wires": [
            [
                "550abcd7.8e5704",
                "c27887c5.5fdb18"
            ],
            [
                "e9d66219.93947",
                "c70121c7.a250d",
                "550abcd7.8e5704",
                "2e11340c.ead0bc"
            ]
        ]
    },
    {
        "id": "67eae6b9.9d1618",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "Formater",
        "func": "var availlableData = msg.payload;\nvar availableList = {};\n\nif(availlableData.hasOwnProperty(\"serialNumber\")){\n    availableList[availlableData.serialNumber] = availlableData;\n}\nmsg.payload = availableList;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 240,
        "wires": [
            [
                "8282435b.adbe3"
            ]
        ]
    },
    {
        "id": "8282435b.adbe3",
        "type": "DataIn",
        "z": "d6be62d.66635a",
        "collection": "",
        "name": "SAVE SupplyChainData",
        "update": true,
        "path": "/",
        "x": 1530,
        "y": 240,
        "wires": []
    },
    {
        "id": "e9d66219.93947",
        "type": "change",
        "z": "d6be62d.66635a",
        "name": "to JSONDB",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "JtoUpdate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 240,
        "wires": [
            [
                "cd63f94c.a27738"
            ]
        ]
    },
    {
        "id": "cd63f94c.a27738",
        "type": "splitter",
        "z": "d6be62d.66635a",
        "name": "",
        "property": "payload",
        "x": 1190,
        "y": 240,
        "wires": [
            [
                "67eae6b9.9d1618"
            ]
        ]
    },
    {
        "id": "c70121c7.a250d",
        "type": "change",
        "z": "d6be62d.66635a",
        "name": "to ViZix",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "VtoUpdate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 444,
        "wires": [
            [
                "a2e5da78.672c68"
            ]
        ]
    },
    {
        "id": "141dde3d.e9e982",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "Prepare HTTP item",
        "func": "var tenant = global.get('tenant');\nmsg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/\"+tenant+\"/MOBILE&thingTypeCode=/\"+tenant+\"/ITEM\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1491,
        "y": 444,
        "wires": [
            [
                "cc0cb8d6.533018",
                "b5851acd.7d9458"
            ]
        ]
    },
    {
        "id": "b5851acd.7d9458",
        "type": "half-bridge",
        "z": "d6be62d.66635a",
        "name": "",
        "bridgeCode": "FLOW",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1470,
        "y": 500,
        "wires": [
            [
                "9cadbc7a.cda31"
            ]
        ]
    },
    {
        "id": "9cadbc7a.cda31",
        "type": "http request",
        "z": "d6be62d.66635a",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1630,
        "y": 500,
        "wires": [
            [
                "24d2057.c8d77fa"
            ]
        ]
    },
    {
        "id": "24d2057.c8d77fa",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "Response",
        "func": "if(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    \n}else{\n    node.warn(\"Supply Chain - Posted successfully in ViZix\");\n    msg.statusCode = 200;\n}\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1780,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "a2e5da78.672c68",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 444,
        "wires": [
            [
                "cd6bc027.e51a1"
            ]
        ]
    },
    {
        "id": "d0cb5ee0.f71e",
        "type": "DataOut",
        "z": "d6be62d.66635a",
        "collection": "",
        "name": "GET SC",
        "path": "/",
        "error": false,
        "x": 460,
        "y": 263,
        "wires": [
            [
                "fe918519.7fdfb8"
            ]
        ]
    },
    {
        "id": "fe918519.7fdfb8",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "remove RECEIVED",
        "func": "var scData = msg.payload;\nvar currentTime = new Date().getTime();\nvar VtoUpdate = [];\n\nfor(var j=0; j < msg.count ; j++){\n    var serialNumber = msg.serialNumber[j];\n    if(scData.hasOwnProperty(serialNumber)){\n        //node.warn(\"count: \"+j+\" for \"+serialNumber)\n        if(scData[serialNumber].process !== \"packing\" && msg.ASN !== \"\"){\n            //node.warn(\"UPDATING...... \"+scData[serialNumber].serialNumber+\" .........\");\n            var itemToUpdate = { \n                \"thingTypeCode\" : \"ITEM\",\n                \"serialNumber\": scData[serialNumber].serialNumber,\n                \"timestamp\":currentTime,\n                \"Retail_Bizlocation_Original\": msg.OriginLocation,\n                \"Retail_Bizlocation\": msg.ReceivingLocation,\n    \t\t\t\"deviceId\": msg.deviceId,\n    \t\t\t\"Retail_BizTransactionId\": msg.ASN,\n    \t\t\t\"Retail_BizTransactionProcess\": msg.process,\n    \t\t\t\"Retail_BizTransactionProcessStatus\": msg.processStatus,\n    \t\t\t\"zone\": msg.zone,\n    \t\t\t\"user\": msg.user,\n    \t\t\t\"referenceListId\": msg.reflist,\n    \t\t\t\"source\": \"MOBILE\",\n    \t\t\t\"sourceModule\":\"SupplyChain\",\n    \t\t\t\"remarks\": msg.remarks,\n            };\n    \t\tVtoUpdate.push(itemToUpdate);\n    \t\t\n    \t\tdelete scData[serialNumber];\n            msg.payload = scData;\n            \n        }else{\n            var message = {ERROR:\"Receiving of ASN \"+msg.ASN+\" not possible\"};\n            node.warn(message);\n            msg.payload=message;\n            msg.aux=1;\n            msg.statusCode = 400;\n            return msg;\n        }\n    }    \n}\nmsg.VtoUpdate=VtoUpdate;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 320,
        "wires": [
            [
                "4b9811b0.d897d"
            ]
        ]
    },
    {
        "id": "6d1bca87.14f104",
        "type": "DataIn",
        "z": "d6be62d.66635a",
        "collection": "",
        "name": "Remove from JsonDB",
        "update": false,
        "path": "/",
        "x": 760,
        "y": 480,
        "wires": []
    },
    {
        "id": "4b9811b0.d897d",
        "type": "switch",
        "z": "d6be62d.66635a",
        "name": "Evaluator",
        "property": "aux",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 440,
        "wires": [
            [],
            [
                "6d1bca87.14f104",
                "75e302a7.4bb27c",
                "c70121c7.a250d",
                "41b159c0.1affb8"
            ]
        ]
    },
    {
        "id": "75e302a7.4bb27c",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "",
        "func": "message = msg.VtoUpdate\n\nmsg.payload={\"response\":\"Supply Chain - Posted successfully\"};\nif(msg.processStatus===\"cancelled\"){\n    msg.whatsapp=\"Confirming processed cancellation of \"+ message.length  +\" items in API for ASN \" +msg.ASN;\n    node.warn(\"Cancellation successful for ASN \"+ msg.ASN);    \n}else{\n    msg.whatsapp=\"Confirming processed receiving of \"+ message.length  +\" items in API for ASN \" +msg.ASN;\n    node.warn(\"Receiving successful for ASN \"+ msg.ASN);\n}\nmsg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "550abcd7.8e5704",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "",
        "func": "\nif(msg.count === msg.response){\n    message = msg.VtoUpdate\n    msg.whatsapp=\"Confirming processed \"+ msg.process + \" of \"+message.length  +\" items in API for ASN \" +msg.ASN;\n    msg.payload={\"response\":\"Supply Chain - Posted successfully\"};\n    node.warn(\"Confirming processed in API for ASN \"+ msg.ASN);\n    msg.statusCode = 200;\n    return [msg, null];\n}else{\n    message = msg.VtoUpdate\n    msg.whatsapp=\"ERROR ocurred when processing \"+ msg.process + \" of \"+message.length  +\" items in API for ASN \" +msg.ASN +\". Message received from Mobile process: \" + JSON.stringify(msg.APIresponse);\n    node.warn(\"ERROR ocurred when processing ASN \"+ msg.ASN+\". Message received from Mobile process: \" + JSON.stringify(msg.APIresponse));\n    msg.statusCode = 404;\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "dc9a7278.6e95e"
            ],
            [
                "7398e9d3.1858f8"
            ]
        ]
    },
    {
        "id": "c27887c5.5fdb18",
        "type": "debug",
        "z": "d6be62d.66635a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 970,
        "y": 60,
        "wires": []
    },
    {
        "id": "70ce9fd0.091",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "packing",
        "func": "msg.reflist=msg.ASN+\"I0001\";\nvar originalPayload = msg.payload || {};\nmsg.originalPayload = originalPayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 180,
        "wires": [
            [
                "85e9b4a8.c8fcd8"
            ]
        ]
    },
    {
        "id": "131c768.0dda88a",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "shipping",
        "func": "msg.reflist=msg.ASN+\"I0002\";\nvar originalPayload = msg.payload || {};\nmsg.originalPayload = originalPayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 220,
        "wires": [
            [
                "85e9b4a8.c8fcd8"
            ]
        ]
    },
    {
        "id": "62b76427.2d517c",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "receiving",
        "func": "msg.reflist=msg.ASN+\"I0003\";\nvar originalPayload = msg.payload || {};\nmsg.originalPayload = originalPayload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 263,
        "wires": [
            [
                "d0cb5ee0.f71e"
            ]
        ]
    },
    {
        "id": "e0edadc.0281a5",
        "type": "DataOut",
        "z": "d6be62d.66635a",
        "collection": "",
        "name": "GET SC",
        "path": "/",
        "error": false,
        "x": 240,
        "y": 380,
        "wires": [
            [
                "d0bc3778.3ac378"
            ]
        ]
    },
    {
        "id": "d0bc3778.3ac378",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "remove CANCELLED",
        "func": "var scData = msg.payload;\nvar currentTime = new Date().getTime();\nvar VtoUpdate = [];\n\nfor(var j=0; j < msg.count ; j++){\n    var serialNumber = msg.serialNumber[j];\n    if(scData.hasOwnProperty(serialNumber)){\n        //node.warn(\"count: \"+j+\" for \"+serialNumber)\n        //node.warn(\"UPDATING...... \"+scData[serialNumber].serialNumber+\" .........\");\n        var itemToUpdate = { \n            \"thingTypeCode\" : \"ITEM\",\n            \"serialNumber\": scData[serialNumber].serialNumber,\n            \"timestamp\":currentTime,\n\t\t\t\"Retail_BizTransactionId\": msg.ASN,\n\t\t\t\"Retail_BizTransactionProcessStatus\": msg.processStatus,\n\t\t\t\"user\": msg.user,\n\t\t\t\"referenceListId\": \"\",\n\t\t\t\"source\": \"MOBILE\",\n\t\t\t\"sourceModule\":\"SupplyChain\",\n\t\t\t\"remarks\": msg.remarks\n        };\n\t\tVtoUpdate.push(itemToUpdate);\n    \t\t\n\t\tdelete scData[serialNumber];\n        msg.payload = scData;\n            \n    }\n    else{\n        var message = {ERROR:\"Closing ASN \"+msg.ASN+\" for ITEMS PROVIDED is not possible\"};\n        node.warn(message);\n        msg.payload=message;\n        msg.aux=1;\n        msg.statusCode = 400;\n        return msg;\n    }\n    \n}\nmsg.VtoUpdate=VtoUpdate;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 440,
        "wires": [
            [
                "4b9811b0.d897d"
            ]
        ]
    },
    {
        "id": "cd6bc027.e51a1",
        "type": "delay",
        "z": "d6be62d.66635a",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1314,
        "y": 444,
        "wires": [
            [
                "141dde3d.e9e982"
            ]
        ]
    },
    {
        "id": "a65f9d77.6a6a4",
        "type": "file",
        "z": "d6be62d.66635a",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1850,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "cc0cb8d6.533018",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "Outbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/SUPPLYCHAIN/'+ shortDate + '/outbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1700,
        "y": 400,
        "wires": [
            [
                "a65f9d77.6a6a4"
            ]
        ]
    },
    {
        "id": "e411e812.e5cca8",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "verfied List",
        "func": "//node.warn(\"packing--\");\n//node.warn(msg);\n// if(!msg.payload){\n//     return null;\n// }\nvar groupByAsn= {};\nvar asn=\"\";\nvar item={};\nvar process = msg.process;\nvar originalPayload = msg.originalPayload;\n// node.warn(originalPayload);\n\nfor(var i=0; i<originalPayload.length; i++){\n    item = originalPayload[i];\n    if(item.udfs.Retail_BizTransactionId){\n        asn = item.udfs.Retail_BizTransactionId.value + \"_\" + process;\n        if(!groupByAsn.hasOwnProperty(asn)){\n            groupByAsn[asn] = {\n                \"verified_count\": 1,\n                \"asn_length\": 0,\n                \"epcList\" : []\n            }\n        }\n        groupByAsn[asn].epcList.push({\n            \"serial_number\": item.serialNumber,\n            \"check_flag\": false,\n            \"validated\": false\n        });\n        groupByAsn[asn].asn_length = groupByAsn[asn].asn_length +1;\n    }\n}\n// node.warn(\"groupByAsn\"); \n// node.warn(groupByAsn);\n// node.warn(\"msg.payload\"); \n// node.warn(msg.payload);\n\nfor(var key in groupByAsn){\n    if(groupByAsn.hasOwnProperty(key)){\n        if(msg.payload.hasOwnProperty(key)){\n            msg.payload[key] = groupByAsn[key];\n        }else{\n            msg.payload[key]=groupByAsn[key];\n        }\n    }\n}\n\n// msg.payload = groupByAsn;\nmsg.payload;\n// node.warn(\"antes de enviar\");\n// node.warn(msg);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 300,
        "wires": [
            [
                "e68bcb60.3616d8",
                "78948565.afe45c"
            ]
        ]
    },
    {
        "id": "2e11340c.ead0bc",
        "type": "DataOut",
        "z": "d6be62d.66635a",
        "collection": "",
        "name": "GET SCV",
        "path": "/",
        "error": false,
        "x": 1020,
        "y": 300,
        "wires": [
            [
                "e411e812.e5cca8"
            ]
        ]
    },
    {
        "id": "78948565.afe45c",
        "type": "DataIn",
        "z": "d6be62d.66635a",
        "collection": "",
        "name": "",
        "update": false,
        "path": "/",
        "x": 1410,
        "y": 300,
        "wires": []
    },
    {
        "id": "e68bcb60.3616d8",
        "type": "debug",
        "z": "d6be62d.66635a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1410,
        "y": 340,
        "wires": []
    },
    {
        "id": "41b159c0.1affb8",
        "type": "DataOut",
        "z": "d6be62d.66635a",
        "collection": "",
        "name": "GET SCV",
        "path": "/",
        "error": false,
        "x": 720,
        "y": 540,
        "wires": [
            [
                "30b3f72f.e1b8f8"
            ]
        ]
    },
    {
        "id": "30b3f72f.e1b8f8",
        "type": "function",
        "z": "d6be62d.66635a",
        "name": "verfied List",
        "func": "//node.warn(\"packing--\");\n//node.warn(msg);\n// if(!msg.payload){\n//     return null;\n// }\nvar groupByAsn= {};\nvar asn=\"\";\nvar item={};\nvar process = msg.process;\nvar originalPayload = msg.originalPayload;\n// node.warn(originalPayload);\n\nfor(var i=0; i<originalPayload.length; i++){\n    item = originalPayload[i];\n    if(item.udfs.Retail_BizTransactionId){\n        asn = item.udfs.Retail_BizTransactionId.value + \"_\" + process;\n        if(!groupByAsn.hasOwnProperty(asn)){\n            groupByAsn[asn] = {\n                \"verified_count\": 1,\n                \"asn_length\": 0,\n                \"epcList\" : []\n            }\n        }\n        groupByAsn[asn].epcList.push({\n            \"serial_number\": item.serialNumber,\n            \"check_flag\": false,\n            \"validated\": false\n        });\n        groupByAsn[asn].asn_length = groupByAsn[asn].asn_length +1;\n    }\n}\n// node.warn(\"groupByAsn\"); \n// node.warn(groupByAsn);\n// node.warn(\"msg.payload\"); \n// node.warn(msg.payload);\n\nfor(var key in groupByAsn){\n    if(groupByAsn.hasOwnProperty(key)){\n        if(msg.payload.hasOwnProperty(key)){\n            msg.payload[key] = groupByAsn[key];\n        }else{\n            msg.payload[key]=groupByAsn[key];\n        }\n    }\n}\n\n// msg.payload = groupByAsn;\nmsg.payload;\n// node.warn(\"antes de enviar\");\n// node.warn(msg);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 540,
        "wires": [
            [
                "f1c22e23.808e5",
                "d0c88143.c3663"
            ]
        ]
    },
    {
        "id": "d0c88143.c3663",
        "type": "DataIn",
        "z": "d6be62d.66635a",
        "collection": "",
        "name": "",
        "update": false,
        "path": "/",
        "x": 1030,
        "y": 540,
        "wires": []
    },
    {
        "id": "f1c22e23.808e5",
        "type": "debug",
        "z": "d6be62d.66635a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1030,
        "y": 580,
        "wires": []
    },
    {
        "id": "dc9a7278.6e95e",
        "type": "debug",
        "z": "d6be62d.66635a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1410,
        "y": 100,
        "wires": []
    },
    {
        "id": "70d39905.6c2028",
        "type": "debug",
        "z": "de11666a.1c75e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 530,
        "y": 260,
        "wires": []
    },
    {
        "id": "2461d682.83b03a",
        "type": "function",
        "z": "de11666a.1c75e8",
        "name": "",
        "func": "var savedVerfied = msg.payload;\nvar originalPayload = msg.originalPayload;\nvar asn = \"\";\nvar serial = originalPayload.tag_id;\nvar brand = originalPayload.brand;\nvar date=\"\";\nvar destination = \"\";\nif(originalPayload.asn && originalPayload.status){\n    asn = originalPayload.asn + \"_\" + originalPayload.status;\n}\n// node.warn(asn);\n// node.warn(serial);\n// node.warn(\"verify asn\")\n//node.warn(originalPayload);\n// node.warn(savedVerfied);\n\nif(savedVerfied.hasOwnProperty(asn)){\n    var epcList = savedVerfied[asn].epcList;\n    \n    date = new Date(parseInt(originalPayload.event_date));\n    date = date.getFullYear()+\n          \"/\"+(date.getMonth()+1)+\n          \"/\"+date.getDate()+\n          \" \"+date.getHours()+\n          \":\"+date.getMinutes()+\n          \":\"+date.getSeconds();\n          \n    if(originalPayload[\"status\"] !== \"packing\"){\n        destination = originalPayload[\"destination\"];\n    }\n    \n    savedVerfied[asn][\"asn\"] = originalPayload[\"asn\"];\n    savedVerfied[asn][\"source\"] = originalPayload[\"source\"];\n    savedVerfied[asn][\"destination\"] = destination;\n    savedVerfied[asn][\"status\"]= originalPayload[\"status\"];\n    savedVerfied[asn][\"event_date\"] = date;\n    savedVerfied[asn][\"event_remarks\"] = originalPayload[\"event_remarks\"];\n    savedVerfied[asn][\"event_ref_id\"] = originalPayload[\"event_ref_id\"];\n\n\n    for(var i=0; i<epcList.length; i++){\n        if(epcList[i].serial_number === serial){\n            epcList[i].check_flag = true;\n            if(brand){\n                epcList[i].validated = true;\n                epcList[i][\"original_location\"] =  originalPayload[\"original_location\"];\n                epcList[i][\"store_id\"] =  originalPayload[\"store_id\"];\n                epcList[i][\"process_status\"] =  originalPayload[\"process_status\"];\n                //epcList[i][\"sku\"] =  originalPayload[\"sku\"];\n                epcList[i][\"departmentid\"] =  originalPayload[\"departmentid\"];\n                epcList[i][\"brand\"] =  originalPayload[\"brand\"];\n                epcList[i][\"sku\"] =  originalPayload[\"sku\"];\n                \n            }\n        }\n    }\n    savedVerfied[asn].epcList = epcList;\n    msg.payload = savedVerfied;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 320,
        "wires": [
            [
                "84529a76.fede18"
            ]
        ]
    },
    {
        "id": "994dabb.43e9f58",
        "type": "function",
        "z": "de11666a.1c75e8",
        "name": "Save Values",
        "func": "if(!msg.payload){\n    return null;\n}\nvar originalPayload = msg.payload || {};\nmsg.originalPayload = originalPayload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 320,
        "wires": [
            [
                "b6878737.2eb458"
            ]
        ]
    },
    {
        "id": "b6878737.2eb458",
        "type": "DataOut",
        "z": "de11666a.1c75e8",
        "collection": "",
        "name": "GET SCV",
        "path": "/",
        "error": false,
        "x": 540,
        "y": 320,
        "wires": [
            [
                "2461d682.83b03a"
            ]
        ]
    },
    {
        "id": "84529a76.fede18",
        "type": "DataIn",
        "z": "de11666a.1c75e8",
        "collection": "",
        "name": "",
        "update": false,
        "path": "/",
        "x": 850,
        "y": 320,
        "wires": []
    },
    {
        "id": "3ba19013.ad86a",
        "type": "debug",
        "z": "de11666a.1c75e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 260,
        "wires": []
    },
    {
        "id": "b89295b3.519118",
        "type": "debug",
        "z": "10ababd7.10f694",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 710,
        "y": 280,
        "wires": []
    },
    {
        "id": "3cef9074.a4941",
        "type": "function",
        "z": "10ababd7.10f694",
        "name": "",
        "func": "var savedVerfied = msg.payload;\nvar originalPayload = msg.originalPayload;\nvar gi = \"\";\nvar serial = originalPayload.epc;\nvar refno = originalPayload.refno;\nvar date=\"\", timestamp=\"\";\nvar destination = \"\";\nif(originalPayload.Retail_ItemBatchID && originalPayload.epc){\n    gi = originalPayload.Retail_ItemBatchID;\n}\n// node.warn(asn);\n// node.warn(serial);\n// node.warn(\"verify asn\")\n//node.warn(originalPayload);\n// node.warn(savedVerfied);\n\nif(savedVerfied.hasOwnProperty(gi)){\n    var epcList = savedVerfied[gi].epcList;\n    timestamp = Date.now();\n    date = new Date(parseInt(timestamp));\n    date = date.getFullYear()+\n          \"/\"+(date.getMonth()+1)+\n          \"/\"+date.getDate()+\n          \" \"+date.getHours()+\n          \":\"+date.getMinutes()+\n          \":\"+date.getSeconds();\n          \n   \n    savedVerfied[gi][\"gi\"] = originalPayload[\"gi\"];\n\n\n    for(var i=0; i<epcList.length; i++){\n        if(epcList[i].epc === serial){\n            epcList[i].check_flag = true;\n            if(refno){\n                epcList[i].validated = true;\n                epcList[i][\"Retail_ItemBatchID\"] =  originalPayload[\"Retail_ItemBatchID\"];\n                epcList[i][\"date\"] =  date;\n                epcList[i][\"Supplier_Number\"] =  originalPayload[\"Supplier_Number\"];\n                epcList[i][\"Shipment_Number\"] =  originalPayload[\"Shipment_Number\"];\n                epcList[i][\"Store\"] =  originalPayload[\"Store\"];\n                epcList[i][\"refno\"] =  originalPayload[\"refno\"];\n                epcList[i][\"Purchase_Order\"] =  originalPayload[\"Purchase_Order\"];\n                epcList[i][\"Comments\"] =  originalPayload[\"Comments\"];\n                epcList[i][\"id\"] =  originalPayload[\"id\"];\n                epcList[i][\"remarks\"] =  originalPayload[\"remarks\"];\n            }\n        }\n    }\n    savedVerfied[gi].epcList = epcList;\n    msg.payload = savedVerfied;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 380,
        "wires": [
            [
                "f7b30a4.1a1a3f8"
            ]
        ]
    },
    {
        "id": "52ced9ae.146dd8",
        "type": "function",
        "z": "10ababd7.10f694",
        "name": "Save Values",
        "func": "if(!msg.payload){\n    return null;\n}\nvar originalPayload = msg.payload || {};\nmsg.originalPayload = originalPayload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 380,
        "wires": [
            [
                "c210cc4.f4c323"
            ]
        ]
    },
    {
        "id": "c210cc4.f4c323",
        "type": "DataOut",
        "z": "10ababd7.10f694",
        "collection": "",
        "name": "GET GI",
        "path": "/",
        "error": false,
        "x": 580,
        "y": 380,
        "wires": [
            [
                "3cef9074.a4941"
            ]
        ]
    },
    {
        "id": "f7b30a4.1a1a3f8",
        "type": "DataIn",
        "z": "10ababd7.10f694",
        "collection": "",
        "name": "",
        "update": false,
        "path": "/",
        "x": 890,
        "y": 440,
        "wires": []
    },
    {
        "id": "80afd108.6b29c",
        "type": "debug",
        "z": "10ababd7.10f694",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "47fa6191.15959",
        "type": "function",
        "z": "67277992.ab8158",
        "name": "Prepare Item Messages",
        "func": "var itemList = msg.payload || [];\nvar blockSize = 50;\nvar defaultThingType = \"Item\"\nvar req=[];\nvar updateList = [];\n\nnode.warn('procesing payload');\nvar generateJson = function(thing){\n    if(!!thing){\n        var updJson = { \n                \"thingTypeCode\" : thing.thingTypeCode || defaultThingType,\n                \"serialNumber\":\"\"+thing.serialNumber,\n                \"timestamp\":(new Date()).getTime()\n        };\n        if(thing.udfs){\n            for(var key in thing.udfs){\n                updJson[key] = thing.udfs[key].value || \"\";\n            }    \n        }\n        \n        req.push(updJson);\n        if(req.length >= blockSize){\n            updateList.push({ payload:req });\n            req=[];\n        }\n    }\n}\n//node.warn(itemList);\nfor (var i=0; i<itemList.length; i++){\n    if(itemList[i].hasOwnProperty('serialNumber')){\n        generateJson(itemList[i]);\n    }\n}\n//node.warn('updateList');\n\nif(req.length > 0){\n    updateList.push({ payload:req});\n    req=[];\n}\nif(updateList.length === 0){\n    return null;\n}\n//node.warn(updateList);\n\nreturn [updateList];",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "44597f06.d4fed"
            ]
        ]
    },
    {
        "id": "44597f06.d4fed",
        "type": "delay",
        "z": "67277992.ab8158",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "403c1fe7.7e391"
            ]
        ]
    },
    {
        "id": "6927ced5.a07b3",
        "type": "half-bridge",
        "z": "67277992.ab8158",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 750,
        "y": 260,
        "wires": [
            [
                "f8267bff.9d6a08",
                "6ecb7e87.fce86"
            ]
        ]
    },
    {
        "id": "6ecb7e87.fce86",
        "type": "http request",
        "z": "67277992.ab8158",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 930,
        "y": 300,
        "wires": [
            [
                "e3961ceb.130f9",
                "f8267bff.9d6a08"
            ]
        ]
    },
    {
        "id": "f8267bff.9d6a08",
        "type": "debug",
        "z": "67277992.ab8158",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1110,
        "y": 260,
        "wires": []
    },
    {
        "id": "e3961ceb.130f9",
        "type": "function",
        "z": "67277992.ab8158",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    return msg;\n}\n\nnode.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING GOODS IN ---- \");\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "403c1fe7.7e391",
        "type": "function",
        "z": "67277992.ab8158",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nvar tenant = global.get('tenant');\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/\"+tenant+\"/MOBILE&thingTypeCode=/\"+tenant+\"/ITEM\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 200,
        "wires": [
            [
                "6927ced5.a07b3",
                "639a8950.0d3238"
            ]
        ]
    },
    {
        "id": "841e92ff.67eac",
        "type": "file",
        "z": "67277992.ab8158",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1090,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "639a8950.0d3238",
        "type": "function",
        "z": "67277992.ab8158",
        "name": "Outbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/GOODS-IN/'+ shortDate + '/outbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 200,
        "wires": [
            [
                "841e92ff.67eac"
            ]
        ]
    },
    {
        "id": "4883815e.c74ee",
        "type": "function",
        "z": "67277992.ab8158",
        "name": "verfied List",
        "func": "//node.warn(\"packing--\");\n//node.warn(msg);\n// if(!msg.payload){\n//     return null;\n// }\nvar groupByGI= {};\nvar gi=\"\";\nvar item={};\nvar process = msg.process;\nvar originalPayload = msg.originalPayload;\n// node.warn(originalPayload);\n\nfor(var i=0; i<originalPayload.length; i++){\n    item = originalPayload[i];\n    if(item.udfs.Retail_ItemBatchID){\n        gi = item.udfs.Retail_ItemBatchID.value;\n        if(!groupByGI.hasOwnProperty(gi)){\n            groupByGI[gi] = {\n                \"verified_count\": 1,\n                \"gi_length\": 0,\n                \"epcList\" : []\n            }\n        }\n        groupByGI[gi].epcList.push({\n            \"epc\": item.serialNumber,\n            \"check_flag\": false,\n            \"validated\": false\n        });\n        groupByGI[gi].gi_length = groupByGI[gi].gi_length +1;\n    }\n}\nnode.warn(\"groupByGI\"); \n// node.warn(groupByAsn);\n// node.warn(\"msg.payload\"); \n// node.warn(msg.payload);\n\nfor(var key in groupByGI){\n    if(groupByGI.hasOwnProperty(key)){\n        if(msg.payload.hasOwnProperty(key)){\n            msg.payload[key] = groupByGI[key];\n        }else{\n            msg.payload[key]=groupByGI[key];\n        }\n    }\n}\n\n// msg.payload = groupByAsn;\nmsg.payload;\n// node.warn(\"antes de enviar\");\n// node.warn(msg);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 400,
        "wires": [
            [
                "a03d3685.61d218",
                "625e64d1.56ce8c"
            ]
        ]
    },
    {
        "id": "aa3fc102.a3795",
        "type": "DataOut",
        "z": "67277992.ab8158",
        "collection": "",
        "name": "GET GIV",
        "path": "/",
        "error": false,
        "x": 480,
        "y": 400,
        "wires": [
            [
                "4883815e.c74ee"
            ]
        ]
    },
    {
        "id": "a03d3685.61d218",
        "type": "DataIn",
        "z": "67277992.ab8158",
        "collection": "",
        "name": "",
        "update": false,
        "path": "/",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "625e64d1.56ce8c",
        "type": "debug",
        "z": "67277992.ab8158",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 830,
        "y": 440,
        "wires": []
    },
    {
        "id": "4e397119.664b5",
        "type": "change",
        "z": "67277992.ab8158",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "originalPayload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 400,
        "wires": [
            [
                "aa3fc102.a3795"
            ]
        ]
    },
    {
        "id": "5437c742.839c18",
        "type": "sqlite",
        "z": "e4de500e.5d6a9",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "get master",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "4e35638.282449c"
            ]
        ]
    },
    {
        "id": "4b421d09.5d6184",
        "type": "function",
        "z": "e4de500e.5d6a9",
        "name": "Matching SKUs",
        "func": "//Parse only skus\nvar original_skus = msg.items_toCopy.map(item => item.SKU_original);\nvar skusStrg = \"\",padded;\noriginal_skus.forEach((sku, index) => {\n    skusStrg += `'${sku}',`;\n});\nskusStrg = skusStrg.slice(0,-1);\n\n// prepare query to get all Assets for each item.\nmsg.topic = \"SELECT * FROM master WHERE UniqueID IN (\"+skusStrg+\");\";\n//node.warn(msg.topic);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 80,
        "wires": [
            [
                "5437c742.839c18"
            ]
        ]
    },
    {
        "id": "4e35638.282449c",
        "type": "function",
        "z": "e4de500e.5d6a9",
        "name": "Copy Metadata",
        "func": "const defaultMapping = [\n    {item:\"SKU\", asset:\"SKU\", copyFlag: true},\n    {item:\"Description\", asset:\"Description\", copyFlag: true},\n    {item:\"DepartmentID\", asset:\"DepartmentID\", copyFlag: true},\n    {item:\"Brand\", asset:\"Brand\", copyFlag: true},\n    {item:\"Style\", asset:\"Style\", copyFlag: true},\n    {item:\"SupplierName\", asset:\"SupplierName\", copyFlag: true},\n    {item:\"Color\", asset:\"Color\", copyFlag: true},\n    {item:\"Size\", asset:\"Size\", copyFlag: true},\n    {item:\"Season\", asset:\"Season\", copyFlag: true},\n    {item:\"Price\", asset:\"Price\", copyFlag: true},\n    {item:\"SupplierItemNum\", asset:\"SupplierItemNum\", copyFlag: true},\n    {item:\"TotalPrice\", asset:\"TotalPrice\", copyFlag: true},\n    ];\n\nvar assetResponse = msg.payload;\nvar allAssets = assetResponse.reduce((acc, current) => {\n    acc[current.UniqueID] = current;\n    return acc;\n},{});\n\nvar copiedData = copyAllMetadata(msg.items_toCopy, allAssets);\n//node.warn(copiedData);\n\nvar sqlvalues = \"\";\nvar sqlvaluesUnknown = \"\";\nvar sqlvaluesNM = \"\";\ncopiedData.forEach( item => {\n    if(item.validated === 1){\n        sqlvalues += `('${item.serialNumber}','${item.Retail_CycleCountDate}','${item.Retail_CycleCountID}','${item.SKU_original}','${item.SKU}','${item.Description}','${item.DepartmentID}','${item.Brand}','${item.Style}','${item.SupplierName}','${item.Color}','${item.Size}','${item.Season}','${item.Price}','${item.SupplierItemNum}','${item.TotalPrice}','${item.check_flag}','${item.validated}','${msg.zone}','${msg.store}','${msg.disposition}'),`;\n    } else{\n        sqlvaluesNM += `('${item.serialNumber}','${item.Retail_CycleCountDate}','${item.Retail_CycleCountID}','${item.SKU_original}','','','','','','','','','','','','','${item.check_flag}','${item.validated}','','','','2'),`;\n        sqlvaluesUnknown += `('${item.serialNumber}','${item.Retail_CycleCountDate}','${item.Retail_CycleCountID}','${item.SKU_original}','','','','','','','','','','','','','${item.check_flag}','${item.validated}','','',''),`;\n        \n    }\n});\nsqlvalues = sqlvalues.slice(0,-1);\nsqlvaluesUnknown = sqlvaluesUnknown.slice(0,-1);\nsqlvaluesNM = sqlvaluesNM.slice(0,-1);\n\nmsg.topic = \"INSERT OR REPLACE INTO CountedItems\"+msg.store+\" (TagID,Retail_CycleCountDate,Retail_CycleCountID,SKU_original,SKU,Description,DepartmentID,Brand,Style,SupplierName,Color,Size,Season,Price,SupplierItemNum,TotalPrice,check_flag,validated,zone,store,Retail_Disposition) VALUES \"+sqlvalues+\";\";\nmsg.topicNM = \"INSERT OR REPLACE INTO CountedItems\"+msg.store+\" (TagID,Retail_CycleCountDate,Retail_CycleCountID,SKU_original,SKU,Description,DepartmentID,Brand,Style,SupplierName,Color,Size,Season,Price,SupplierItemNum,TotalPrice,check_flag,validated,zone,store,Retail_Disposition,matching) VALUES \"+sqlvaluesNM+\";\";\nmsg.topicINV = \"INSERT OR REPLACE INTO Inventory (TagID,Retail_CycleCountDate,Retail_CycleCountID,SKU_original,SKU,Description,DepartmentID,Brand,Style,SupplierName,Color,Size,Season,Price,SupplierItemNum,TotalPrice,check_flag,validated,zone,store,Retail_Disposition) VALUES \"+sqlvalues+\";\";\n\nif(sqlvaluesNM.length > 0){\n     msg.process = 4;\n}\nif(sqlvaluesUnknown){\n    msg.topicUNK = \"INSERT OR REPLACE INTO CountedItemsUnknown\"+msg.store+\" (TagID,Retail_CycleCountDate,Retail_CycleCountID,SKU_original,SKU,Description,DepartmentID,Brand,Style,SupplierName,Color,Size,Season,Price,SupplierItemNum,TotalPrice,check_flag,validated,zone,store,Retail_Disposition) VALUES \"+sqlvaluesUnknown+\";\";\n    msg.process = 3;\n}\n//node.warn(msg.topic);\nreturn msg;\n\n//Functions and constants\nfunction copyAllMetadata(items, assets){\n    var newItems = [];\n    items.forEach(item => {\n        item.check_flag = 1;\n        //node.warn(assets[item.SKU_original]);\n        if(assets[item.SKU_original]){\n            item.validated = 1;\n            newItems.push(copyMetadata(item, assets[item.SKU_original]));\n            \n        }\n        else{\n            item.validated = 0;\n            newItems.push(item);\n        }\n    });\n    \n    return newItems;\n}\n\nfunction copyMetadata(item, asset, dataMap){\n    dataMap = dataMap || defaultMapping;\n    var newItem = item;\n    dataMap.forEach(data => {\n        if(data.copyFlag)\n            newItem[data.item] = asset[data.asset] || newItem[data.item];\n    });\n    return newItem;\n} ",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 80,
        "wires": [
            [
                "99e72fac.f29f5",
                "f8ab52d5.5d6d5",
                "4aedf805.4a4538",
                "35871eed.fb7c12"
            ]
        ]
    },
    {
        "id": "99e72fac.f29f5",
        "type": "sqlite",
        "z": "e4de500e.5d6a9",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Insert or Replace Counted Items",
        "x": 750,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "370d135e.fdfc2c",
        "type": "debug",
        "z": "e4de500e.5d6a9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 320,
        "y": 180,
        "wires": []
    },
    {
        "id": "79382715.56ee98",
        "type": "sqlite",
        "z": "e4de500e.5d6a9",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Insert or Replace Inventory",
        "x": 980,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f8ab52d5.5d6d5",
        "type": "change",
        "z": "e4de500e.5d6a9",
        "name": "to Inventory",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topicINV",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 140,
        "wires": [
            [
                "79382715.56ee98"
            ]
        ]
    },
    {
        "id": "5d55a46c.b1b71c",
        "type": "sqlite",
        "z": "e4de500e.5d6a9",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Insert or Replace Counted Unknown",
        "x": 1070,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d3ed2d23.841b7",
        "type": "change",
        "z": "e4de500e.5d6a9",
        "name": "to Unknown",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topicUNK",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 200,
        "wires": [
            [
                "5d55a46c.b1b71c"
            ]
        ]
    },
    {
        "id": "4aedf805.4a4538",
        "type": "switch",
        "z": "e4de500e.5d6a9",
        "name": "",
        "property": "process",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 200,
        "wires": [
            [
                "d3ed2d23.841b7"
            ]
        ]
    },
    {
        "id": "ad8e838d.ae83a",
        "type": "sqlite",
        "z": "e4de500e.5d6a9",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Insert or Replace Counted Not Matching",
        "x": 1080,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "978efe11.fa94f",
        "type": "change",
        "z": "e4de500e.5d6a9",
        "name": "to NotMatching",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topicNM",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 260,
        "wires": [
            [
                "ad8e838d.ae83a"
            ]
        ]
    },
    {
        "id": "35871eed.fb7c12",
        "type": "switch",
        "z": "e4de500e.5d6a9",
        "name": "",
        "property": "process",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 260,
        "wires": [
            [
                "978efe11.fa94f"
            ]
        ]
    },
    {
        "id": "cf39081.dad45f8",
        "type": "sqlite",
        "z": "ca62b170.d9c7a",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "get master",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "94210f72.f97f5"
            ]
        ]
    },
    {
        "id": "2194597d.52bde6",
        "type": "function",
        "z": "ca62b170.d9c7a",
        "name": "Matching SKUs",
        "func": "//Parse only skus\nvar original_skus = msg.items_toCopy.map(item => item.SKU_original);\nvar skusStrg = \"\",padded;\noriginal_skus.forEach((sku, index) => {\n    skusStrg += `'${sku}',`;\n});\nskusStrg = skusStrg.slice(0,-1);\n\n// prepare query to get all Assets for each item.\nmsg.topic = \"SELECT * FROM master WHERE UniqueID IN (\"+skusStrg+\");\";\n//node.warn(msg.topic);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "cf39081.dad45f8"
            ]
        ]
    },
    {
        "id": "94210f72.f97f5",
        "type": "function",
        "z": "ca62b170.d9c7a",
        "name": "Copy Metadata",
        "func": "const defaultMapping = [\n    {item:\"SKU\", asset:\"SKU\", copyFlag: true},\n    {item:\"Description\", asset:\"Description\", copyFlag: true},\n    {item:\"DepartmentID\", asset:\"DepartmentID\", copyFlag: true},\n    {item:\"Brand\", asset:\"Brand\", copyFlag: true},\n    {item:\"Style\", asset:\"Style\", copyFlag: true},\n    {item:\"SupplierName\", asset:\"SupplierName\", copyFlag: true},\n    {item:\"Color\", asset:\"Color\", copyFlag: true},\n    {item:\"Size\", asset:\"Size\", copyFlag: true},\n    {item:\"Season\", asset:\"Season\", copyFlag: true},\n    {item:\"Price\", asset:\"Price\", copyFlag: true},\n    {item:\"SupplierItemNum\", asset:\"SupplierItemNum\", copyFlag: true},\n    {item:\"TotalPrice\", asset:\"TotalPrice\", copyFlag: true},\n    ];\n\nvar assetResponse = msg.payload;\nvar allAssets = assetResponse.reduce((acc, current) => {\n    acc[current.UniqueID] = current;\n    return acc;\n},{});\n\nvar copiedData = copyAllMetadata(msg.items_toCopy, allAssets);\n//node.warn(copiedData);\n\nvar sqlvalues = \"\";\ncopiedData.forEach( item => {\n    if(item.validated === 1){\n        sqlvalues += `('${item.serialNumber}','${item.SKU_original}','${item.SKU}','${item.Description}','${item.DepartmentID}','${item.Brand}','${item.Style}','${item.SupplierName}','${item.Color}','${item.Size}','${item.Season}','${item.Price}','${item.SupplierItemNum}','${item.TotalPrice}','${item.check_flag}','${item.validated}','${msg.zone}','${msg.store}','${msg.disposition}'),`;\n    } else{\n        sqlvalues += `('${item.serialNumber}','${item.SKU_original}','','','','','','','','','','','','','${item.check_flag}','${item.validated}','','',''),`;\n    }\n});\nsqlvalues = sqlvalues.slice(0,-1);\nmsg.topic = \"INSERT OR REPLACE INTO Inventory (TagID,SKU_original,SKU,Description,DepartmentID,Brand,Style,SupplierName,Color,Size,Season,Price,SupplierItemNum,TotalPrice,check_flag,validated,zone,store,Retail_Disposition) VALUES \"+sqlvalues+\";\";\n//node.warn(msg.topic);\nreturn msg;\n\n//Functions and constants\nfunction copyAllMetadata(items, assets){\n    var newItems = [];\n    items.forEach(item => {\n        item.check_flag = 1;\n        //node.warn(assets[item.SKU_original]);\n        if(assets[item.SKU_original]){\n            item.validated = 1;\n            newItems.push(copyMetadata(item, assets[item.SKU_original]));\n            \n        }\n        else{\n            item.validated = 0;\n            newItems.push(item);\n        }\n    });\n    \n    return newItems;\n}\n\nfunction copyMetadata(item, asset, dataMap){\n    dataMap = dataMap || defaultMapping;\n    var newItem = item;\n    dataMap.forEach(data => {\n        if(data.copyFlag)\n            newItem[data.item] = asset[data.asset] || newItem[data.item];\n    });\n    return newItem;\n} ",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 160,
        "wires": [
            [
                "9cbc2852.758d18"
            ]
        ]
    },
    {
        "id": "9cbc2852.758d18",
        "type": "sqlite",
        "z": "ca62b170.d9c7a",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Insert or Replace Master",
        "x": 710,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "467cc09e.7d4ae",
        "type": "debug",
        "z": "ca62b170.d9c7a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 300,
        "y": 260,
        "wires": []
    },
    {
        "id": "d33185ae.9acb78",
        "type": "debug",
        "z": "ca62b170.d9c7a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 650,
        "y": 260,
        "wires": []
    },
    {
        "id": "2e74053c.12483a",
        "type": "switch",
        "z": "a0c7a088.bcdca",
        "name": "",
        "property": "process",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "packing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "shipping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "receiving",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "cancelled",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 170,
        "y": 400,
        "wires": [
            [
                "67e8aa83.904744"
            ],
            [
                "67e8aa83.904744"
            ],
            [
                "d24c8cb2.68611"
            ],
            [
                "b0b5a568.dea328"
            ]
        ]
    },
    {
        "id": "8e0ab0a.90a375",
        "type": "change",
        "z": "a0c7a088.bcdca",
        "name": "API response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "APIresponse",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 260,
        "wires": [
            [
                "f49346cb.833398"
            ]
        ]
    },
    {
        "id": "67e8aa83.904744",
        "type": "function",
        "z": "a0c7a088.bcdca",
        "name": "packing or shipping",
        "func": "var originalPayload = msg.payload || {};\nmsg.originalPayload = originalPayload;\n\n//Parse only skus\nvar original_epcs = originalPayload.map(item => item.serialNumber);\nvar epcsStrg = \"\";\noriginal_epcs.forEach((epc, index) => {\n    epcsStrg += `'${epc}',`;\n});\nepcsStrg = epcsStrg.slice(0,-1);\n\nif(msg.process === \"packing\"){\n    msg.reflist=msg.ASN+\"I0001\";\n}\nif(msg.process === \"shipping\"){\n    msg.reflist=msg.ASN+\"I0002\";\n}\n// prepare query to get all Assets for each item.\nmsg.topic = \"SELECT * FROM SupplyChain WHERE serialNumber in (\"+epcsStrg+\")\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 260,
        "wires": [
            [
                "eb397308.7750c"
            ]
        ]
    },
    {
        "id": "eb397308.7750c",
        "type": "sqlite",
        "z": "a0c7a088.bcdca",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SupplyChain Validator",
        "x": 580,
        "y": 260,
        "wires": [
            [
                "302a557a.c76aea"
            ]
        ]
    },
    {
        "id": "302a557a.c76aea",
        "type": "function",
        "z": "a0c7a088.bcdca",
        "name": "",
        "func": "var ProcessedTime = new Date().getTime();\nvar availlableData = msg.payload;\nvar APIresponse = [], toUpdate = [];\nvar epcsStrg = \"\";\nvar message = \"\", item = \"\";\nmsg.aux = 0;\nmsg.response = 0;\n\nfor(var j=0; j < msg.count ; j++){\n    item = msg.serialNumber[j];\n\t//node.warn(item);\n\tif(availlableData){\n        if(availlableData.length > 0){\n            node.warn(availlableData[j]);\n    \t\tif(availlableData[j] && (availlableData[j].ASN !== msg.ASN)){\n                message = {\"ERROR\":msg.process+\" not processed for \" + item + \" already exists in ASN \" +  availlableData[j].ASN};\n    \t\t\t//node.warn(\"Updating API ERROR mesage: \"+message);\n    \t\t\tmsg.aux=1;\n    \t\t\tAPIresponse.push(message);\n    \t\t}else{\n    \t\t\t//if(msg.process !== \"packing\"){\n    \t\t\t    msg.response ++;\n    \t\t\t\tepcsStrg += `'${item}',`;\n    \t\t\t\ttoUpdate.push({item:item});\n    \t\t\t//}\n    \t\t}\n    \t}\n    \telse{\n    \t\t//if(msg.process !== \"packing\"){\n    \t\t    msg.response ++;\n    \t\t\tepcsStrg += `'${item}',`;\n    \t\t\ttoUpdate.push({item:item});\n    \t\t//}\n    \t\n    \t}\n\t}\n}\n\nif(epcsStrg){\n\tepcsStrg = epcsStrg.slice(0,-1);\n\tmsg.topic = \"SELECT * FROM Inventory WHERE TagID in (\"+epcsStrg+\")\";\n\tmsg.serialNumber = toUpdate;\n}\nmsg.payload=\"\";\nmsg.APIresponse=APIresponse;\nreturn msg;\t",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 260,
        "wires": [
            [
                "96cdbcbe.780b7",
                "02cf1858b7cc6c8a"
            ]
        ]
    },
    {
        "id": "2e1873ea.e857bc",
        "type": "sqlite",
        "z": "a0c7a088.bcdca",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Inventory Data",
        "x": 1200,
        "y": 340,
        "wires": [
            [
                "91edb520.2d4b78",
                "11406a182636194f"
            ]
        ]
    },
    {
        "id": "91edb520.2d4b78",
        "type": "function",
        "z": "a0c7a088.bcdca",
        "name": "",
        "func": "var ProcessedTime = new Date().getTime();\nvar ProcessedTimeDxb = new Date().toLocaleString(\"en-US\", {timeZone: \"Asia/Dubai\"});\nvar availlableData = msg.payload;\n\nnode.warn(\"response from sqlite query\");\nnode.warn(availlableData);\n\nvar serial, messagej = '',SKU,SKU_original,TagID,Brand, DepartmentID,items={},toItems=[],toBO={};\nvar toProcess = msg.serialNumber, store_id;\nvar APIresponse = [];\n\nnode.warn(\"toProcess value\");\nnode.warn(toProcess);\n\n//node.warn(\"availlableData: \"+availlableData.length+\" vs toProcess: \" +toProcess.length);\n\nif(availlableData.length === toProcess.length){\n    for(i=0;i<toProcess.length;i++){\n        \n        for(j=0;j<availlableData.length;j++){\n            TagID=availlableData[j].TagID;\n            \n            if(TagID === toProcess[i].item){\n                serial = msg.ASN+\"_\"+toProcess[i].item;\n                SKU = availlableData[j].SKU;\n                SKU_original = availlableData[j].SupplierItemNum;\n                DepartmentID = availlableData[j].DepartmentID;\n                Description = availlableData[j].Description;\n                Brand = availlableData[j].Brand;\n                \n                if(msg.process==='packing'){\n                    store_id = msg.OriginLocation;\n                }\n                \n                if(msg.process==='shipping'){\n                    store_id = msg.ReceivingLocation;\n                }\n                \n                items = {\n                    \"tag_id\": toProcess[i].item,\n                    \"original_location\": msg.OriginLocation,\n                    \"store_id\": store_id,\n                    \"departmentid\": availlableData[j].DepartmentID,\n                    \"sku\": availlableData[j].SKU,\n                    \"brand\": availlableData[j].Brand,\n                    \"process_status\":msg.processStatus\n                };\n                \n                toItems.push(items);\n                messagej += `('${serial}','${ProcessedTime}','${toProcess[i].item}','${msg.ASN}','${msg.OriginLocation}','${store_id}','${msg.zone}','${Description}','${Brand}','${DepartmentID}','${msg.process}','${msg.processStatus}','${msg.user}','${SKU_original}','${SKU}','${msg.deviceId}','${msg.remarks}'),`;\n            }\n        }\n    }\n}\nelse{\n    node.warn(\"ERROR: \"+msg.process+\" not processed. Items don't exist in Inventory, searching Item Master instead...\");\n    msg.aux = 1;\n    msg.availlableData = availlableData;\n    for(k=0;k<toProcess.length;k++){\n        items=toProcess[k].item;\n        toItems.push({EPC:items});\n    }\n    msg.payload = toItems;\n}\n\nif(messagej){\n\tmessagej = messagej.slice(0,-1);\n\ttoBO ={\n        \"asn\": msg.ASN,\n        \"source\": msg.OriginLocation,\n        \"destination\": msg.ReceivingLocation,\n        \"status\": msg.process,\n        \"event_date\": ProcessedTimeDxb,\n        \"event_remarks\": msg.remarks,\n        \"event_ref_id\":msg.reflist,\n        \"items\": toItems\n    };\n    msg.toBO = toBO;\n    //node.warn(msg.toBO);\n\tmsg.topic = \"INSERT OR REPLACE INTO SupplyChain (ID,ProcessedTime,serialNumber,ASN,OriginStoreID,DestinationStoreID,zone,Description,Brand,DepartmentID,Process,ProcessStatus,user,SKU_original,SKU,deviceId,remarks) VALUES \"+messagej+\";\";\n\tif(msg.process === \"shipping\"){\n\t    msg.topicTransferOrder = \"UPDATE TransferOrders SET Process = 'Shipped' WHERE ASN ='\"+msg.ASN+\"';\";\n\t}\n\t//msg.whatsapp=\"Confirming processed \"+ msg.process + \" of \"+message.length  +\" items in API for ASN \" +msg.ASN;\n    msg.payload={\"response\":\"Supply Chain - Posted successfully\"};\n    node.warn(\"Confirming processed in API for ASN \"+ msg.ASN + \" and \"+ toProcess.length +\" items.\");\n    msg.statusCode = 200;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 340,
        "wires": [
            [
                "374f3fe6.eb21",
                "0938a003801cf8b4"
            ]
        ]
    },
    {
        "id": "582701d0.4d0ac",
        "type": "sqlite",
        "z": "a0c7a088.bcdca",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SupplyChain Data",
        "x": 2110,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "96cdbcbe.780b7",
        "type": "switch",
        "z": "a0c7a088.bcdca",
        "name": "Evaluator",
        "property": "aux",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 960,
        "y": 300,
        "wires": [
            [
                "7e55193.17320e8"
            ],
            [
                "2e1873ea.e857bc"
            ]
        ]
    },
    {
        "id": "7e55193.17320e8",
        "type": "function",
        "z": "a0c7a088.bcdca",
        "name": "",
        "func": "node.warn(msg.count);\nnode.warn(msg.response);\nvar message = [];\nmessage = msg.serialNumber;\nif(msg.count === msg.response){\n    msg.whatsapp=\"Confirming processed \"+ msg.process + \" of \"+message.length  +\" items in API for ASN \" +msg.ASN;\n    msg.payload={\"response\":\"Supply Chain - Posted successfully\"};\n    node.warn(\"Confirming processed in API for ASN \"+ msg.ASN);\n    msg.statusCode = 200;\n    return [msg, null];\n}else{\n    msg.whatsapp=\"ERROR ocurred when processing \"+ msg.process + \" of \"+message.length  +\" items in API for ASN \" +msg.ASN +\". Message received from Mobile process: \" + JSON.stringify(msg.APIresponse);\n    node.warn(\"ERROR ocurred when processing ASN \"+ msg.ASN+\". Message received from Mobile process: \" + JSON.stringify(msg.APIresponse));\n    msg.statusCode = 404;\n    return [null, msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 220,
        "wires": [
            [
                "f49346cb.833398"
            ],
            [
                "8e0ab0a.90a375"
            ]
        ]
    },
    {
        "id": "f49346cb.833398",
        "type": "http response",
        "z": "a0c7a088.bcdca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1470,
        "y": 215,
        "wires": []
    },
    {
        "id": "7fc2d919.e9aca8",
        "type": "http response",
        "z": "a0c7a088.bcdca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2070,
        "y": 300,
        "wires": []
    },
    {
        "id": "d24c8cb2.68611",
        "type": "function",
        "z": "a0c7a088.bcdca",
        "name": "receiving",
        "func": "var originalPayload = msg.payload || {};\nmsg.originalPayload = originalPayload;\n\n//Parse only skus\nvar original_epcs = originalPayload.map(item => item.serialNumber);\nvar epcsStrg = \"\";\noriginal_epcs.forEach((epc, index) => {\n    epcsStrg += `'${epc}',`;\n});\nepcsStrg = epcsStrg.slice(0,-1);\n\nif(msg.process === \"receiving\"){\n    msg.reflist=msg.ASN+\"I0003\";\n}\n// prepare query to get all Assets for each item.\nmsg.topic = \"SELECT * FROM SupplyChain WHERE serialNumber in (\"+epcsStrg+\")\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 480,
        "wires": [
            [
                "5a7165f0.a45bfc"
            ]
        ]
    },
    {
        "id": "5a7165f0.a45bfc",
        "type": "sqlite",
        "z": "a0c7a088.bcdca",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SupplyChain Validator",
        "x": 580,
        "y": 480,
        "wires": [
            [
                "fdd464eb.d5bf08"
            ]
        ]
    },
    {
        "id": "fdd464eb.d5bf08",
        "type": "function",
        "z": "a0c7a088.bcdca",
        "name": "",
        "func": "var ProcessedTime = new Date().getTime();\nvar ProcessedTimeDxb = new Date().toLocaleString(\"en-US\", {timeZone: \"Asia/Dubai\"});\nvar scData = msg.payload;\nvar toUpdate = [];\nvar epcsStrg = \"\";\nvar message = \"\", item = \"\", messagej = \"\", Brand, DepartmentID,items={},toItems=[],toBO={};\nmsg.aux = 0;\nmsg.response = 0;\n\nfor(var j=0; j < msg.count ; j++){\n    if(scData.length > 0 ){\n        item = scData[j].serialNumber;\n    \t//node.warn(item);\n        //if(scData.length > 0){\n    \t\t//node.warn(\"receiving: \"+j+\" for \"+item);\n    \t\tif(scData[j].process !== \"packing\" && msg.ASN !== \"\"){\n    \t\t\tmsg.response ++;\n    \t\t\tserial = msg.ASN+\"_\"+ item;\n    \t\t\tDepartmentID = scData[j].DepartmentID;\n                Brand = scData[j].Brand;\n                Description = scData[j].Description;\n    \t\t\tepcsStrg += `'${item}',`;\n    \t\t\tmessagej += `('${serial}','${ProcessedTime}','${item}','${msg.ASN}','${msg.OriginLocation}','${msg.ReceivingLocation}','${msg.zone}','${Description}','${Brand}','${DepartmentID}','${msg.process}','${msg.processStatus}','${msg.user}','${scData[j].SKU_original}','${scData[j].SKU}','${msg.deviceId}','${msg.remarks}'),`;\n    \t\t\titems = {\n                    \"tag_id\": item,\n                    \"original_location\": scData[j].OriginStoreID,\n                    \"store_id\": scData[j].DestinationStoreID,\n                    \"departmentid\": DepartmentID,\n                    \"sku\": scData[j].SKU,\n                    \"brand\": Brand,\n                    \"process_status\":scData[j].ProcessStatus\n                };\n                toItems.push(items);\n    \t\t}else{\n    \t\t\tmessage = {ERROR:\"Receiving of ASN \"+msg.ASN+\" not possible\"};\n                node.warn(message);\n                msg.payload=message;\n                msg.APIresponse = message;\n                msg.aux=1;\n                msg.statusCode = 400;\n                return msg;\n    \t\t\t\n    \t\t}\n    \t//}\n    }\n    else{\n        message = {ERROR:\"Receiving of ASN \"+msg.ASN+\" not possible\"};\n        node.warn(message);\n        msg.payload=message;\n        msg.APIresponse = message;\n        msg.aux=1;\n        msg.statusCode = 400;\n        return msg;\n    }\n}\n\nif(epcsStrg){\n\tepcsStrg = epcsStrg.slice(0,-1);\n\tmessagej = messagej.slice(0,-1);\n\ttoBO ={\n        \"asn\": msg.ASN,\n        \"source\": msg.OriginLocation,\n        \"destination\": msg.ReceivingLocation,\n        \"status\": msg.process,\n        \"event_date\": ProcessedTimeDxb,\n        \"event_remarks\": msg.remarks,\n        \"event_ref_id\":msg.reflist,\n        \"items\": toItems\n    };\n    msg.toBO = toBO;\n\tmsg.topicReceiving = \"INSERT OR REPLACE INTO SupplyChainReceived (ID,ProcessedTime,serialNumber,ASN,OriginStoreID,DestinationStoreID,zone,Description,Brand,DepartmentID,Process,ProcessStatus,user,SKU_original,SKU,deviceId,remarks) VALUES \"+messagej+\";\";\n\tmsg.topicSupplyChain = \"DELETE FROM SupplyChain WHERE serialNumber in (\"+epcsStrg+\")\";\n\tmsg.topicTransferOrder = \"UPDATE TransferOrders SET Process = 'Received' WHERE ASN ='\"+msg.ASN+\"';\";\n}\nmsg.payload={\"response\":\"Supply Chain - Posted successfully\"};\nnode.warn(\"Confirming processed in API for ASN \"+ msg.ASN + \" and \"+ scData.length +\" items.\");\nmsg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 480,
        "wires": [
            [
                "2777cb02.7dbc04"
            ]
        ]
    },
    {
        "id": "2777cb02.7dbc04",
        "type": "switch",
        "z": "a0c7a088.bcdca",
        "name": "Evaluator",
        "property": "aux",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 960,
        "y": 560,
        "wires": [
            [
                "51d94717.a331f8"
            ],
            [
                "5154840a.2d298c",
                "a02a4bf.bfb73b8",
                "4f808d38.c7b3f4",
                "fa3403c1.6db37"
            ]
        ]
    },
    {
        "id": "51d94717.a331f8",
        "type": "link out",
        "z": "a0c7a088.bcdca",
        "name": "SCfail_APIreceiving",
        "links": [
            "432d6e6.349089"
        ],
        "x": 1055,
        "y": 500,
        "wires": []
    },
    {
        "id": "432d6e6.349089",
        "type": "link in",
        "z": "a0c7a088.bcdca",
        "name": "SC_APIresponse",
        "links": [
            "51d94717.a331f8",
            "7acabde0.0cbde4"
        ],
        "x": 1035,
        "y": 220,
        "wires": [
            [
                "7e55193.17320e8"
            ]
        ]
    },
    {
        "id": "5154840a.2d298c",
        "type": "change",
        "z": "a0c7a088.bcdca",
        "name": "SupplyChain Receiving",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topicReceiving",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 580,
        "wires": [
            [
                "5e3d4af0.5071b4"
            ]
        ]
    },
    {
        "id": "a02a4bf.bfb73b8",
        "type": "change",
        "z": "a0c7a088.bcdca",
        "name": "Delete from SupplyChain",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topicSupplyChain",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 620,
        "wires": [
            [
                "5e3d4af0.5071b4"
            ]
        ]
    },
    {
        "id": "a45c3dfe.70058",
        "type": "change",
        "z": "a0c7a088.bcdca",
        "name": "Update TransferOrder status",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topicTransferOrder",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 660,
        "wires": [
            [
                "8db63448.443dc8"
            ]
        ]
    },
    {
        "id": "8db63448.443dc8",
        "type": "sqlite",
        "z": "a0c7a088.bcdca",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "TransferOrder Data",
        "x": 1490,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "5e3d4af0.5071b4",
        "type": "sqlite",
        "z": "a0c7a088.bcdca",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SupplyChain Data",
        "x": 1490,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "4f808d38.c7b3f4",
        "type": "http response",
        "z": "a0c7a088.bcdca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 540,
        "wires": []
    },
    {
        "id": "f99755d0.5b9e38",
        "type": "change",
        "z": "a0c7a088.bcdca",
        "name": "Update TransferOrder status",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "topicTransferOrder",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 380,
        "wires": [
            [
                "fd655e96.e8553"
            ]
        ]
    },
    {
        "id": "fd655e96.e8553",
        "type": "sqlite",
        "z": "a0c7a088.bcdca",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "TransferOrder Data",
        "x": 2110,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b0b5a568.dea328",
        "type": "function",
        "z": "a0c7a088.bcdca",
        "name": "cancelled",
        "func": "var originalPayload = msg.payload || {};\nmsg.originalPayload = originalPayload;\n\n//Parse only skus\nvar original_epcs = originalPayload.map(item => item.serialNumber);\nvar epcsStrg = \"\";\noriginal_epcs.forEach((epc, index) => {\n    epcsStrg += `'${epc}',`;\n});\nepcsStrg = epcsStrg.slice(0,-1);\n\nif(msg.process === \"cancelled\"){\n    msg.reflist=msg.ASN+\"I0007\";\n}\n// prepare query to get all Assets for each item.\nmsg.topic = \"SELECT * FROM SupplyChain WHERE serialNumber in (\"+epcsStrg+\")\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 640,
        "wires": [
            [
                "52de963e.c9b768"
            ]
        ]
    },
    {
        "id": "52de963e.c9b768",
        "type": "sqlite",
        "z": "a0c7a088.bcdca",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SupplyChain Validator",
        "x": 580,
        "y": 640,
        "wires": [
            [
                "fcc9ea3d.4886a8"
            ]
        ]
    },
    {
        "id": "fcc9ea3d.4886a8",
        "type": "function",
        "z": "a0c7a088.bcdca",
        "name": "",
        "func": "var ProcessedTime = new Date().getTime();\nvar ProcessedTimeDxb = new Date().toLocaleString(\"en-US\", {timeZone: \"Asia/Dubai\"});\nvar scData = msg.payload;\nvar toUpdate = [];\nvar epcsStrg = \"\";\nvar message = \"\", item = \"\", messagej = \"\", items={}, toItems=[], toBO={};\nmsg.aux = 0;\nmsg.response = 0;\n\nfor(var j=0; j < msg.count ; j++){\n    if(scData.length > 0){\n        item = scData[j].serialNumber;\n    \t//node.warn(item);\n        //if(scData.length > 0){\n    \t\t//node.warn(\"receiving: \"+j+\" for \"+item);\n    \t\tif(scData[j].process !== \"packing\" && msg.ASN !== \"\"){\n    \t\t\tmsg.response ++;\n    \t\t\tserial = msg.ASN+\"_\"+ item;\n    \t\t\tepcsStrg += `'${item}',`;\n    \t\t\titems = {\n                    \"tag_id\": item,\n                    \"original_location\": scData[j].OriginStoreID,\n                    \"store_id\": scData[j].DestinationStoreID,\n                    \"departmentid\": scData[j].DepartmentID,\n                    \"sku\": scData[j].SKU,\n                    \"brand\": scData[j].Brand,\n                    \"process_status\":scData[j].ProcessStatus\n                };\n                toItems.push(items);\n    \t\t}else{\n    \t\t\tmessage = {ERROR:\"Cancellation of ASN \"+msg.ASN+\" not possible\"};\n                node.warn(message);\n                msg.payload=message;\n                msg.APIresponse = message;\n                msg.aux=1;\n                msg.statusCode = 400;\n                return msg;\n    \t\t\t\n    \t\t}\n    \t//}\n    }\n    else{\n        message = {ERROR:\"Cancellation of ASN \"+msg.ASN+\" not possible. Shipping does not exist.\"};\n        node.warn(message);\n        msg.payload=message;\n        msg.APIresponse = message;\n        msg.aux=1;\n        msg.statusCode = 400;\n        return msg;\n    }\n}\n\nif(epcsStrg){\n\tepcsStrg = epcsStrg.slice(0,-1);\n\ttoBO ={\n        \"asn\": msg.ASN,\n        \"source\": msg.OriginLocation,\n        \"destination\": msg.ReceivingLocation,\n        \"status\": msg.process,\n        \"event_date\": ProcessedTimeDxb,\n        \"event_remarks\": msg.remarks,\n        \"event_ref_id\":msg.reflist,\n        \"items\": toItems\n    };\n    msg.toBO = toBO;\n\tmsg.topicSupplyChain = \"DELETE FROM SupplyChain WHERE serialNumber in (\"+epcsStrg+\")\";\n\tmsg.topicTransferOrder = \"UPDATE TransferOrders SET Process = 'Cancelled' WHERE ASN ='\"+msg.ASN+\"';\";\n}\nmsg.payload={\"response\":\"Supply Chain - Posted successfully\"};\nnode.warn(\"Confirming processed in API for ASN \"+ msg.ASN + \" and \"+ scData.length +\" items.\");\nmsg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 640,
        "wires": [
            [
                "2777cb02.7dbc04"
            ]
        ]
    },
    {
        "id": "ce8278c1.5c2568",
        "type": "comment",
        "z": "a0c7a088.bcdca",
        "name": "SAVING TO SQLITE WORKFLOW",
        "info": "",
        "x": 260,
        "y": 160,
        "wires": []
    },
    {
        "id": "d40585cc.c816b8",
        "type": "link in",
        "z": "a0c7a088.bcdca",
        "name": "SC_toBO",
        "links": [
            "fa3403c1.6db37",
            "3e6a6621.7983aa",
            "796d503e28ddbbd1",
            "3906f2e6c82a5277",
            "3d13d54d720f758f",
            "c8ee44558d3fff98",
            "8d9321573002a730",
            "0047f10c1c034457"
        ],
        "x": 135,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "fa3403c1.6db37",
        "type": "link out",
        "z": "a0c7a088.bcdca",
        "name": "SC_msgBO",
        "links": [
            "d40585cc.c816b8"
        ],
        "x": 1055,
        "y": 660,
        "wires": []
    },
    {
        "id": "3e6a6621.7983aa",
        "type": "link out",
        "z": "a0c7a088.bcdca",
        "name": "SC_msgBO",
        "links": [
            "d40585cc.c816b8"
        ],
        "x": 1755,
        "y": 300,
        "wires": []
    },
    {
        "id": "374f3fe6.eb21",
        "type": "debug",
        "z": "a0c7a088.bcdca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 460,
        "wires": []
    },
    {
        "id": "11406a182636194f",
        "type": "debug",
        "z": "a0c7a088.bcdca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 420,
        "wires": []
    },
    {
        "id": "02cf1858b7cc6c8a",
        "type": "debug",
        "z": "a0c7a088.bcdca",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "0938a003801cf8b4",
        "type": "switch",
        "z": "a0c7a088.bcdca",
        "name": "Evaluator",
        "property": "aux",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1540,
        "y": 340,
        "wires": [
            [
                "68f7b6c6899c8099"
            ],
            [
                "3e6a6621.7983aa",
                "582701d0.4d0ac",
                "7fc2d919.e9aca8"
            ]
        ]
    },
    {
        "id": "5f2aa708473a9a61",
        "type": "link out",
        "z": "a0c7a088.bcdca",
        "name": "SC_error",
        "mode": "link",
        "links": [
            "d07a34538a6d7109",
            "4bac1c16845493ce"
        ],
        "x": 1995,
        "y": 160,
        "wires": []
    },
    {
        "id": "d07a34538a6d7109",
        "type": "link in",
        "z": "a0c7a088.bcdca",
        "name": "SC_APIerror",
        "links": [
            "5f2aa708473a9a61"
        ],
        "x": 1375,
        "y": 140,
        "wires": [
            [
                "f49346cb.833398"
            ]
        ]
    },
    {
        "id": "68f7b6c6899c8099",
        "type": "EPC-to-GS1",
        "z": "a0c7a088.bcdca",
        "name": "",
        "x": 1790,
        "y": 220,
        "wires": [
            [
                "d6f5d5fa5ff80a55"
            ]
        ]
    },
    {
        "id": "d6f5d5fa5ff80a55",
        "type": "function",
        "z": "a0c7a088.bcdca",
        "name": "",
        "func": "var results = msg.payload;\nvar barcodeStrg = \"\", barcode, EPC;\nvar reference = [];\n\n//node.warn(\"DECODE RESULT\");\n//node.warn(results);\n\nfor(i=0;i<results.length;i++){\n    barcode = results[i].barcode;\n    EPC = results[i].epc;\n    reference.push({EPC:EPC, barcode:barcode});\n    barcodeStrg += `'${barcode}',`;\n}\n//node.warn(\"REFERENCE\");\n//node.warn(reference);\n//node.warn(barcodeStrg);\n\nif(barcodeStrg){\n\tbarcodeStrg = barcodeStrg.slice(0,-1);\n\tmsg.topic = \"SELECT * FROM master WHERE GTIN in (\"+barcodeStrg+\")\";\n}\nmsg.payload=\"\";\nmsg.serialNumber = reference;\nnode.warn(msg.serialNumber);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 220,
        "wires": [
            [
                "bfa6aac56d791f71"
            ]
        ]
    },
    {
        "id": "bfa6aac56d791f71",
        "type": "sqlite",
        "z": "a0c7a088.bcdca",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Get from master",
        "x": 2100,
        "y": 220,
        "wires": [
            [
                "4193d6932849dee6"
            ]
        ]
    },
    {
        "id": "4193d6932849dee6",
        "type": "function",
        "z": "a0c7a088.bcdca",
        "name": "",
        "func": "var ProcessedTime = new Date().getTime();\nvar ProcessedTimeDxb = new Date().toLocaleString(\"en-US\", {timeZone: \"Asia/Dubai\"});\nvar availlableData = msg.payload;\n//node.warn(availlableData)\nvar serial, messagej = '',GTIN,SKU,SKU_original,Brand,DepartmentID,items={},toItems=[],toBO={};\nvar toProcess = msg.serialNumber, store_id;\nvar APIresponse = [];\n\nfor(i=0;i<toProcess.length;i++){\n    //node.warn(\"toProcess: \"+i);\n    serial=\"\";\n    for(j=0;j<availlableData.length;j++){\n        //node.warn(\"availlableData: \"+j);\n        if(availlableData[j].GTIN){\n                GTIN=availlableData[j].GTIN;\n        }\n        else{\n            GTIN = \"\";\n        }\n        if(GTIN === toProcess[i].barcode){\n            serial = msg.ASN+\"_\"+toProcess[i].EPC;\n            if(availlableData[j].SKU){\n                SKU = availlableData[j].SKU;\n            }\n            else{\n                SKU = \"\";\n            }\n            if(availlableData[j].SupplierItemNum){\n                SKU_original = availlableData[j].SupplierItemNum;\n            }else{\n                SKU_original = \"\";\n            }\n            if(availlableData[j].DepartmentID){\n                DepartmentID = availlableData[j].DepartmentID;\n            }else{\n                DepartmentID = \"\";\n            }\n            if(availlableData[j].Description){\n                Description = availlableData[j].Description;\n            }else{\n                Description = \"\";\n            }\n            if(availlableData[j].Brand){\n                Brand = availlableData[j].Brand;\n            }else{\n                Brand = \"\";\n            }\n        }\n    }\n    if(serial===\"\"){\n        serial = msg.ASN+\"_\"+toProcess[i].EPC;\n        DepartmentID=\"\";\n        SKU=\"\";\n        Brand=\"\";\n        Description=\"\";\n        SKU_original=\"\";\n    }\n    if(msg.process==='packing'){\n        store_id = msg.OriginLocation;\n    }\n                \n    if(msg.process==='shipping'){\n        store_id = msg.ReceivingLocation;\n    }\n    //node.warn(toProcess[i].EPC);\n    items = {\n        \"tag_id\": toProcess[i].EPC,\n        \"original_location\": msg.OriginLocation,\n        \"store_id\": store_id,\n        \"departmentid\": DepartmentID,\n        \"sku\": SKU,\n        \"brand\": Brand,\n        \"process_status\":msg.processStatus\n    };\n                \n    toItems.push(items);\n    messagej += `('${serial}','${ProcessedTime}','${toProcess[i].EPC}','${msg.ASN}','${msg.OriginLocation}','${store_id}','${msg.zone}','${Description}','${Brand}','${DepartmentID}','${msg.process}','${msg.processStatus}','${msg.user}','${SKU_original}','${SKU}','${msg.deviceId}','${msg.remarks}'),`;\n}\n\n\n\n\nif(messagej){\n\tmessagej = messagej.slice(0,-1);\n\ttoBO ={\n        \"asn\": msg.ASN,\n        \"source\": msg.OriginLocation,\n        \"destination\": msg.ReceivingLocation,\n        \"status\": msg.process,\n        \"event_date\": ProcessedTimeDxb,\n        \"event_remarks\": msg.remarks,\n        \"event_ref_id\":msg.reflist,\n        \"items\": toItems\n    };\n    msg.toBO = toBO;\n    //node.warn(msg.toBO);\n\tmsg.topic = \"INSERT OR REPLACE INTO SupplyChain (ID,ProcessedTime,serialNumber,ASN,OriginStoreID,DestinationStoreID,zone,Description,Brand,DepartmentID,Process,ProcessStatus,user,SKU_original,SKU,deviceId,remarks) VALUES \"+messagej+\";\";\n\tif(msg.process === \"shipping\"){\n\t    msg.topicTransferOrder = \"UPDATE TransferOrders SET Process = 'Shipped' WHERE ASN ='\"+msg.ASN+\"';\";\n\t}\n\t//msg.whatsapp=\"Confirming processed \"+ msg.process + \" of \"+message.length  +\" items in API for ASN \" +msg.ASN;\n    msg.payload={\"response\":\"Supply Chain - Posted successfully\"};\n    node.warn(\"Confirming processed in API for ASN \"+ msg.ASN + \" and \"+ toProcess.length +\" items.\");\n    msg.statusCode = 200;\n}\n//node.warn(\"MESSAGE TO PAYLOAD\");\n//node.warn(msg.toBO);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2280,
        "y": 220,
        "wires": [
            [
                "badd09c82f0e64d5",
                "3d13d54d720f758f",
                "3966d19dac25449e"
            ]
        ]
    },
    {
        "id": "badd09c82f0e64d5",
        "type": "sqlite",
        "z": "a0c7a088.bcdca",
        "mydb": "",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SupplyChain Data",
        "x": 2530,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3966d19dac25449e",
        "type": "http response",
        "z": "a0c7a088.bcdca",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2490,
        "y": 220,
        "wires": []
    },
    {
        "id": "3d13d54d720f758f",
        "type": "link out",
        "z": "a0c7a088.bcdca",
        "name": "SC_msgBO",
        "links": [
            "d40585cc.c816b8"
        ],
        "x": 2455,
        "y": 180,
        "wires": []
    },
    {
        "id": "cf2ceac6.a19248",
        "type": "function",
        "z": "4b99f82d.4cd448",
        "name": "File",
        "func": "var list = msg.payload;\nif(!list){\n    //node.warn(\"Directory is empty, FTP process will finish\");\n    return null;\n}\nvar filename = '';\nvar filesArray = [];\nfor (var i=0; i<list.length; i++){\n    var name = list[i].name;\n    if(name.indexOf(msg.fileName) != -1) {\n        //node.warn(name);\n        filename =  name;\n        filesArray.push(name);\n    }\n}\n\nif(!filename){\n    //node.warn(\"No File with the pattern found, FTP process will finish\");\n    return null;\n}\n//node.warn(filesArray);\nmsg.localFilename = msg.localFilename +  filename;\nmsg.processFile = filename;\nmsg.filename = msg.path + filename;\nmsg.sourceFile = msg.filename;\nmsg.detinationFile = msg.path + msg.detinationFile + filename;\nmsg.filesList = filesArray; \n\nvar indexFile = msg.filesList.indexOf(msg.processFile);\nif(indexFile !== -1){\n    msg.filesList.splice(indexFile, 1);\n    global.set(\"filesList\",msg.filesList);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "17d9869d.36c209",
                "e723f5c.3363808"
            ]
        ]
    },
    {
        "id": "e723f5c.3363808",
        "type": "debug",
        "z": "4b99f82d.4cd448",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "2e3d4bdf.99c084",
        "type": "debug",
        "z": "4b99f82d.4cd448",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 320,
        "wires": []
    },
    {
        "id": "f98f73b3.869ec",
        "type": "switch",
        "z": "4b99f82d.4cd448",
        "name": "",
        "property": "fileCreated",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 850,
        "y": 240,
        "wires": [
            [
                "92b0368a.7219c8"
            ],
            []
        ]
    },
    {
        "id": "92b0368a.7219c8",
        "type": "change",
        "z": "4b99f82d.4cd448",
        "name": "new File",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "localFilename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 200,
        "wires": [
            [
                "1ddb64ee.aa4d6b"
            ]
        ]
    },
    {
        "id": "1ddb64ee.aa4d6b",
        "type": "delay",
        "z": "4b99f82d.4cd448",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1080,
        "y": 260,
        "wires": [
            [
                "f82ddbbe.def548",
                "85f2041a.bb32b8"
            ]
        ]
    },
    {
        "id": "3a9d3d6c.b1b432",
        "type": "debug",
        "z": "4b99f82d.4cd448",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1350,
        "y": 380,
        "wires": []
    },
    {
        "id": "5b496934.989398",
        "type": "join",
        "z": "4b99f82d.4cd448",
        "name": "join CSV",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "10",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1380,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c6f5b306.ad11a",
        "type": "function",
        "z": "4b99f82d.4cd448",
        "name": "routes validator",
        "func": "//path of subfolder tree in ftp\nif(!msg.path){\n    msg.path = \"/\";\n}\nif(!msg.fileName){\n node.warn(\"no file to processes configured, FTP process will finish\"); \n return null;\n}\n//local source file path were the ftp will store the downloaded file\nif(!msg.localFilename){\n    msg.localFilename = \"/app/\";\n}\n//folder of processed files\nif(!msg.detinationFile){\n    msg.detinationFile = \"Archived/\";\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "9f0b548f.51d698"
            ]
        ]
    },
    {
        "id": "9f0b548f.51d698",
        "type": "Client ftp in",
        "z": "4b99f82d.4cd448",
        "ftp": "6cfe6ea8.1b0f7",
        "operation": "list",
        "path": "",
        "filename": "",
        "localFilename": "",
        "sourceFile": "",
        "destinationFile": "",
        "name": "List",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "cf2ceac6.a19248"
            ]
        ]
    },
    {
        "id": "17d9869d.36c209",
        "type": "Client ftp in",
        "z": "4b99f82d.4cd448",
        "ftp": "6cfe6ea8.1b0f7",
        "operation": "get",
        "path": "",
        "filename": "",
        "localFilename": "",
        "sourceFile": "",
        "destinationFile": "",
        "name": "Get",
        "x": 730,
        "y": 320,
        "wires": [
            [
                "f98f73b3.869ec",
                "2e3d4bdf.99c084"
            ]
        ]
    },
    {
        "id": "85f2041a.bb32b8",
        "type": "Client ftp in",
        "z": "4b99f82d.4cd448",
        "ftp": "6cfe6ea8.1b0f7",
        "operation": "move",
        "path": "",
        "filename": "",
        "localFilename": "",
        "sourceFile": "",
        "destinationFile": "",
        "name": "Move",
        "x": 1210,
        "y": 320,
        "wires": [
            [
                "3a9d3d6c.b1b432"
            ]
        ]
    },
    {
        "id": "f82ddbbe.def548",
        "type": "iconvfile-in",
        "z": "4b99f82d.4cd448",
        "name": "",
        "filename": "",
        "format": "lines",
        "charset": "utf-8",
        "chunk": false,
        "sendError": false,
        "x": 1230,
        "y": 200,
        "wires": [
            [
                "5b496934.989398"
            ]
        ]
    },
    {
        "id": "90e1c632.a56428",
        "type": "function",
        "z": "e0bdfd8e.7b0fb",
        "name": "",
        "func": "var results = msg.payload;\nvar pallets = [];\nvar currentTime = new Date().getTime();\n\nfor(var i=0; i<results.length; i++){\n    if(results[i].serialNumber){\n        pallets.push({palletID: results[i].serialNumber, process: 'Tagging', date: currentTime}); //for copy metadata;\n    }\n}\nmsg.payloadP = pallets;\nvar toVerify = pallets.map(item => item.palletID);\nvar palletStrg = \"\";\n\ntoVerify.forEach((pID, index) => {\n    palletStrg += `'${pID}',`;\n});\npalletStrg = palletStrg.slice(0,-1);\n\n// prepare query to get all Assets for each item.\nmsg.topic = \"SELECT * FROM TaggedPallets WHERE palletID in (\"+palletStrg+\")\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "531db827.d59818"
            ]
        ]
    },
    {
        "id": "531db827.d59818",
        "type": "sqlite",
        "z": "e0bdfd8e.7b0fb",
        "mydb": "ae98c1c14c4ef5ac",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "get TaggedPallets",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "2e89e7ca.691e08"
            ]
        ]
    },
    {
        "id": "6103462e.8c2b78",
        "type": "http response",
        "z": "e0bdfd8e.7b0fb",
        "name": "",
        "x": 690,
        "y": 40,
        "wires": []
    },
    {
        "id": "2e89e7ca.691e08",
        "type": "function",
        "z": "e0bdfd8e.7b0fb",
        "name": "Processing",
        "func": "var results = msg.payload;\nvar original = msg.payloadP;\nvar poriginal = msg.payloadOriginal;\n\nvar pallets = '',\n    sqlvalues = '',\n    palletID,process,date,ctemp=0;\n\nmsg.toStore = 0;\n\nif(results.length !== 0){\n    for(i=0;i<results.length;i++){\n        for(j=0;j<original.length;j++){\n            if(results[i].palletID === original[j].palletID){\n                //node.warn(\"removing pallet: \"+original[j].palletID+\" from array.\");\n                for(m=0;m<poriginal.length;m++){\n                    if(poriginal[m].serialNumber===original[j].palletID){\n                        poriginal.splice(m, 1);\n                    }\n                }\n                original.splice(j, 1);\n                ctemp++;\n            }\n        }\n        if(pallets !== ''){\n            pallets+= \"; \"+results[i].palletID;\n        }\n        else{\n            pallets = results[i].palletID;  \n        }\n        \n        \n    }\n    for(j=0;j<original.length;j++){\n        palletID = original[j].palletID;\n        process = original[j].process;\n        date = original[j].date;\n        \n        if(sqlvalues !== \"\"){\n            if((sqlvalues.slice(-1))===\")\"){\n                        sqlvalues+=\",\";\n            }\n            sqlvalues+= \"('\"+palletID+\"','\"+process+\"','\"+date+\"')\";\n           \n        }else{\n            sqlvalues = \"('\"+palletID+\"','\"+process+\"','\"+date+\"')\";\n        }\n    }\n    if(original.length!==0){\n        msg.topic = \"INSERT OR REPLACE INTO TaggedPallets (palletID,process,date) VALUES \"+sqlvalues+\";\";\n        msg.toStore = 1;\n    }\n    msg.payload = {\"response\":\"Invalid. Already tagged for \"+ctemp+ \" items\",\"pallet\":pallets,\"process\":\"Tagging\"};\n    msg.statusCode = 400;\n}\nelse{\n    for(var k=0; k<original.length; k++){\n        palletID = original[k].palletID;\n        process = original[k].process;\n        date = original[k].date;\n        \n        if(pallets !== ''){\n            pallets+= \"; \"+original[k].palletID;\n        }\n        else{\n            pallets = original[k].palletID;  \n        }\n        \n        if(sqlvalues !== \"\"){\n            if((sqlvalues.slice(-1))===\")\"){\n                        sqlvalues+=\",\";\n            }\n            sqlvalues+= \"('\"+palletID+\"','\"+process+\"','\"+date+\"')\";\n           \n        }else{\n            sqlvalues = \"('\"+palletID+\"','\"+process+\"','\"+date+\"')\";\n        }\n    }\n    msg.topic = \"INSERT OR REPLACE INTO TaggedPallets (palletID,process,date) VALUES \"+sqlvalues+\";\";\n    msg.toStore = 1;\n    msg.payload = {\"response\":\"Authorized. Processing Tagging for \"+original.length+ \" items\",\"pallet\":pallets,\"process\":\"Tagging\"};\n    msg.statusCode = 200;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 80,
        "wires": [
            [
                "6103462e.8c2b78",
                "663422e5.3443bc"
            ]
        ]
    },
    {
        "id": "3af0f4eb.b9f48c",
        "type": "sqlite",
        "z": "e0bdfd8e.7b0fb",
        "mydb": "ae98c1c14c4ef5ac",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Save TaggedPallets",
        "x": 420,
        "y": 200,
        "wires": [
            [
                "6165e87b.e0ba28"
            ]
        ]
    },
    {
        "id": "663422e5.3443bc",
        "type": "switch",
        "z": "e0bdfd8e.7b0fb",
        "name": "",
        "property": "toStore",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "3af0f4eb.b9f48c"
            ]
        ]
    },
    {
        "id": "6165e87b.e0ba28",
        "type": "function",
        "z": "e0bdfd8e.7b0fb",
        "name": "",
        "func": "msg.payload = msg.payloadOriginal;\n\nreturn {payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "23dc1f9b.f0b73",
        "type": "function",
        "z": "10d82e1f.f08ab2",
        "name": "Pallet Data",
        "func": "var server = global.get(\"server\");\n\nif (msg.statusCode !== 200) {\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n} else {\n    node.warn(\" ***** Successfully processed Pallet Data request ***** \");\n\n    var results = msg.payload.data;\n    node.warn(results);\n\n    var toResponse = [];\n    if (results && !results.length) {\n        msg.payload = {\"response\": \"Invalid Pallet data request. No information found.\"};\n        statusCode = 400;\n        msg.toContinue = 0;\n    } else {\n        for (var i = 0; i < results.length; i++) {\n            var palletdata = \"{\\\"serialNumber\\\":\\\"\" + results[i].RAKPALLET.serialNumber + \"\\\"\";\n            var Material_Master = results[i].Material_Master;\n            var Material_Code = results[i].Material_Code;\n\n            if (results[i].Production_Date) {\n                var Production_Date = results[i].Production_Date; // Already in ISO format\n                palletdata += \",\\\"Production_Date\\\":\\\"\" + Production_Date + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Production_Date\\\":\\\"\\\"\";\n            }\n\n            if (results[i].huitem) {\n                palletdata += \",\\\"huitem\\\":\\\"\" + results[i].huitem + \"\\\"\";\n            } else {\n                palletdata += \",\\\"huitem\\\":\\\"\\\"\";\n            }\n\n            if (results[i].Material_Code) {\n                palletdata += \",\\\"Material\\\":\\\"\" + results[i].Material_Code + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Material\\\":\\\"\\\"\";\n            }\n\n            if (results[i].Material_Master) {\n                palletdata += \",\\\"Material_Master\\\":\\\"\" + Material_Master + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Material_Master\\\":\\\"\\\"\";\n            }\n\n            if (results[i].Batch) {\n                palletdata += \",\\\"Batch\\\":\\\"\" + results[i].Batch + \"\\\"\";\n                var Batch = results[i].Batch;\n            } else {\n                palletdata += \",\\\"Batch\\\":\\\"\\\"\";\n            }\n\n            if (results[i].Qty) {\n                palletdata += \",\\\"Qty\\\":\\\"\" + results[i].Qty + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Qty\\\":\\\"\\\"\";\n            }\n\n            if (results[i].location) {\n                let coordinates = results[i].location.coordinates;\n                let locationString = coordinates.join(';') + \";0.0\"; // Convert coordinates array to string and add \";0.0\"\n                palletdata += \",\\\"location\\\":\\\"\" + locationString + \"\\\"\";\n            } else {\n                palletdata += \",\\\"location\\\":\\\"\\\"\";\n            }\n\n            if (results[i].RAKPALLET && results[i].RAKPALLET.LocationDetails) {\n                palletdata += \",\\\"LocationDetails\\\":\\\"\" + results[i].RAKPALLET.LocationDetails + \"\\\"\";\n            } else {\n                palletdata += \",\\\"LocationDetails\\\":\\\"\\\"\";\n            }\n\n            if (results[i].RAKPALLET && results[i].RAKPALLET.StorageLocation) {\n                palletdata += \",\\\"StorageLocation\\\":\\\"\" + results[i].RAKPALLET.StorageLocation + \"\\\"\";\n            } else {\n                palletdata += \",\\\"StorageLocation\\\":\\\"\\\"\";\n            }\n\n           if (results[i].RAKPALLET && results[i].RAKPALLET.Lane) {\n                palletdata += \",\\\"Lane\\\":\\\"\" + results[i].RAKPALLET.Lane + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Lane\\\":\\\"\\\"\";\n            }\n\n            if (results[i].RAKPALLET && results[i].RAKPALLET.BinLocation) {\n                palletdata += \",\\\"BinLocation\\\":\\\"\" + results[i].RAKPALLET.BinLocation + \"\\\"\";\n            } else {\n                palletdata += \",\\\"BinLocation\\\":\\\"\\\"\";\n            }\n\n            if (results[i].RAKPALLET && results[i].RAKPALLET.L5Location) {\n                palletdata += \",\\\"L5Location\\\":\\\"\" + results[i].RAKPALLET.L5Location + \"\\\"\";\n            } else {\n                palletdata += \",\\\"L5Location\\\":\\\"\\\"\";\n            }\n\n            if (results[i].RAKPALLET.ProcessTime) {\n                var Process_Time = results[i].RAKPALLET.ProcessTime; // Already in ISO format\n                palletdata += \",\\\"ProcessTime\\\":\\\"\" + Process_Time + \"\\\"\";\n            } else {\n                palletdata += \",\\\"ProcessTime\\\":\\\"\\\"\";\n            }\n\n            if (results[i].M2_PC_RM_Available) {\n                palletdata += \",\\\"M2_PC_RM_Available\\\":\\\"\" + results[i].M2_PC_RM_Available + \"\\\"\";\n            } else {\n                palletdata += \",\\\"M2_PC_RM_Available\\\":\\\"\\\"\";\n            }\n\n            if (results[i].M2_PC_RM_Per_Box_Numeric) {\n                palletdata += \",\\\"M2_PC_RM_Per_Box_Numeric\\\":\\\"\" + results[i].M2_PC_RM_Per_Box_Numeric + \"\\\"\";\n            } else {\n                palletdata += \",\\\"M2_PC_RM_Per_Box_Numeric\\\":\\\"\\\"\";\n            }\n\n            palletdata += \"}\";\n\n            toResponse.push(JSON.parse(palletdata));\n        }\n        \n        msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/material/sum?Material_Code=\" + Material_Code + \"Batch= \"+Batch+\"\";\n        msg.toResponse = toResponse;\n        msg.toContinue = 1;\n    }\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 100,
        "wires": [
            [
                "30bd93ba.9dc26c",
                "f6b700a1.ed6ed"
            ]
        ]
    },
    {
        "id": "7db6909d.e7ba9",
        "type": "http request",
        "z": "10d82e1f.f08ab2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "23dc1f9b.f0b73",
                "f6b700a1.ed6ed"
            ]
        ]
    },
    {
        "id": "545b4815.0f7528",
        "type": "change",
        "z": "10d82e1f.f08ab2",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 100,
        "wires": [
            [
                "7db6909d.e7ba9"
            ]
        ]
    },
    {
        "id": "1e94b1a7.f14f6e",
        "type": "http request",
        "z": "10d82e1f.f08ab2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 330,
        "y": 180,
        "wires": [
            [
                "3003ba90.3635d6",
                "f9c1a11d0a4a79c8"
            ]
        ]
    },
    {
        "id": "b0974e19.c3f7b",
        "type": "change",
        "z": "10d82e1f.f08ab2",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "1e94b1a7.f14f6e"
            ]
        ]
    },
    {
        "id": "be759021.2dfbd",
        "type": "http request",
        "z": "10d82e1f.f08ab2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 330,
        "y": 260,
        "wires": [
            [
                "7ee74f0e.c4227"
            ]
        ]
    },
    {
        "id": "c9c50d8e.85e4c",
        "type": "change",
        "z": "10d82e1f.f08ab2",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "be759021.2dfbd"
            ]
        ]
    },
    {
        "id": "3003ba90.3635d6",
        "type": "function",
        "z": "10d82e1f.f08ab2",
        "name": "TOTALbatchmaterial",
        "func": "var server = global.get(\"server\");\nvar results = msg.payload;\nvar batchmaterial = 0;\nvar toResponse = msg.toResponse;\nvar value = [];\nnode.warn(results)\nfor (i = 0; i < results.length; i++) {\n    batchmaterial = results[i].M2_PC_RM_Available_Sum;\n}\nnode.warn(\"+++++++\")\nfor (k = 0; k < toResponse.length; k++) {\n\n    toResponse[k].TOTALbatchmaterial = batchmaterial;\n    var Material_Code = toResponse[k].Material;\n}\n\nmsg.toResponse = toResponse;\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/material/sum?Material_Code=\" + Material_Code + \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 180,
        "wires": [
            [
                "c9c50d8e.85e4c"
            ]
        ]
    },
    {
        "id": "7ee74f0e.c4227",
        "type": "function",
        "z": "10d82e1f.f08ab2",
        "name": "TOTALmaterial",
        "func": "var server = global.get(\"server\");\nvar results = msg.payload;\nvar material = 0;\nvar toResponse = msg.toResponse;\nvar value = [];\n\nfor(i=0; i<results.length; i++){\n   material =  material + results[i].M2_PC_RM_Available_Sum;\n}\n\nfor(k=0; k<toResponse.length; k++){\n    toResponse[k].TOTALmaterial = material;\n    toResponse[k].totalPallets = toResponse.length;\n    delete toResponse[k].Material_Master;\n}\ntoResponse.push({'totalPallets':toResponse.length});\nmsg.payload = toResponse;\nmsg.statusCode = 200;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "30bd93ba.9dc26c",
        "type": "switch",
        "z": "10d82e1f.f08ab2",
        "name": "",
        "property": "toContinue",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 100,
        "wires": [
            [],
            [
                "b0974e19.c3f7b"
            ]
        ]
    },
    {
        "id": "f6b700a1.ed6ed",
        "type": "debug",
        "z": "10d82e1f.f08ab2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 40,
        "wires": []
    },
    {
        "id": "f9c1a11d0a4a79c8",
        "type": "debug",
        "z": "10d82e1f.f08ab2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 140,
        "wires": []
    },
    {
        "id": "49a7a27.6ce6d5c",
        "type": "function",
        "z": "ee8909d.0fb5ef8",
        "name": "",
        "func": "var results = msg.payload;\nvar pallets = [];\nvar currentTime = new Date().getTime();\n\nfor(var i=0; i<results.length; i++){\n    if(results[i].serialNumber){\n        pallets.push({palletID: results[i].serialNumber, process: 'Tagging', date: currentTime}); //for copy metadata;\n    }\n}\nmsg.payloadP = pallets;\nvar toVerify = pallets.map(item => item.palletID);\nvar palletStrg = \"\";\n\ntoVerify.forEach((pID, index) => {\n    palletStrg += `'${pID}',`;\n});\npalletStrg = palletStrg.slice(0,-1);\n\n// prepare query to get all Assets for each item.\nmsg.topic = \"SELECT * FROM TaggedPallets WHERE palletID in (\"+palletStrg+\")\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "e3f15bcc.141df8"
            ]
        ]
    },
    {
        "id": "e3f15bcc.141df8",
        "type": "sqlite",
        "z": "ee8909d.0fb5ef8",
        "mydb": "ae98c1c14c4ef5ac",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "get TaggedPallets",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "bb126d50.6a9fa",
                "e883bfad.b17a3"
            ]
        ]
    },
    {
        "id": "f0f1e62f.4476a8",
        "type": "http response",
        "z": "ee8909d.0fb5ef8",
        "name": "",
        "x": 690,
        "y": 40,
        "wires": []
    },
    {
        "id": "bb126d50.6a9fa",
        "type": "function",
        "z": "ee8909d.0fb5ef8",
        "name": "Processing",
        "func": "var results = msg.payload;\nvar original = msg.payloadP;\nvar poriginal = msg.payloadOriginal;\n\nvar pallets = '',\n    sqlvalues = '',\n    palletID,process,date,ctemp=0;\n\nmsg.toStore = 0;\n\nif(results.length !== 0){\n    for(i=0;i<results.length;i++){\n        for(j=0;j<original.length;j++){\n            if(results[i].palletID === original[j].palletID){\n                //node.warn(\"removing pallet: \"+original[j].palletID+\" from array.\");\n                for(m=0;m<poriginal.length;m++){\n                    if(poriginal[m].serialNumber===original[j].palletID){\n                        poriginal.splice(m, 1);\n                    }\n                }\n                original.splice(j, 1);\n                ctemp++;\n            }\n        }\n        if(pallets !== ''){\n            pallets+= \"; \"+results[i].palletID;\n        }\n        else{\n            pallets = results[i].palletID;  \n        }\n        \n        \n    }\n    for(j=0;j<original.length;j++){\n        palletID = original[j].palletID;\n        process = original[j].process;\n        date = original[j].date;\n        \n        if(sqlvalues !== \"\"){\n            if((sqlvalues.slice(-1))===\")\"){\n                        sqlvalues+=\",\";\n            }\n            sqlvalues+= \"('\"+palletID+\"','\"+process+\"','\"+date+\"')\";\n           \n        }else{\n            sqlvalues = \"('\"+palletID+\"','\"+process+\"','\"+date+\"')\";\n        }\n    }\n    if(original.length!==0){\n        msg.topic = \"INSERT OR REPLACE INTO TaggedPallets (palletID,process,date) VALUES \"+sqlvalues+\";\";\n        msg.toStore = 1;\n    }\n    msg.payload = {\"response\":\"Invalid. Already tagged for \"+ctemp+ \" items\",\"pallet\":pallets,\"process\":\"Tagging\"};\n    msg.statusCode = 400;\n}\nelse{\n    for(var k=0; k<original.length; k++){\n        palletID = original[k].palletID;\n        process = original[k].process;\n        date = original[k].date;\n        \n        if(pallets !== ''){\n            pallets+= \"; \"+original[k].palletID;\n        }\n        else{\n            pallets = original[k].palletID;  \n        }\n        \n        if(sqlvalues !== \"\"){\n            if((sqlvalues.slice(-1))===\")\"){\n                        sqlvalues+=\",\";\n            }\n            sqlvalues+= \"('\"+palletID+\"','\"+process+\"','\"+date+\"')\";\n           \n        }else{\n            sqlvalues = \"('\"+palletID+\"','\"+process+\"','\"+date+\"')\";\n        }\n    }\n    msg.topic = \"INSERT OR REPLACE INTO TaggedPallets (palletID,process,date) VALUES \"+sqlvalues+\";\";\n    msg.toStore = 1;\n    msg.payload = {\"response\":\"Authorized. Processing Tagging for \"+original.length+ \" items\",\"pallet\":pallets,\"process\":\"Tagging\"};\n    msg.statusCode = 200;\n}\nnode.warn(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 80,
        "wires": [
            [
                "f0f1e62f.4476a8",
                "ac5988f5.487838"
            ]
        ]
    },
    {
        "id": "6d31e64e.375fe8",
        "type": "sqlite",
        "z": "ee8909d.0fb5ef8",
        "mydb": "ae98c1c14c4ef5ac",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Save TaggedPallets",
        "x": 420,
        "y": 200,
        "wires": [
            [
                "9216d6a7.6b9a28"
            ]
        ]
    },
    {
        "id": "ac5988f5.487838",
        "type": "switch",
        "z": "ee8909d.0fb5ef8",
        "name": "",
        "property": "toStore",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "6d31e64e.375fe8"
            ]
        ]
    },
    {
        "id": "9216d6a7.6b9a28",
        "type": "function",
        "z": "ee8909d.0fb5ef8",
        "name": "",
        "func": "msg.payload = msg.payloadOriginal;\n\nreturn {payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e883bfad.b17a3",
        "type": "debug",
        "z": "ee8909d.0fb5ef8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 480,
        "y": 40,
        "wires": []
    },
    {
        "id": "536817de01fc2faa",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 820,
        "y": 140,
        "wires": [
            [
                "8208bfa29735fe8e"
            ]
        ]
    },
    {
        "id": "8208bfa29735fe8e",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare HTTP item",
        "func": "//msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 140,
        "wires": [
            [
                "559a487af49388a2",
                "74a11e23dcfd1bc1"
            ]
        ]
    },
    {
        "id": "28c49d520ad4e359",
        "type": "http request",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1390,
        "y": 140,
        "wires": [
            [
                "e1036b71957bd3d9",
                "713732a5c94a84c5"
            ]
        ]
    },
    {
        "id": "e1036b71957bd3d9",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Response",
        "func": "var counter = global.get('countertm2');\nvar tmp = global.get('tmptm2');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmptm2\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocesstm2')+ \" ITEMS ***** \");\n    }\n}\nvar responsePayload = JSON.parse(msg.payload);\nglobal.set(\"retaggingData\", responsePayload);\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 140,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "0914b4765c853682",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 140,
        "wires": [
            [
                "536817de01fc2faa"
            ]
        ]
    },
    {
        "id": "713732a5c94a84c5",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1550,
        "y": 100,
        "wires": []
    },
    {
        "id": "743cd73b7e3bdd29",
        "type": "change",
        "z": "6e0e5f0d2401051f",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "0914b4765c853682"
            ]
        ]
    },
    {
        "id": "d910c8283809af0e",
        "type": "change",
        "z": "6e0e5f0d2401051f",
        "name": "HUITEM create",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadM",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 220,
        "wires": [
            [
                "17e95962fcfd0e58"
            ]
        ]
    },
    {
        "id": "17e95962fcfd0e58",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 220,
        "wires": [
            [
                "c55a1efffc0668bd"
            ]
        ]
    },
    {
        "id": "e657e5b6dba97dc5",
        "type": "switch",
        "z": "6e0e5f0d2401051f",
        "name": "CREATE",
        "property": "create",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 220,
        "wires": [
            [
                "d910c8283809af0e",
                "743cd73b7e3bdd29"
            ]
        ]
    },
    {
        "id": "559a487af49388a2",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1190,
        "y": 100,
        "wires": []
    },
    {
        "id": "ccccd6a1c13c259b",
        "type": "switch",
        "z": "6e0e5f0d2401051f",
        "name": "UPDATE",
        "property": "update",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 860,
        "y": 780,
        "wires": [
            [
                "3470cf25c35b2db3"
            ]
        ]
    },
    {
        "id": "931f398f4c5d25fc",
        "type": "switch",
        "z": "6e0e5f0d2401051f",
        "name": "DEACTIVATE",
        "property": "deactivate",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 580,
        "wires": [
            [
                "d93c7866258d369b"
            ]
        ]
    },
    {
        "id": "cd3e8e9d06433018",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1240,
        "y": 780,
        "wires": [
            [
                "391a0fb1e9b8117f"
            ]
        ]
    },
    {
        "id": "3470cf25c35b2db3",
        "type": "change",
        "z": "6e0e5f0d2401051f",
        "name": "HUITEM update",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadU",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 780,
        "wires": [
            [
                "cd3e8e9d06433018"
            ]
        ]
    },
    {
        "id": "391a0fb1e9b8117f",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "rate",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1420,
        "y": 780,
        "wires": [
            [
                "31a0e7594fcc1bc7"
            ]
        ]
    },
    {
        "id": "b5daceaefd7b3579",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare HTTP item",
        "func": "node.warn(\"-----------\")\nmsg.method = \"POST\";\nmsg.headers = {\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\"}\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/bulk/serialNumber\";\n\n//msg.payload = msg.payload;\nreturn msg;\n\n// function generateHexadecimal() {\n//     let result = '';\n//     for (let i = 0; i < 16; i += 4) {\n//         result += (Math.floor(Math.random() * 0xFFFF)).toString(16).padStart(4, '0');\n//     }\n//     return result.toLowerCase();\n// }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 780,
        "wires": [
            [
                "838100c828d24e6f",
                "d6bfd762087781c5"
            ]
        ]
    },
    {
        "id": "8a2f9d21e82388c0",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2010,
        "y": 700,
        "wires": []
    },
    {
        "id": "c55a1efffc0668bd",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 220,
        "wires": [
            [
                "cfb6bdfe5700a28d"
            ]
        ]
    },
    {
        "id": "cfb6bdfe5700a28d",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "rate",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1020,
        "y": 220,
        "wires": [
            [
                "4d56b6f564f3daa8"
            ]
        ]
    },
    {
        "id": "1ca853a034398568",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare HTTP item",
        "func": "//msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/bulk/serialNumber\";\nmsg._msgid = generateHexadecimal().toString();\nreturn msg;\n\nfunction generateHexadecimal() {\n    let result = '';\n    for (let i = 0; i < 16; i += 4) {\n        result += (Math.floor(Math.random() * 0xFFFF)).toString(16).padStart(4, '0');\n    }\n    return result.toLowerCase();\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 220,
        "wires": [
            [
                "c1b1828d039b84ba",
                "263aa732e66f041d"
            ]
        ]
    },
    {
        "id": "c1b1828d039b84ba",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1730,
        "y": 260,
        "wires": []
    },
    {
        "id": "cbbdca0485116cdc",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2090,
        "y": 220,
        "wires": []
    },
    {
        "id": "f28a7ae83913c98e",
        "type": "http request",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1930,
        "y": 220,
        "wires": [
            [
                "cbbdca0485116cdc"
            ]
        ]
    },
    {
        "id": "838100c828d24e6f",
        "type": "http request",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1830,
        "y": 780,
        "wires": [
            [
                "8a2f9d21e82388c0",
                "4f9cd19e5ebdeb98"
            ]
        ]
    },
    {
        "id": "c0c9922e56a49985",
        "type": "http request",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 470,
        "y": 460,
        "wires": [
            [
                "b89e0919be4326b7"
            ]
        ]
    },
    {
        "id": "0d85e4a5696d22d9",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 540,
        "wires": [
            [
                "5d73026e5d900aa1"
            ]
        ]
    },
    {
        "id": "5d73026e5d900aa1",
        "type": "http request",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1030,
        "y": 540,
        "wires": [
            [
                "bdbb34faabc71743"
            ]
        ]
    },
    {
        "id": "ac612e34b01e179f",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 580,
        "wires": [
            [
                "5aafea67c909532d"
            ]
        ]
    },
    {
        "id": "5aafea67c909532d",
        "type": "http request",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1030,
        "y": 580,
        "wires": [
            [
                "bec993797ede9135"
            ]
        ]
    },
    {
        "id": "d93c7866258d369b",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare HTTP item",
        "func": "if(msg.counterD == 0){\n    return [null,msg];\n}\nelse{\n    msg.counterD--;\n    msg.url = msg.payloadD[msg.counterD];\n    \n    msg.method = \"DELETE\";\n    msg.headers = {\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\"}\n   // msg._msgid = generateHexadecimal().toString();\n    \n    return [msg,null];\n}\n\n\n// function generateHexadecimal() {\n//     let result = '';\n//     for (let i = 0; i < 16; i += 4) {\n//         result += (Math.floor(Math.random() * 0xFFFF)).toString(16).padStart(4, '0');\n//     }\n//     return result.toLowerCase();\n// }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 580,
        "wires": [
            [
                "ac612e34b01e179f",
                "c0c9922e56a49985",
                "0d85e4a5696d22d9",
                "66b97ab5ab92d474"
            ],
            [
                "ccccd6a1c13c259b",
                "e45390a9cbe7880f",
                "6d340240a2851cf7",
                "dc0a43ba4a705de7"
            ]
        ]
    },
    {
        "id": "b89e0919be4326b7",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 460,
        "wires": [
            [
                "d93c7866258d369b"
            ]
        ]
    },
    {
        "id": "66b97ab5ab92d474",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "delay",
        "timeout": "9",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 620,
        "wires": [
            [
                "f72a5ca8c303a0a4"
            ]
        ]
    },
    {
        "id": "f72a5ca8c303a0a4",
        "type": "http request",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1030,
        "y": 620,
        "wires": [
            [
                "1dc1ec393df3b875"
            ]
        ]
    },
    {
        "id": "74a11e23dcfd1bc1",
        "type": "change",
        "z": "6e0e5f0d2401051f",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 140,
        "wires": [
            [
                "28c49d520ad4e359"
            ]
        ]
    },
    {
        "id": "263aa732e66f041d",
        "type": "change",
        "z": "6e0e5f0d2401051f",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 220,
        "wires": [
            [
                "f28a7ae83913c98e"
            ]
        ]
    },
    {
        "id": "1f6686aa4d438baf",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare message for HUITEM",
        "func": "let huitemData = msg.payload; // Existing payload\nlet RAKPALLETDataArray = global.get('retaggingData'); // New RAKPALLET data to be added\n\n// Check if huitemData is an array and has at least one element\nif (Array.isArray(huitemData) && huitemData.length > 0) {\n    // Loop through each object in the array\n    huitemData.forEach(item => {\n        if (Array.isArray(RAKPALLETDataArray.data) && RAKPALLETDataArray.data.length > 0) {\n            // Iterate through each object in RAKPALLETDataArray.data\n            RAKPALLETDataArray.data.forEach(dataItem => {\n                Object.keys(dataItem).forEach(key => {\n                    if (!item.hasOwnProperty(key)) {\n                        item[key] = dataItem[key];\n                    }\n                });\n            });\n\n            // Add RAKPALLET object with all RAKPALLETDataArray properties\n            item.RAKPALLET = {};\n            RAKPALLETDataArray.data.forEach(dataItem => {\n                Object.keys(dataItem).forEach(key => {\n                    item.RAKPALLET[key] = dataItem[key];\n                });\n            });\n        } else {\n            node.warn('RAKPALLETDataArray.data is not an array or is empty');\n        }\n    });\n} else {\n    node.warn('huitemData is not an array or is empty');\n}\n\n// Set the updated huitemData to msg.payload\nmsg.payload = huitemData;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 220,
        "wires": [
            [
                "1ca853a034398568"
            ]
        ]
    },
    {
        "id": "2abaf61d0bbc6b1f",
        "type": "change",
        "z": "6e0e5f0d2401051f",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "DELETE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "bec993797ede9135",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1190,
        "y": 580,
        "wires": []
    },
    {
        "id": "4d56b6f564f3daa8",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare message for master",
        "func": "var batchData = msg.payload[0]; // Access the first element of the array\nvar payloadM = msg.payload;\nnode.warn(batchData);\n\nconst batch = batchData.Batch;\nconst materialCode = batchData.Material_Code;\n\n// Construct the URL with the extracted parameters\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/MATERIAL_AND_BATCH_MASTER/all?Batch=\" + batch + \"&Material=\" + materialCode;\n\n// Return the modified message object\nmsg.payloadM = payloadM;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 300,
        "wires": [
            [
                "2d37de3c4c20359b"
            ]
        ]
    },
    {
        "id": "2d37de3c4c20359b",
        "type": "change",
        "z": "6e0e5f0d2401051f",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 308,
        "wires": [
            [
                "186d636345770e65"
            ]
        ]
    },
    {
        "id": "186d636345770e65",
        "type": "http request",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1680,
        "y": 308,
        "wires": [
            [
                "06a460e054c2c957",
                "a0e9fe9efc488b84"
            ]
        ]
    },
    {
        "id": "a0e9fe9efc488b84",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare Item message",
        "func": "/**\n * Created by Nadeem on 16-July-2024.\n */\n// Initialize payloadM from msg.payloadM or as an empty array if not provided\nvar payloadM = Array.isArray(msg.payloadM) ? msg.payloadM : [];\nvar batchData = JSON.parse(msg.payload); // Assuming msg.payload contains JSON data\nnode.warn(batchData);\nnode.warn(payloadM);\n\n// Initialize variables for extracted UDFs\nvar Batch_Date_Stamp, Batch_Month, Batch_Sequence, Batch_Year, Caliber, Carton_Type, Item_Grade,\n    M2_PC_RM_Per_Box, M2_PC_RM_Per_Box_Numeric, M2_PC_RM_Per_Pallet, No_Of_Boxes_Per_Pallet, Pack_Code,\n    Pack_Code_Description, Pallet_Type, Planning_Group, Plant, Shade, Storage_Location, Weight_per_Box_Kg, Batch_status;\n\n// Extract UDFs from batchData.data if available\nif (Array.isArray(batchData.data) && batchData.data.length > 0) {\n    var udfData = batchData.data[0]; // Assuming you need data from the first object in the array\n    \n    Batch_status = udfData.Status;\n    Batch_Date_Stamp = udfData.Date_Stamp;\n    Batch_Month = udfData.Batch_Month;\n    Batch_Sequence = udfData.Batch_Sequence;\n    Batch_Year = udfData.Batch_Year;\n    Caliber = udfData.Caliber;\n    Carton_Type = udfData.Carton_Type;\n    Item_Grade = udfData.Item_Grade;\n    M2_PC_RM_Per_Box = udfData.M2_PC_RM_Per_Box;\n    M2_PC_RM_Per_Box_Numeric = udfData.M2_PC_RM_Per_Box_Numeric;\n    M2_PC_RM_Per_Pallet = udfData.M2_PC_RM_Per_Pallet;\n    No_Of_Boxes_Per_Pallet = udfData.No_Of_Boxes_Per_Pallet;\n    Pack_Code = udfData.Pack_Code;\n    Pack_Code_Description = udfData.Pack_Code_Description;\n    Pallet_Type = udfData.Pallet_Type;\n    Planning_Group = udfData.Planning_Group;\n    Plant = udfData.Plant;\n    Shade = udfData.Shade;\n    Storage_Location = udfData.Storage_Location;\n    Weight_per_Box_Kg = udfData.Weight_per_Box_Kg;\n}\n\n// Helper function to append UDFs to payloadM\nfunction appendUDF(key, value) {\n    payloadM.forEach(item => {\n        if (!item.hasOwnProperty(key)) {\n            item[key] = value;\n        }\n    });\n}\n\n// Check and append StorageLocation to payloadM\npayloadM.forEach(item => {\n    var StorageLocation = item.StorageLocation;\n\n    if (!StorageLocation) {\n        var Storage_location = udfData.Storage_Location;\n        appendUDF('StorageLocation', Storage_location);\n    } else {\n        appendUDF('StorageLocation', StorageLocation);\n    }\n});\n\n// Perform Qty checks and calculations\npayloadM.forEach(item => {\n    var Qty = item.Qty;\n\n    if (Qty !== null && Qty !== \"\") {\n        Qty = parseInt(Qty);\n        if (isNaN(Qty)) {\n            Qty = parseInt(No_Of_Boxes_Per_Pallet);\n            if (isNaN(Qty)) {\n                Qty = 0;\n                No_Of_Boxes_Per_Pallet = 0;\n            }\n            item.No_Of_Boxes_Per_Pallet = No_Of_Boxes_Per_Pallet;\n            item.Qty = Qty;\n        }\n        item.M2_PC_RM_Available = (M2_PC_RM_Per_Box_Numeric * Qty);\n    } else {\n        Qty = \"\";\n    }\n\n    if (Qty === \"\") {\n        Qty = parseInt(No_Of_Boxes_Per_Pallet);\n        if (isNaN(Qty)) {\n            Qty = 0;\n            No_Of_Boxes_Per_Pallet = 0;\n        }\n        item.No_Of_Boxes_Per_Pallet = No_Of_Boxes_Per_Pallet;\n        item.Qty = Qty;\n        item.M2_PC_RM_Available = (M2_PC_RM_Per_Box_Numeric * Qty);\n    }\n});\n\n// Append UDFs to payloadM\nappendUDF('Status', Batch_status);\nappendUDF('Batch_Date_Stamp', Batch_Date_Stamp);\nappendUDF('Batch_Month', Batch_Month);\nappendUDF('Batch_Sequence', Batch_Sequence);\nappendUDF('Batch_Year', Batch_Year);\nappendUDF('Caliber', Caliber);\nappendUDF('Carton_Type', Carton_Type);\nappendUDF('Grade', Item_Grade);\nappendUDF('M2_PC_RM_Per_Box', M2_PC_RM_Per_Box);\nappendUDF('M2_PC_RM_Per_Box_Numeric', M2_PC_RM_Per_Box_Numeric);\nappendUDF('M2_PC_RM_Per_Pallet', M2_PC_RM_Per_Pallet);\nappendUDF('Pack_Code', Pack_Code);\nappendUDF('Pack_Code_Description', Pack_Code_Description);\nappendUDF('Pallet_Type', Pallet_Type);\nappendUDF('Planning_Group', Planning_Group);\nappendUDF('Shade', Shade);\nappendUDF('Storage_location', Storage_Location);\nappendUDF('Weight_per_Box_Kg', Weight_per_Box_Kg);\n\nmsg.payload = payloadM;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 308,
        "wires": [
            [
                "70b4a864cd7842a3",
                "c249f4f494644d98"
            ]
        ]
    },
    {
        "id": "06a460e054c2c957",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1850,
        "y": 360,
        "wires": []
    },
    {
        "id": "aabf02066cd53d20",
        "type": "change",
        "z": "6e0e5f0d2401051f",
        "name": "HUITEM",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 300,
        "wires": [
            [
                "0940caf1c0fcfa51"
            ]
        ]
    },
    {
        "id": "70b4a864cd7842a3",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2100,
        "y": 340,
        "wires": [
            [
                "aabf02066cd53d20"
            ]
        ]
    },
    {
        "id": "c249f4f494644d98",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2090,
        "y": 380,
        "wires": []
    },
    {
        "id": "0940caf1c0fcfa51",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 2264,
        "y": 300,
        "wires": [
            [
                "5862dad431fb89e0"
            ]
        ]
    },
    {
        "id": "5862dad431fb89e0",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2434,
        "y": 300,
        "wires": [
            [
                "87d8a0440fbba995"
            ]
        ]
    },
    {
        "id": "87d8a0440fbba995",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare message for HUITEM",
        "func": "let huitemData = msg.payload; // Existing payload\nlet RAKPALLETDataArray = global.get('retaggingData'); // New RAKPALLET data to be added\nnode.warn(RAKPALLETDataArray);\n\n// Check if huitemData is an array and has at least one element\nif (Array.isArray(huitemData) && huitemData.length > 0) {\n    // Loop through each object in the array\n    huitemData.forEach(item => {\n        // Add properties from RAKPALLETDataArray to the item\n        if (Array.isArray(RAKPALLETDataArray.data) && RAKPALLETDataArray.data.length > 0) {\n            RAKPALLETDataArray.data.forEach(dataItem => {\n                Object.keys(dataItem).forEach(key => {\n                    if (key !== '_id' && key !== 'name' && !item.hasOwnProperty(key)) {\n                        item[key] = dataItem[key];\n                    }\n                });\n            });\n\n            // Add the RAKPALLET field with all properties from RAKPALLETDataArray, excluding _id and name\n            item.RAKPALLET = {};\n            RAKPALLETDataArray.data.forEach(dataItem => {\n                Object.keys(dataItem).forEach(key => {\n                    if (key !== '_id') { // Exclude _id field\n                        item.RAKPALLET[key] = dataItem[key];\n                    }\n                });\n            });\n        } else {\n            node.warn('RAKPALLETDataArray.data is not an array or is empty');\n        }\n        \n        // Remove _id from the final item object\n        if (item.hasOwnProperty('_id')) {\n            delete item._id;\n        }\n    });\n} else {\n    node.warn('huitemData is not an array or is empty');\n}\n\nnode.warn(huitemData);\n\n// Set the updated huitemData to msg.payload\nmsg.payload = huitemData;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2655,
        "y": 308,
        "wires": [
            [
                "6cfa8da5b3f114c2"
            ]
        ]
    },
    {
        "id": "6cfa8da5b3f114c2",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2895,
        "y": 308,
        "wires": [
            [
                "298de628ce878229",
                "983be39a12a49ffa"
            ]
        ]
    },
    {
        "id": "298de628ce878229",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3055,
        "y": 268,
        "wires": []
    },
    {
        "id": "983be39a12a49ffa",
        "type": "http request",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3095,
        "y": 308,
        "wires": [
            [
                "be033dd4dba52781",
                "d47d3f221d4b0bf4"
            ]
        ]
    },
    {
        "id": "be033dd4dba52781",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3270,
        "y": 300,
        "wires": []
    },
    {
        "id": "d47d3f221d4b0bf4",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3280,
        "y": 340,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "e45390a9cbe7880f",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 850,
        "y": 740,
        "wires": []
    },
    {
        "id": "1dc1ec393df3b875",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1190,
        "y": 620,
        "wires": []
    },
    {
        "id": "bdbb34faabc71743",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1190,
        "y": 540,
        "wires": []
    },
    {
        "id": "d6bfd762087781c5",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1810,
        "y": 840,
        "wires": []
    },
    {
        "id": "4f9cd19e5ebdeb98",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 780,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "dc0a43ba4a705de7",
        "type": "switch",
        "z": "6e0e5f0d2401051f",
        "name": "UPDATE",
        "property": "update",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 860,
        "y": 920,
        "wires": [
            [
                "dff7b0708b511b81"
            ]
        ]
    },
    {
        "id": "6d340240a2851cf7",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 850,
        "y": 880,
        "wires": []
    },
    {
        "id": "461dcbaacc6e6687",
        "type": "delay",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1400,
        "y": 940,
        "wires": [
            [
                "f99b463d50a5e7d5"
            ]
        ]
    },
    {
        "id": "f99b463d50a5e7d5",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare HTTP item",
        "func": "//msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 940,
        "wires": [
            [
                "6457861f1720785c",
                "3bf07edf7a04bde9"
            ]
        ]
    },
    {
        "id": "f7c41a172bbc3c2a",
        "type": "http request",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1970,
        "y": 940,
        "wires": [
            [
                "c8d98ae81403c8cf",
                "8e186789cc997623"
            ]
        ]
    },
    {
        "id": "c8d98ae81403c8cf",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Response",
        "func": "var counter = global.get('countertm2');\nvar tmp = global.get('tmptm2');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmptm2\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocesstm2')+ \" ITEMS ***** \");\n    }\n}\nvar responsePayload = JSON.parse(msg.payload);\nglobal.set(\"retaggingData\", responsePayload);\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 940,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "21afeb7e8121ad04",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 940,
        "wires": [
            [
                "461dcbaacc6e6687"
            ]
        ]
    },
    {
        "id": "8e186789cc997623",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2130,
        "y": 900,
        "wires": []
    },
    {
        "id": "dff7b0708b511b81",
        "type": "change",
        "z": "6e0e5f0d2401051f",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 940,
        "wires": [
            [
                "21afeb7e8121ad04"
            ]
        ]
    },
    {
        "id": "6457861f1720785c",
        "type": "debug",
        "z": "6e0e5f0d2401051f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1770,
        "y": 900,
        "wires": []
    },
    {
        "id": "3bf07edf7a04bde9",
        "type": "change",
        "z": "6e0e5f0d2401051f",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 940,
        "wires": [
            [
                "f7c41a172bbc3c2a"
            ]
        ]
    },
    {
        "id": "31a0e7594fcc1bc7",
        "type": "function",
        "z": "6e0e5f0d2401051f",
        "name": "Prepare message for HUITEM",
        "func": "let huitemData = msg.payloadU; // Existing payload\nlet RAKPALLETDataArray = global.get('retaggingData'); // New RAKPALLET data to be added\nnode.warn(RAKPALLETDataArray);\n\n// Check if huitemData is an array and has at least one element\nif (Array.isArray(huitemData) && huitemData.length > 0) {\n    // Loop through each object in the array\n    huitemData.forEach(item => {\n        // Add properties from RAKPALLETDataArray to the item\n        if (Array.isArray(RAKPALLETDataArray.data) && RAKPALLETDataArray.data.length > 0) {\n            RAKPALLETDataArray.data.forEach(dataItem => {\n                Object.keys(dataItem).forEach(key => {\n                    if (key !== '_id' && key !== 'name' && !item.hasOwnProperty(key)) {\n                        item[key] = dataItem[key];\n                    }\n                });\n            });\n\n            // Add the RAKPALLET field with all properties from RAKPALLETDataArray, excluding _id and name\n            item.RAKPALLET = {};\n            RAKPALLETDataArray.data.forEach(dataItem => {\n                Object.keys(dataItem).forEach(key => {\n                    if (key !== '_id') { // Exclude _id field\n                        item.RAKPALLET[key] = dataItem[key];\n                    }\n                });\n            });\n        } else {\n            node.warn('RAKPALLETDataArray.data is not an array or is empty');\n        }\n        \n        // Remove _id from the final item object\n        if (item.hasOwnProperty('_id')) {\n            delete item._id;\n        }\n    });\n} else {\n    node.warn('huitemData is not an array or is empty');\n}\n\nnode.warn(huitemData);\n\n// Set the updated huitemData to msg.payload\nmsg.payload = huitemData;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 700,
        "wires": [
            [
                "b5daceaefd7b3579"
            ]
        ]
    },
    {
        "id": "1a3d0eb8.be9271",
        "type": "comment",
        "z": "b46e5e48.494dc",
        "name": "FLOW - CSV CONSUME MATERIAL MASTER - It will grab a CSV file from a local directory",
        "info": "",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "f1d5fc74.fe6bf",
        "type": "fs-ops-dir",
        "z": "b46e5e48.494dc",
        "name": "",
        "path": "msg.payload",
        "pathType": "msg",
        "filter": "*.csv",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 280,
        "y": 161,
        "wires": [
            [
                "65bea386.6ca3bc",
                "103e8646.f3c3ea"
            ]
        ]
    },
    {
        "id": "56823d7b.7ef2a4",
        "type": "inject",
        "z": "b46e5e48.494dc",
        "name": "CRON - from 5am to 10pm",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "480",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/tmp",
        "payloadType": "str",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "f1d5fc74.fe6bf"
            ]
        ]
    },
    {
        "id": "65bea386.6ca3bc",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 410,
        "y": 201,
        "wires": []
    },
    {
        "id": "103e8646.f3c3ea",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Categorize",
        "func": "var files = msg.files;\nvar filename;\nfor(i=0;i<files.length;i++){\n    filename = files[i];\n    if(filename.match(/Material_Master.*/)){\n        msg.filenameMaterial=filename;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 161,
        "wires": [
            [
                "6d1bfe31.caa66"
            ]
        ]
    },
    {
        "id": "6d1bfe31.caa66",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "",
        "func": "msg.filename = \"/tmp/\"+msg.filenameMaterial;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 160,
        "wires": [
            [
                "3ff26686.6e4e8a"
            ]
        ]
    },
    {
        "id": "3ff26686.6e4e8a",
        "type": "read-line",
        "z": "b46e5e48.494dc",
        "name": "Get MATERIAL csv",
        "topic": "",
        "file": "",
        "offset": 0,
        "limit": 0,
        "x": 870,
        "y": 160,
        "wires": [
            [
                "8c1ecfbe.62de1"
            ],
            [
                "6cb9d0db.0688b"
            ]
        ]
    },
    {
        "id": "8c1ecfbe.62de1",
        "type": "join",
        "z": "b46e5e48.494dc",
        "name": "join CSV",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "10",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1060,
        "y": 153,
        "wires": [
            [
                "9dd70c5c.da225"
            ]
        ]
    },
    {
        "id": "9dd70c5c.da225",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Init-sub",
        "func": "results = msg.payload;\nvar countermaterial = Math.ceil((results.length)/50);\nglobal.set(\"countermaterial\",countermaterial);\nglobal.set(\"toprocess\",results.length);\nglobal.set(\"tmp\",0);\n\nnode.warn(\"counter divided by 50: \" + countermaterial);\nvar currentTime = new Date().getTime();\nvar toUpdate = [],\n    validator = false;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n\nfor(var j=1;j < results.length;j++){\n    var data = results[j].split('|');\n    var Material = data[0];\n    var chars = Material.length;\n    if(chars && (chars <= 18)){\n        validator = true;\n    }\n    var serial = Material;\n    serial = serial.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n    serial = serial.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n    serial = serial.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n    serial = serial.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n    serial = serial.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n    serial = serial.latinize(); //Removing diacritics\n    serial = serial.replace(/\\s/g, ''); //Removing spaces\n    \n    var MaterialDescription = data[1];\n    if(MaterialDescription){\n        MaterialDescription=MaterialDescription.replace(/[^\"']/g, \"\");\n    }\n    var UOM = data[2];\n    var MaterialType = data[3];\n    if(MaterialType){\n        MaterialType=MaterialType.replace(/[^\"']/g, \"\");\n    }\n    var MaterialGroup = data[4];\n    if(MaterialGroup){\n        MaterialGroup=MaterialGroup.replace(/[^\"']/g, \"\");\n    }\n    var SizeDimensions = data[5];\n    var Volume = data[6];\n    var VolumeUnit = data[7];\n    var Division = data[8];\n    if(Division){\n        Division=Division.replace(/[^\"']/g, \"\");\n    }\n    var ItemCategory = data[9];\n    if(ItemCategory){\n        ItemCategory=ItemCategory.replace(/[^\"']/g, \"\");\n    }\n    var BodyType = data[10];\n    if(BodyType){\n        BodyType=BodyType.replace(/[^\"']/g, \"\");\n    }\n    var ItemType = data[11];\n    if(ItemType){\n        ItemType=ItemType.replace(/[^\"']/g, \"\");\n    }\n    var Series = data[12];\n    var TileSize = data[13];\n    var PlanningGroup = data[14];\n    if(PlanningGroup){\n        PlanningGroup=PlanningGroup.replace(/[^\"']/g, \"\");\n    }\n    var ItemGrade = data[15];\n    var Colour = data[16];\n    var ClusterID = data[17];\n    var FinishingTileDescription = data[18];\n    if(FinishingTileDescription){\n        FinishingTileDescription=FinishingTileDescription.replace(/[^\"']/g, \"\");\n    }\n    var ThicknessOfTile = data[19];\n    var PDIreferenceNumber = data[20];\n    \n    var itemToUpdate = {  \n                \"thingTypeCode\" : \"MATERIAL_MASTER\",\n                \"serialNumber\": serial,\n                \"timestamp\":currentTime,\n                \"Modified_Date\":currentTime,\n\t\t\t\t\"Material\":Material,\n\t\t\t\t\"MaterialCharCount\":chars,\n\t\t\t\t\"MaterialValidator\":validator,\n\t\t\t\t\"Material_Description\":MaterialDescription,\n\t\t\t\t\"UOM\":UOM,\n\t\t\t\t\"Material_Type\":MaterialType,\n\t\t\t\t\"Material_Group\":MaterialGroup,\n\t\t\t\t\"Size_Dimensions\":SizeDimensions,\n\t\t\t\t\"Volume\":Volume,\n\t\t\t\t\"Volume_Unit\":VolumeUnit,\n\t\t\t\t\"Division\":Division,\n\t\t\t\t\"Item_Category\":ItemCategory,\n\t\t\t\t\"Body_Type\":BodyType,\n\t\t\t\t\"Item_Type\":ItemType,\n\t\t\t\t\"Series\":Series,\n\t\t\t\t\"Tile_Size\":TileSize,\n\t\t\t\t\"Planning_Group\":PlanningGroup,\n\t\t\t\t\"Item_Grade\":ItemGrade,\n\t\t\t\t\"Colour\":Colour,\n\t\t\t\t\"Cluster_ID\":ClusterID,\n\t\t\t\t\"Finishing_of_tile_Description\":FinishingTileDescription,\n\t\t\t\t\"Thickness_of_tile\":ThicknessOfTile,\n\t\t\t\t\"PDI_reference_number\":PDIreferenceNumber\n            };\n    toUpdate.push(itemToUpdate);\n    \n}\n//node.warn(\"String of messages To Update: \" + toUpdate);\n\nmsg.payload=toUpdate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1199,
        "y": 153,
        "wires": [
            [
                "1d103c3a.8e8b74",
                "8611ac18.d5d45"
            ]
        ]
    },
    {
        "id": "65ad20e9.642a7",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1110,
        "y": 240,
        "wires": []
    },
    {
        "id": "1ce987ca.0ac528",
        "type": "delay",
        "z": "b46e5e48.494dc",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1510,
        "y": 260,
        "wires": [
            [
                "1d2c76c9.b4ae19"
            ]
        ]
    },
    {
        "id": "1d2c76c9.b4ae19",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://64.227.150.106:5008/core/thing-type/MATERIAL_MASTER/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 280,
        "wires": [
            [
                "fc1f17f8.4a9b08"
            ]
        ]
    },
    {
        "id": "1d103c3a.8e8b74",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\nnode.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 260,
        "wires": [
            [
                "1ce987ca.0ac528",
                "a3102059.3b19c"
            ]
        ]
    },
    {
        "id": "fc1f17f8.4a9b08",
        "type": "half-bridge",
        "z": "b46e5e48.494dc",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1710,
        "y": 320,
        "wires": [
            [
                "6c1a771a.be3e48"
            ]
        ]
    },
    {
        "id": "6c1a771a.be3e48",
        "type": "http request",
        "z": "b46e5e48.494dc",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1710,
        "y": 360,
        "wires": [
            [
                "5a00a994.b10228",
                "5b80d8db.d8b9b8"
            ]
        ]
    },
    {
        "id": "5a00a994.b10228",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Response",
        "func": "var counter = global.get('countermaterial');\nvar tmp = global.get('tmp');\n\nnode.warn(\"COUNTER: \"+ counter);\nnode.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    node.warn(\"TMP: \"+ global.get('tmp'));\n    var toprocess = global.get('toprocess') -1;\n    if (tmp === counter){\n        node.warn(\" ***** Successfully processed: \" +toprocess+ \" Material Master records ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1880,
        "y": 360,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "5b80d8db.d8b9b8",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1890,
        "y": 320,
        "wires": []
    },
    {
        "id": "6cb9d0db.0688b",
        "type": "fs-ops-move",
        "z": "b46e5e48.494dc",
        "name": "Move processed",
        "sourcePath": "/tmp",
        "sourcePathType": "str",
        "sourceFilename": "filenameMaterial",
        "sourceFilenameType": "msg",
        "destPath": "/tmp/processed",
        "destPathType": "str",
        "destFilename": "filenameMaterial",
        "destFilenameType": "msg",
        "link": false,
        "x": 1080,
        "y": 200,
        "wires": [
            [
                "65ad20e9.642a7"
            ]
        ]
    },
    {
        "id": "23463429.db091c",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "",
        "func": "msg.filename = \"/flows/files/\"+msg.filenameBatch;\n//REMOVE NEXT TWO LINES LATER\nvar timestamp = new Date().getTime();\nvar filename = msg.filenameBatch;\nfilename = filename.slice(0, -4);\nmsg.filenameBatchtmp = filename+\"_\"+timestamp+\".csv\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 361,
        "wires": [
            [
                "4ecbc203.19363c"
            ]
        ]
    },
    {
        "id": "4ecbc203.19363c",
        "type": "read-line",
        "z": "b46e5e48.494dc",
        "name": "Get BATCH csv",
        "topic": "",
        "file": "",
        "offset": 0,
        "limit": 0,
        "x": 860,
        "y": 360,
        "wires": [
            [
                "9e34a1e7.d48d9"
            ],
            [
                "8f817670.04ac38"
            ]
        ]
    },
    {
        "id": "9e34a1e7.d48d9",
        "type": "join",
        "z": "b46e5e48.494dc",
        "name": "join CSV",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "10",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1060,
        "y": 355,
        "wires": [
            [
                "bdf650da.54c07"
            ]
        ]
    },
    {
        "id": "bdf650da.54c07",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Init-sub",
        "func": "results = msg.payload;\nvar counterbatch = Math.ceil((results.length)/50);\nglobal.set(\"counterbatch\",counterbatch);\nglobal.set(\"toprocess\",results.length);\nglobal.set(\"tmp\",0);\n\nnode.warn(\"counter divided by 500: \" + counterbatch);\nvar currentTime = new Date().getTime();\nvar toUpdate = [],\n    values = \"\",\n    M2_PC_RM_Per_Box_Numeric = 0;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\nfor(var j=1;j < results.length;j++){\n    var data = results[j].split('|');\n    var Material = data[0];\n    var Plant = data[1];\n    var Batch = data[2];\n    var Storage_location = data[3];\n    var serial = Batch+\"_\"+Material;//+\"_\"+Plant+\"_\"+Storage_location;\n    serial = serial.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n    serial = serial.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n    serial = serial.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n    serial = serial.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n    serial = serial.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n    serial = serial.latinize(); //Removing diacritics\n    serial = serial.replace(/\\s/g, ''); //Removing spaces\n    \n    var Pack_Code = data[4];\n    var Pack_Code_Description = data[5];\n    var Item_Grade = data[6];\n    var Batch_Year = data[7];\n    var Batch_Month = data[8];\n    var Planning_Group = data[9];\n    var Back_Stamp = data[10];\n    var Caliber = data[11];\n    var Date_Stamp = data[12];\n    var Shade = data[13];\n    var Batch_Sequence = data[14];\n    var Carton_Type = data[15];\n    var Pallet_Type = data[16];\n    var M2_PC_RM_Per_Box = data[17];\n\n    if (M2_PC_RM_Per_Box) {\n        M2_PC_RM_Per_Box_Numeric = parseFloat(M2_PC_RM_Per_Box.slice(0, -4));\n    } else {\n        M2_PC_RM_Per_Box_Numeric = 0;\n    }\n\n    var M2_PC_RM_Per_Pallet = data[18];\n    var No_Of_Boxes_Per_Pallet = parseInt(data[19]);\n    if( isNaN(No_Of_Boxes_Per_Pallet)){\n        No_Of_Boxes_Per_Pallet = 0;\n    }\n    var Weight_per_Box_Kg = data[20];\n    //node.warn(\"this is the error line: \"+j);\n    var itemToUpdate = {  \n                \"thingTypeCode\":\"MATERIAL_AND_BATCH_MASTER\",\n                \"serialNumber\":serial,\n                \"timestamp\":currentTime,\n\t\t\t\t\"Material\":Material,\n\t\t\t\t\"Plant\":Plant,\n\t\t\t\t\"Storage_location\":Storage_location,\n\t\t\t\t\"Batch\":Batch,\n\t\t\t\t\"Pack_Code\":Pack_Code,\n\t\t\t\t\"Pack_Code_Description\":Pack_Code_Description,\n\t\t\t\t\"Item_Grade\":Item_Grade,\n\t\t\t\t\"Batch_Year\":Batch_Year,\n\t\t\t\t\"Batch_Month\":Batch_Month,\n\t\t\t\t\"Planning_Group\":Planning_Group,\n\t\t\t\t\"Back_Stamp\":Back_Stamp,\n\t\t\t\t\"Caliber\":Caliber,\n\t\t\t\t\"Date_Stamp\":Date_Stamp,\n\t\t\t\t\"Shade\":Shade,\n\t\t\t\t\"Batch_Sequence\":Batch_Sequence,\n\t\t\t\t\"Carton_Type\":Carton_Type,\n\t\t\t\t\"Pallet_Type\":Pallet_Type,\n\t\t\t\t\"M2_PC_RM_Per_Box\":M2_PC_RM_Per_Box,\n\t\t\t\t\"M2_PC_RM_Per_Box_Numeric\":M2_PC_RM_Per_Box_Numeric,\n\t\t\t\t\"M2_PC_RM_Per_Pallet\":M2_PC_RM_Per_Pallet,\n\t\t\t\t\"No_Of_Boxes_Per_Pallet\":No_Of_Boxes_Per_Pallet,\n\t\t\t\t\"Weight_per_Box_Kg\":Weight_per_Box_Kg\n            };\n    toUpdate.push(itemToUpdate);\n    if(values !== \"\"){\n        if((values.slice(-1))===\"]\"){\n                    values+=\",\";\n        }\n        values+= \"[\\\"\"+Batch+\"\\\",\\\"\"+Material+\"\\\",\\\"\"+No_Of_Boxes_Per_Pallet+\"\\\",\\\"\"+Plant+\"\\\",\\\"\"+Storage_location+\"\\\"]\";\n       \n    }else{\n        values = \"[\\\"\"+Batch+\"\\\",\\\"\"+Material+\"\\\",\\\"\"+No_Of_Boxes_Per_Pallet+\"\\\",\\\"\"+Plant+\"\\\",\\\"\"+Storage_location+\"\\\"]\";\n    }\n}\nmsg.cache = \"{\\\"values\\\":[\"+values+\"]}\";\nmsg.cache = JSON.parse(msg.cache);\n//node.warn(\"String of messages To Update: \" + toUpdate);\n\nmsg.payload=toUpdate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1202,
        "y": 355,
        "wires": [
            [
                "ae36294f.9fb978",
                "e4f40276.46946",
                "3242476.c38cbb8"
            ]
        ]
    },
    {
        "id": "5bd6c4d.f95c03c",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1110,
        "y": 441,
        "wires": []
    },
    {
        "id": "8f817670.04ac38",
        "type": "fs-ops-move",
        "z": "b46e5e48.494dc",
        "name": "Move processed",
        "sourcePath": "/tmp/",
        "sourcePathType": "str",
        "sourceFilename": "filenameBatch",
        "sourceFilenameType": "msg",
        "destPath": "/tmp/processed",
        "destPathType": "str",
        "destFilename": "filenameBatchtmp",
        "destFilenameType": "msg",
        "link": false,
        "x": 1080,
        "y": 401,
        "wires": [
            [
                "5bd6c4d.f95c03c"
            ]
        ]
    },
    {
        "id": "8611ac18.d5d45",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1350,
        "y": 153,
        "wires": []
    },
    {
        "id": "ae36294f.9fb978",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1350,
        "y": 355,
        "wires": []
    },
    {
        "id": "8ad74b46.56dd08",
        "type": "delay",
        "z": "b46e5e48.494dc",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1510,
        "y": 460,
        "wires": [
            [
                "5536e2e4.59ee8c"
            ]
        ]
    },
    {
        "id": "5536e2e4.59ee8c",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://64.227.150.106:5008/core/MATERIAL_AND_BATCH_MASTER/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 500,
        "wires": [
            [
                "4b813df5.3b8a34"
            ]
        ]
    },
    {
        "id": "e4f40276.46946",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\nnode.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 460,
        "wires": [
            [
                "8ad74b46.56dd08",
                "c555a684.3e54a8"
            ]
        ]
    },
    {
        "id": "4b813df5.3b8a34",
        "type": "half-bridge",
        "z": "b46e5e48.494dc",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1710,
        "y": 540,
        "wires": [
            [
                "fc0ec4a6.fb4a48"
            ]
        ]
    },
    {
        "id": "fc0ec4a6.fb4a48",
        "type": "http request",
        "z": "b46e5e48.494dc",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1710,
        "y": 580,
        "wires": [
            [
                "6651f9a4.566418",
                "b7aeb45c.2bda18"
            ]
        ]
    },
    {
        "id": "6651f9a4.566418",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Response",
        "func": "var counter = global.get('counterbatch');\nvar tmp = global.get('tmp');\n\nnode.warn(\"COUNTER: \"+ counter);\nnode.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    node.warn(\"TMP: \"+ global.get('tmp'));\n    var toprocess = global.get('toprocess') -1;\n    if (tmp === counter){\n        node.warn(\" ***** Successfully processed: \" +toprocess+ \" Batch Master records ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1880,
        "y": 580,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "b7aeb45c.2bda18",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1890,
        "y": 540,
        "wires": []
    },
    {
        "id": "f55fe649.4c26d8",
        "type": "fs-ops-dir",
        "z": "b46e5e48.494dc",
        "name": "",
        "path": "msg.payload",
        "pathType": "msg",
        "filter": "*.csv",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 280,
        "y": 360,
        "wires": [
            [
                "43466eaf.fdf96",
                "2449ff0e.49711"
            ]
        ]
    },
    {
        "id": "e1b91d46.af23",
        "type": "inject",
        "z": "b46e5e48.494dc",
        "name": "CRON - from 5am to 10pm",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "480",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/tmp",
        "payloadType": "str",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "f55fe649.4c26d8"
            ]
        ]
    },
    {
        "id": "43466eaf.fdf96",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 410,
        "y": 400,
        "wires": []
    },
    {
        "id": "2449ff0e.49711",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Categorize",
        "func": "var files = msg.files;\nvar filename;\nfor(i=0;i<files.length;i++){\n    filename = files[i];\n    if(filename.match(/Material_Batch.*/)){\n        msg.filenameBatch=filename;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 360,
        "wires": [
            [
                "23463429.db091c"
            ]
        ]
    },
    {
        "id": "2c6e1497.96ff5c",
        "type": "comment",
        "z": "b46e5e48.494dc",
        "name": "FLOW - SAP integration. Receives a MQTT message and posts to SAP",
        "info": "",
        "x": 290,
        "y": 879,
        "wires": []
    },
    {
        "id": "8179857d.b73b08",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Parser",
        "func": "var SAPserver = global.get(\"SAPserver\");\nvar results = msg.payload\n// Set Basic Auth credentials\n// msg.headers = {\n//     'Authorization': 'Basic ' + Buffer.from('GPSRFCUSER:Rak@54321').toString('base64')\n// };\n//Categorizing based on the process\n\nvar data = results.split('|');\nvar palletID = data[0];\nmsg.palletID = palletID;\nvar Plant = data[1];\nvar StorageLocation = data[2];\nvar Qty = data[3];\nvar Material_Code = data[4];\nvar Batch = data[5];\nvar huitem = data[6];\nvar process = data[7]\nmsg.Process = process;\n\nif(process === \"Tagging\"){\n    msg.url = SAPserver+\"&plant=\"+Plant+\"&stloc=\"+StorageLocation+\"&pack_qty=\"+Qty+\"&material=\"+Material_Code+\"&batch=\"+Batch+\"&opr=PACK&hukey=\"+palletID+\"&huitem=\"+huitem;\n    //msg.url = \"http://cduaehaaap1.rakceram.com:8000/sap/bc/zhu_opr?sap-client=120&plant=\"+Plant+\"&stloc=\"+StorageLocation+\"&pack_qty=\"+Qty+\"&material=\"+Material_Code+\"&batch=\"+Batch+\"&opr=PACK&hukey=\"+palletID;\n    msg.payload=\"\";\n    msg.method = \"GET\"\n}\n\nif(process === \"reTagging\"){\n    msg.url = SAPserver+\"&plant=\"+Plant+\"&stloc=\"+StorageLocation+\"&pack_qty=\"+Qty+\"&material=\"+Material_Code+\"&batch=\"+Batch+\"&opr=REPK&hukey=\"+palletID+\"&huitem=\"+huitem;\n    //msg.url = \"http://cduaehaaap1.rakceram.com:8000/sap/bc/zhu_opr?sap-client=120&plant=\"+Plant+\"&stloc=\"+StorageLocation+\"&pack_qty=\"+Qty+\"&material=\"+Material_Code+\"&batch=\"+Batch+\"&opr=PACK&hukey=\"+msg.serialNumber;\n    //msg.url = \"https://cnuaeecqap2.rakceram.com:8000/sap/bc/zhu_opr?sap-client=100&plant=MC9&stloc=T9GD&pack_qty=32.0&material=ARD31ESBLWHEZMLQ1R&batch=R0BN20R1SQ&opr=PACK&hukey=32192300000002298898&huitem=0000012\";\n    msg.payload=\"\";\n    msg.method = \"GET\"\n}\n\nif(process === \"Drop off\"){\n    msg.url = SAPserver+\"&plant=\"+Plant+\"&stloc=\"+StorageLocation+\"&pack_qty=\"+Qty+\"&material=\"+Material_Code+\"&batch=\"+Batch+\"&opr=OUT&hukey=\"+palletID;\n    //msg.url = \"http://cduaehaaap1.rakceram.com:8000/sap/bc/zhu_opr?sap-client=120&plant=\"+Plant+\"&stloc=\"+StorageLocation+\"&pack_qty=\"+Qty+\"&material=\"+Material_Code+\"&batch=\"+Batch+\"&opr=PACK&hukey=\"+msg.serialNumber;\n    msg.payload=\"\";\n    msg.method = \"GET\"\n}\nif(process === \"Shipped\"){\n    msg.url = SAPserver+\"&plant=\"+Plant+\"&stloc=\"+StorageLocation+\"&pack_qty=\"+Qty+\"&material=\"+Material_Code+\"&batch=\"+Batch+\"&opr=DELE&hukey=\"+palletID;\n    //msg.url = \"http://cduaehaaap1.rakceram.com:8000/sap/bc/zhu_opr?sap-client=120&plant=\"+Plant+\"&stloc=\"+StorageLocation+\"&pack_qty=\"+Qty+\"&material=\"+Material_Code+\"&batch=\"+Batch+\"&opr=PACK&hukey=\"+msg.serialNumber;\n    msg.payload=\"\";\n    msg.method = \"GET\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 979,
        "wires": [
            [
                "11b293bf.eafcac",
                "fde9bfe8.9ef76",
                "72417d30.d8b844"
            ]
        ]
    },
    {
        "id": "11b293bf.eafcac",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 390,
        "y": 939,
        "wires": []
    },
    {
        "id": "4e4ca9bd.c1a188",
        "type": "http request",
        "z": "b46e5e48.494dc",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "senderr": false,
        "x": 550,
        "y": 979,
        "wires": [
            [
                "803bdbc0.0b60c8",
                "13fa4b2c.201d05"
            ]
        ]
    },
    {
        "id": "803bdbc0.0b60c8",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "",
        "func": "var toUpdate = [];\nvar currentTime = new Date().getTime();\nnode.warn(msg.payload)\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"SAP_EVENT\\\",\"+\n                        \"\\\"serialNumber\\\":\\\"\"+currentTime+\n                        \"\\\",\\\"timestamp\\\":\\\"\"+currentTime+\n                        \"\\\",\\\"statusCode\\\":\\\"\"+msg.statusCode+\n                        \"\\\",\\\"Process\\\":\\\"\"+msg.Process+\n                        \"\\\",\\\"Message\\\":\\\"\"+msg.payload+\n                        \"\\\",\\\"ProcessTime\\\":\\\"\"+currentTime+\n                        \"\\\",\\\"URL\\\":\\\"\"+msg.url+\n                        \"\\\",\\\"source\\\":\\\"SAP_FLOW\\\"}\";\n    itemToUpdate = JSON.parse(itemToUpdate);\n    toUpdate.push(itemToUpdate);\n    msg.payload = toUpdate;\n    return msg;\n    \n}\nelse{\n    //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.Process+\" for \"+msg.palletID+\" ***** \");\n    \n    var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"SAP_EVENT\\\",\"+\n                        \"\\\"serialNumber\\\":\\\"\"+currentTime+\n                        \"\\\",\\\"timestamp\\\":\\\"\"+currentTime+\n                        \"\\\",\\\"statusCode\\\":\\\"\"+msg.statusCode+\n                        \"\\\",\\\"Process\\\":\\\"\"+msg.Process+\n                        \"\\\",\\\"Message\\\":\\\"\"+msg.payload+\n                        \"\\\",\\\"ProcessTime\\\":\\\"\"+currentTime+\n                        \"\\\",\\\"URL\\\":\\\"\"+msg.url+\n                        \"\\\",\\\"source\\\":\\\"SAP_FLOW\\\"}\";\n    itemToUpdate = JSON.parse(itemToUpdate);\n    toUpdate.push(itemToUpdate);\n    msg.payload = toUpdate;\n    \n    return msg;\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 979,
        "wires": [
            [
                "23656b40.7646e4",
                "c8a8991c.2d7038"
            ]
        ]
    },
    {
        "id": "e1070c90.4cb0c",
        "type": "file",
        "z": "b46e5e48.494dc",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 610,
        "y": 1059,
        "wires": [
            []
        ]
    },
    {
        "id": "fde9bfe8.9ef76",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Outbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/SAP/'+ shortDate + '/outbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 1059,
        "wires": [
            [
                "e1070c90.4cb0c"
            ]
        ]
    },
    {
        "id": "9d618ddd.e699d",
        "type": "file",
        "z": "b46e5e48.494dc",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1700,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a3102059.3b19c",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Outbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/ItemMaster/'+ shortDate + '/outbound/Material_' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 200,
        "wires": [
            [
                "9d618ddd.e699d"
            ]
        ]
    },
    {
        "id": "72be5123.25edf",
        "type": "file",
        "z": "b46e5e48.494dc",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1690,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c555a684.3e54a8",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Outbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/ItemMaster/'+ shortDate + '/outbound/Batch_' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1530,
        "y": 420,
        "wires": [
            [
                "72be5123.25edf"
            ]
        ]
    },
    {
        "id": "f37aeff3.0baf8",
        "type": "mqtt in",
        "z": "b46e5e48.494dc",
        "name": "",
        "topic": "/rakceramics/sap",
        "qos": "2",
        "broker": "407a31eb.80a13",
        "inputs": 0,
        "x": 150,
        "y": 1159,
        "wires": [
            [
                "2afed74f.30f748",
                "8179857d.b73b08"
            ]
        ]
    },
    {
        "id": "23656b40.7646e4",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 979,
        "wires": [
            [
                "50ac5c9a.47a194"
            ]
        ]
    },
    {
        "id": "50ac5c9a.47a194",
        "type": "delay",
        "z": "b46e5e48.494dc",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1050,
        "y": 979,
        "wires": [
            [
                "e3e5b33d.c6fd6"
            ]
        ]
    },
    {
        "id": "2d9ca0bd.7dc13",
        "type": "half-bridge",
        "z": "b46e5e48.494dc",
        "name": "",
        "bridgeCode": "FLOW",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1130,
        "y": 939,
        "wires": [
            [
                "a79c3cd4.22f46"
            ]
        ]
    },
    {
        "id": "e3e5b33d.c6fd6",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/FLOW&thingTypeCode=/RAKCERAMICS/SAP_EVENT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1231,
        "y": 979,
        "wires": [
            [
                "2d9ca0bd.7dc13"
            ]
        ]
    },
    {
        "id": "a79c3cd4.22f46",
        "type": "http request",
        "z": "b46e5e48.494dc",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1130,
        "y": 899,
        "wires": [
            [
                "81676fad.d9442"
            ]
        ]
    },
    {
        "id": "81676fad.d9442",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1270,
        "y": 899,
        "wires": []
    },
    {
        "id": "2afed74f.30f748",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 370,
        "y": 1159,
        "wires": []
    },
    {
        "id": "aadd8f39.ec3ac",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Response",
        "func": "if(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Response from Cache server ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully pushed data to Cache server ***** \");\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1660,
        "y": 660,
        "wires": [
            [
                "c653bf37.b7e"
            ]
        ]
    },
    {
        "id": "931aeffd.e5f79",
        "type": "http request",
        "z": "b46e5e48.494dc",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1510,
        "y": 660,
        "wires": [
            [
                "aadd8f39.ec3ac",
                "20e22684.fc1eca"
            ]
        ]
    },
    {
        "id": "3242476.c38cbb8",
        "type": "change",
        "z": "b46e5e48.494dc",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://164.90.229.163:6001/api/v1/cache/batches",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cache",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 660,
        "wires": [
            [
                "931aeffd.e5f79"
            ]
        ]
    },
    {
        "id": "20e22684.fc1eca",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1650,
        "y": 700,
        "wires": []
    },
    {
        "id": "72417d30.d8b844",
        "type": "delay",
        "z": "b46e5e48.494dc",
        "name": "3s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 390,
        "y": 980,
        "wires": [
            [
                "4e4ca9bd.c1a188"
            ]
        ]
    },
    {
        "id": "f2afcd48.9d986",
        "type": "mqtt in",
        "z": "b46e5e48.494dc",
        "name": "",
        "topic": "/rakceramics/batchupdater",
        "qos": "2",
        "broker": "407a31eb.80a13",
        "inputs": 0,
        "x": 730,
        "y": 660,
        "wires": [
            [
                "b99143d1.1c086"
            ]
        ]
    },
    {
        "id": "c51b7325.fa7b3",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Init-sub",
        "func": "results = msg.payload;\nvar values = '', toupdate = [];\n\nfor(i=0;i<results.length;i++){\n    var data = results[i].split('|');\n    var Batch = data[0];\n    var Material = data[1];\n    var No_Of_Boxes_Per_Pallet = parseInt(data[2]);\n    var Plant = data[3];\n    var Storage_location = data[4];\n    \n    values += \"[\\\"\"+Batch+\"\\\",\\\"\"+Material+\"\\\",\\\"\"+No_Of_Boxes_Per_Pallet+\"\\\",\\\"\"+Plant+\"\\\",\\\"\"+Storage_location+\"\\\"],\";\n}\nvalues = values.slice(0,-1);\nnode.warn(values);\nresults = \"{\\\"values\\\":[\"+values+\"]}\";\nnode.warn(results);\nresults = JSON.parse(results);\n//node.warn(\"String of messages To Update: \" + toUpdate);\n\nmsg.cache=results;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "8d2d7a69.fdffb8",
                "cafc086c.b5aa38"
            ]
        ]
    },
    {
        "id": "b99143d1.1c086",
        "type": "join",
        "z": "b46e5e48.494dc",
        "name": "join CSV",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 900,
        "y": 580,
        "wires": [
            [
                "c51b7325.fa7b3"
            ]
        ]
    },
    {
        "id": "8d2d7a69.fdffb8",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1130,
        "y": 700,
        "wires": []
    },
    {
        "id": "c7a848b5.676de8",
        "type": "json",
        "z": "b46e5e48.494dc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 740,
        "y": 560,
        "wires": [
            [
                "b99143d1.1c086"
            ]
        ]
    },
    {
        "id": "cafc086c.b5aa38",
        "type": "delay",
        "z": "b46e5e48.494dc",
        "name": "5s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1150,
        "y": 620,
        "wires": [
            [
                "3242476.c38cbb8"
            ]
        ]
    },
    {
        "id": "7b35212e.9507a",
        "type": "file",
        "z": "b46e5e48.494dc",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 1990,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c653bf37.b7e",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Outbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/ItemMaster/'+ shortDate + '/outbound/Cache/PostingError_' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 660,
        "wires": [
            [
                "7b35212e.9507a"
            ]
        ]
    },
    {
        "id": "c8a8991c.2d7038",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 830,
        "y": 920,
        "wires": []
    },
    {
        "id": "13fa4b2c.201d05",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 670,
        "y": 920,
        "wires": []
    },
    {
        "id": "9693baa0.023398",
        "type": "comment",
        "z": "b46e5e48.494dc",
        "name": "FLOW - BO integration. Receives a MQTT message and posts to BO endpoint",
        "info": "",
        "x": 310,
        "y": 1400,
        "wires": []
    },
    {
        "id": "451869c8.fd5da8",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Parser",
        "func": "var BOserver = \"http://rakc-api-server:5000\"\nvar results = msg.payload\n//Categorizing based on the process\n\nvar data = results.split('|');\nvar binLocation = data[0];\nvar lane = data[1];\nvar plant = data[2];\nvar storageLocation = data[3];\nvar status = data[4];\nvar serialNumber = data[5];\nmsg.palletID = serialNumber;\nvar location = data[6].split(';');\nvar latitude = Number(location[1]);\nvar longitude = Number(location[0]);\nvar process = data[7]\nmsg.Process = process;\n\nif(process != \"Shipped\" && process != \"cycleCount\" && process != \"Tagging\" && status != \"Sold\"){\n    tomsg = \"{\";\n    msg.url = BOserver+\"/api/v1/pallets\";\n    if(binLocation !== \"\"){\n        tomsg += '\"binLocation\":\"'+ binLocation + '\",'\n    }\n    if(lane !== \"\"){\n        tomsg += '\"lane\":\"'+ lane + '\",'\n    }\n    if(plant !== \"\"){\n        tomsg += '\"plant\":\"'+ plant + '\",'\n    }\n    if(storageLocation !== \"\"){\n        tomsg += '\"storageLocation\":\"'+ storageLocation + '\",'\n    }\n    tomsg += '\"status\":\"' + status +'\",' +\n        '\"serialNumber\":\"' + serialNumber + '\",' +\n        '\"location\": {'+\n            '\"latitude\":' + latitude + ',' +\n            '\"longitude\":' + longitude +\n        \"}}\";\n    \n    node.warn(tomsg)\n    msg.payload= JSON.parse(tomsg);\n    msg.method = \"POST\"\n    msg.originalPayload = msg.payload;\n    \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 1500,
        "wires": [
            [
                "34d9cfcf.7010c",
                "14dd00a6.62c28f",
                "459fcf0f.e32e3"
            ]
        ]
    },
    {
        "id": "34d9cfcf.7010c",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 1440,
        "wires": []
    },
    {
        "id": "bb319396.24e96",
        "type": "http request",
        "z": "b46e5e48.494dc",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 790,
        "y": 1460,
        "wires": [
            [
                "5f5371a2.1780d",
                "d5df95e0.6f5db8"
            ]
        ]
    },
    {
        "id": "5f5371a2.1780d",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "toLog",
        "func": "var toUpdate = [];\nvar currentTime = new Date().getTime();\nnode.warn(msg.payload)\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    var itemToUpdate = { thingTypeCode:\"BO_EVENT\",\n                        serialNumber: currentTime,\n                        timestamp: currentTime,\n                        statusCode: msg.statusCode,\n                        Process: msg.Process,\n                        Message: JSON.stringify(msg.payload),\n                        ProcessTime: currentTime,\n                        URL: msg.url,\n                        Payload: JSON.stringify(msg.originalPayload),\n                        source: \"BO_FLOW\"\n    };\n    \n    toUpdate.push(itemToUpdate);\n    msg.payload = toUpdate;\n    return msg;\n    \n}\nelse{\n    //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.Process+\" for \"+msg.palletID+\" ***** \");\n    \n    var itemToUpdate = { thingTypeCode: \"BO_EVENT\",\n                        serialNumber: currentTime,\n                        timestamp: currentTime,\n                        statusCode: msg.statusCode,\n                        Process: msg.Process,\n                        Message: JSON.stringify(msg.payload),\n                        ProcessTime: currentTime,\n                        URL: msg.url,\n                        Payload: JSON.stringify(msg.originalPayload),\n                        source:\"BO_FLOW\"\n    };\n    \n    toUpdate.push(itemToUpdate);\n    msg.payload = toUpdate;\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 1500,
        "wires": [
            [
                "1600d230.6bffde",
                "a464ceb4.e4cc6"
            ]
        ]
    },
    {
        "id": "19359dfb.94e632",
        "type": "file",
        "z": "b46e5e48.494dc",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 590,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "14dd00a6.62c28f",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Outbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/BO/'+ shortDate + '/outbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 1600,
        "wires": [
            [
                "19359dfb.94e632"
            ]
        ]
    },
    {
        "id": "151cd232.d3765e",
        "type": "mqtt in",
        "z": "b46e5e48.494dc",
        "name": "",
        "topic": "/rakceramics/bo",
        "qos": "2",
        "broker": "407a31eb.80a13",
        "inputs": 0,
        "x": 150,
        "y": 1680,
        "wires": [
            [
                "7fb9fe34.72916",
                "451869c8.fd5da8"
            ]
        ]
    },
    {
        "id": "1600d230.6bffde",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1140,
        "y": 1500,
        "wires": [
            [
                "b6a0f76b.c34cf8"
            ]
        ]
    },
    {
        "id": "b6a0f76b.c34cf8",
        "type": "delay",
        "z": "b46e5e48.494dc",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1330,
        "y": 1500,
        "wires": [
            [
                "12fb5328.6ff48d"
            ]
        ]
    },
    {
        "id": "379a932f.3e318c",
        "type": "half-bridge",
        "z": "b46e5e48.494dc",
        "name": "",
        "bridgeCode": "FLOW",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1410,
        "y": 1460,
        "wires": [
            [
                "f6fc655.0cba098"
            ]
        ]
    },
    {
        "id": "12fb5328.6ff48d",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/FLOW&thingTypeCode=/RAKCERAMICS/BO_EVENT\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1511,
        "y": 1500,
        "wires": [
            [
                "379a932f.3e318c"
            ]
        ]
    },
    {
        "id": "f6fc655.0cba098",
        "type": "http request",
        "z": "b46e5e48.494dc",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1410,
        "y": 1420,
        "wires": [
            [
                "692f2eea.0e3b7"
            ]
        ]
    },
    {
        "id": "692f2eea.0e3b7",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1550,
        "y": 1420,
        "wires": []
    },
    {
        "id": "7fb9fe34.72916",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 370,
        "y": 1680,
        "wires": []
    },
    {
        "id": "8199d72e.9c7f68",
        "type": "delay",
        "z": "b46e5e48.494dc",
        "name": "3s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 610,
        "y": 1460,
        "wires": [
            [
                "bb319396.24e96"
            ]
        ]
    },
    {
        "id": "a464ceb4.e4cc6",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1130,
        "y": 1420,
        "wires": []
    },
    {
        "id": "d5df95e0.6f5db8",
        "type": "debug",
        "z": "b46e5e48.494dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 970,
        "y": 1420,
        "wires": []
    },
    {
        "id": "459fcf0f.e32e3",
        "type": "Load Balance",
        "z": "b46e5e48.494dc",
        "defaultcapacity": 100,
        "dynamic": "1a3d0eb8.be9271",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 420,
        "y": 1500,
        "wires": [
            [
                "34d9cfcf.7010c"
            ],
            [
                "8199d72e.9c7f68"
            ],
            [
                "7a37bba4.b70214"
            ]
        ]
    },
    {
        "id": "7a37bba4.b70214",
        "type": "delay",
        "z": "b46e5e48.494dc",
        "name": "4s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "4",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 610,
        "y": 1540,
        "wires": [
            [
                "c8adb2d8.3e56e"
            ]
        ]
    },
    {
        "id": "c8adb2d8.3e56e",
        "type": "http request",
        "z": "b46e5e48.494dc",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 790,
        "y": 1540,
        "wires": [
            [
                "5f5371a2.1780d"
            ]
        ]
    },
    {
        "id": "18923549d02b5134",
        "type": "change",
        "z": "b46e5e48.494dc",
        "name": "old_Set headers",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "https://saqibmaster.herokuapp.com/batches",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cache",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "c6a6efb2fea75cbd",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "old_Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/MOBILE&thingTypeCode=/RAKCERAMICS/MATERIAL_MASTER\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3ff40a5fdc0d673f",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "old_Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/MOBILE&thingTypeCode=/RAKCERAMICS/MATERIAL_AND_BATCH_MASTER\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "99bd1e0d7567016b",
        "type": "function",
        "z": "b46e5e48.494dc",
        "name": "old path",
        "func": "msg.filename = \"/flows/files/\"+msg.filenameMaterial;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a1a175ed.1dae78",
        "type": "http in",
        "z": "a53d296e.1ea118",
        "name": "SAVE COUNTED ITEMS",
        "url": "/RAKCOUNTEDITEMS",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 2230,
        "y": 280,
        "wires": [
            [
                "74c02bc9.e23344",
                "14b40d07.956e73"
            ]
        ]
    },
    {
        "id": "6254e726.9b9498",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized CycleCount transaction, proceeding... \");\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    results = msg.payload;\n    for(var j=0;j < results.length;j++){\n        for(var i=0;i < results[j].serialNumber.length;i++){\n            if(splChars.indexOf(results[j].serialNumber.charAt(i)) != -1){\n                msg.payload = {\"response\":\"Invalid QR code\"};\n                msg.statusCode = 400;\n            }\n        }\n        if(results[j].serialNumber.length < 18){\n            msg.payload = {\"response\":\"Invalid QR code\"};\n            msg.statusCode = 400;\n        }\n    }\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2730,
        "y": 274,
        "wires": [
            [
                "b34ec853.fba288"
            ]
        ]
    },
    {
        "id": "46e29890.bcbde8",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3190,
        "y": 214,
        "wires": []
    },
    {
        "id": "b34ec853.fba288",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2910,
        "y": 274,
        "wires": [
            [
                "46e29890.bcbde8"
            ],
            [
                "46e29890.bcbde8"
            ],
            [
                "37145586.39eb1a",
                "24042831.066468"
            ]
        ]
    },
    {
        "id": "37145586.39eb1a",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Item Messages",
        "func": "results = msg.payload;\nvar counterg = Math.ceil((results.length)/50);\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",results.length);\nglobal.set(\"tmp\",0);\nmsg.updatelocation = 0;\nmsg.serials = [];\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\nvar toUpdate = [];\nvar serials = [];\nfor(var j=0;j < results.length;j++){\n    var body = \"{\"+\n        \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\"+\n        \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n        \"\\\"LastCycleCountDate\\\":\"+ currentTime + \",\"+\n        \"\\\"ProcessTime\\\":\"+ currentTime + \",\"+\n        \"\\\"serialNumber\\\":\\\"\"+ results[j].serialNumber + \"\\\",\"+\n        \"\\\"source\\\":\\\"MOBILE_cycleCount\\\",\"+\n        \"\\\"User\\\":\\\"\"+ results[j].udfs.User.value + \"\\\",\"+\n        \"\\\"UUIDMobile\\\":\\\"\"+ results[j].UUIDMobile + \"\\\",\"+\n        \"\\\"cycleCount\\\":\\\"\"+ results[j].udfs.cycleCount.value + \"\\\",\"+\n        \"\\\"Process\\\":\\\"cycleCount\\\"\";\n    if(results[j].udfs.location){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        msg.updatelocation=1;\n        body+=\"\\\"location\\\":\\\"\"+results[j].udfs.location.value+\"\\\"\";\n    }\n    if(results[j].udfs.LocationDetails){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"LocationDetails\\\":\\\"\"+results[j].udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(results[j].udfs.StorageLocation){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"StorageLocation\\\":\\\"\"+results[j].udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(results[j].udfs.BinLocation){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"BinLocation\\\":\\\"\"+results[j].udfs.BinLocation.value+\"\\\"\";\n    }\n    if(results[j].udfs.Lane){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"Lane\\\":\\\"\"+results[j].udfs.Lane.value+\"\\\"\";\n    }\n    if(results[j].udfs.zone){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        msg.updatelocation=1;\n        body+=\"\\\"zone\\\":\\\"\"+results[j].udfs.zone.value+\"\\\"\";\n    }\n    if(results[j].udfs.L5Location){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"L5Location\\\":\\\"\"+results[j].udfs.L5Location.value+\"\\\"\";\n    }\n    body+=\"}\";\n    \n    toUpdate.push(JSON.parse(body));\n    serials.push(results[j].serialNumber);\n}\n//node.warn(\"String of messages To Update: \" + toUpdate);\n\nmsg.payload=toUpdate;\nmsg.serials=serials;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 334,
        "wires": [
            [
                "6203efcd.505c8",
                "b46f327a.0fbc1"
            ]
        ]
    },
    {
        "id": "6203efcd.505c8",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3290,
        "y": 374,
        "wires": []
    },
    {
        "id": "56b65407.ecd35c",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3490,
        "y": 334,
        "wires": [
            [
                "5497bec0.efa6c"
            ]
        ]
    },
    {
        "id": "5497bec0.efa6c",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/MOBILE&thingTypeCode=/RAKCERAMICS/RAKPALLET\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3670,
        "y": 334,
        "wires": [
            [
                "9939f736.96ffe8"
            ]
        ]
    },
    {
        "id": "9939f736.96ffe8",
        "type": "half-bridge",
        "z": "a53d296e.1ea118",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 3690,
        "y": 294,
        "wires": [
            [
                "f3539b.ba05dc68"
            ]
        ]
    },
    {
        "id": "f3539b.ba05dc68",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3690,
        "y": 254,
        "wires": [
            [
                "887e3023.e132a",
                "1dd6c29b.07fb6d"
            ]
        ]
    },
    {
        "id": "887e3023.e132a",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        node.warn(\" ***** Successfully processed cycleCount for: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3840,
        "y": 254,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "b46f327a.0fbc1",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 3320,
        "y": 334,
        "wires": [
            [
                "56b65407.ecd35c"
            ]
        ]
    },
    {
        "id": "24042831.066468",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "results = msg.payload;\nmsg.payload = {\"response\":\"Authorized. Processing CycleCount for \"+results.length+ \" items\"};\nmsg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3070,
        "y": 281,
        "wires": [
            [
                "46e29890.bcbde8"
            ]
        ]
    },
    {
        "id": "74c02bc9.e23344",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2450,
        "y": 346,
        "wires": []
    },
    {
        "id": "1dd6c29b.07fb6d",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3830,
        "y": 214,
        "wires": []
    },
    {
        "id": "123962f7.4d44ed",
        "type": "http in",
        "z": "a53d296e.1ea118",
        "name": "STATUS CHANGE",
        "url": "/STATUSCHANGE",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "f70f8c4f.1a24c",
                "4b871e3f.8d9d7",
                "fc89fe33.b3f2e"
            ]
        ]
    },
    {
        "id": "115b7a3e.585fc6",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized Status Change transaction, proceeding... \");\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    results = msg.payload;\n    for(var j=0;j < results.length;j++){\n        for(var i=0;i < results[j].serialNumber.length;i++){\n            if(splChars.indexOf(results[j].serialNumber.charAt(i)) != -1){\n                msg.payload = {\"response\":\"Invalid QR code\"};\n                msg.statusCode = 400;\n            }\n        }\n        if(results[j].serialNumber.length < 18){\n            msg.payload = {\"response\":\"Invalid QR code\"};\n            msg.statusCode = 400;\n        }\n    }\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 373,
        "wires": [
            [
                "d337beab.b8e2"
            ]
        ]
    },
    {
        "id": "97aa8b29.f97a18",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 1170,
        "y": 330,
        "wires": []
    },
    {
        "id": "d337beab.b8e2",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 830,
        "y": 373,
        "wires": [
            [
                "97aa8b29.f97a18"
            ],
            [
                "97aa8b29.f97a18"
            ],
            [
                "3b0c08f.57fe1f8",
                "52fd629b.b273ac"
            ]
        ]
    },
    {
        "id": "3b0c08f.57fe1f8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "results = msg.payload;\nmsg.payload = {\"response\":\"Authorized. Processing StatusChange for \"+results.length+ \" items\",\"pallet\":results[0].serialNumber,\"process\":\"StatusChange\"};\nmsg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 380,
        "wires": [
            [
                "97aa8b29.f97a18"
            ]
        ]
    },
    {
        "id": "f70f8c4f.1a24c",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 370,
        "y": 446,
        "wires": []
    },
    {
        "id": "bbba47c2.12cf28",
        "type": "comment",
        "z": "a53d296e.1ea118",
        "name": "FLOW FOR THE CYCLE COUNT PROCESS - It doesn't support image upload",
        "info": "",
        "x": 2390,
        "y": 180,
        "wires": []
    },
    {
        "id": "3b12dc5a.b95304",
        "type": "comment",
        "z": "a53d296e.1ea118",
        "name": "FLOW FOR THE STATUS CHANGE PROCESS - It does support Image upload",
        "info": "",
        "x": 320,
        "y": 180,
        "wires": []
    },
    {
        "id": "d255f6f.9ccb608",
        "type": "http in",
        "z": "a53d296e.1ea118",
        "name": "USER MANAGEMENT",
        "url": "/USERS",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1460,
        "wires": [
            [
                "f37c2c63.56f4c",
                "2f95ee21.e79452"
            ]
        ]
    },
    {
        "id": "502c16f7.d0f508",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\n        \"response\": \"Unauthorized\"\n    };\n    msg.statusCode = 401;\n    msg.send = 0;\n    return msg;\n} else {\n    node.warn(\"Authorized User Management request, proceeding... \");\n    results = msg.payload;\n\n    if (results.Process === \"UserCreation\") {\n        if (results.Username && results.FirstName && results.LastName && results.Password) {\n            var toUpdate = [];\n            if (!results.Email) {\n                results.Email = \"\";\n            }\n            if (!results.Plant) {\n                results.Plant = \"\";\n            }\n            if (!results.Manager) {\n                results.Manager = \"\";\n            }\n            if (!results.Role) {\n                results.Role = \"\";\n            }\n           var itemToUpdate = {\n                \"thingTypeCode\": \"USERS\",\n                \"timestamp\": currentTime,\n                \"serialNumber\": results.Username,\n                \"FirstName\": results.FirstName,\n                \"name\": results.FirstName,\n                \"LastName\": results.LastName,\n                \"Email\": results.Email,\n                \"Username\": results.Username,\n                \"Password\": results.Password,\n                \"Plant\": results.Plant,\n                \"Manager\": results.Manager,\n                \"Process\": results.Process,\n                \"Role\": results.Role,\n                \"source\": \"MOBILE_\" + results.Process,\n                \"Status\": \"active\"\n            };\n            // toUpdate.push(itemToUpdate);\n            msg.response = \"UserCreation\";\n            msg.Username = results.Username;\n            msg.payload = itemToUpdate;\n            msg.send = 1;\n            return msg;\n        } else {\n            msg.response = \"invUserCreation\";\n            msg.send = 0;\n            return msg;\n        }\n\n    }\n\n    if (results.Process === \"Authenticate\") {\n        //var server = global.get(\"server\");\n        msg.response = \"Authenticate\";\n        msg.Password = results.Password;\n        msg.Username = (results.Username).toUpperCase();\n        //msg.url = server+\"/riot-core-services/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKUSERS/authenticate\";\n        msg.send = 2;\n        return msg;\n    }\n\n    if (results.Process === \"UserUpdate\") {\n        if (results.Username) {\n            var toUpdate = [];\n            var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"USERS\\\",\" +\n                \"\\\"serialNumber\\\":\\\"\" + (results.Username).toUpperCase() +\n                \"\\\",\\\"Process\\\":\\\"\" + results.Process +\n                \"\\\",\\\"source\\\":\\\"MOBILE_\" + results.Process + \"\\\"\";\n            if (results.FirstName) {\n                itemToUpdate += \",\\\"FirstName\\\":\\\"\" + results.FirstName + \"\\\"\";\n            }\n            if (results.LastName) {\n                itemToUpdate += \",\\\"LastName\\\":\\\"\" + results.LastName + \"\\\"\";\n            }\n            if (results.Email) {\n                itemToUpdate += \",\\\"Email\\\":\\\"\" + results.Email + \"\\\"\";\n            }\n            if (results.Password) {\n                itemToUpdate += \",\\\"Password\\\":\\\"\" + results.Password + \"\\\"\";\n            }\n            if (results.Plant) {\n                itemToUpdate += \",\\\"Plant\\\":\\\"\" + results.Plant + \"\\\"\";\n            }\n            if (results.Manager) {\n                itemToUpdate += \",\\\"Manager\\\":\\\"\" + results.Manager + \"\\\"\";\n            }\n            if (results.Role) {\n                itemToUpdate += \",\\\"Role\\\":\\\"\" + results.Role + \"\\\"\";\n            }\n            if (results.Status) {\n                itemToUpdate += \",\\\"Status\\\":\\\"\" + results.Status + \"\\\"\";\n            }\n            itemToUpdate += \"}\";\n            node.warn(\"itemToUpdate value after changing LastName here: \" + itemToUpdate);\n\n            itemToUpdate = JSON.parse(itemToUpdate);\n            node.warn(\"itemToUpdate value after JSON here: \" + itemToUpdate);\n\n            toUpdate.push(itemToUpdate);\n            msg.response = \"UserUpdate\";\n            msg.Username = results.Username;\n            msg.payload = toUpdate;\n            msg.send = 1;\n            return msg;\n        } else {\n            msg.response = \"invUserUpdate\";\n            msg.send = 0;\n            return msg;\n        }\n\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1453,
        "wires": [
            [
                "f716d5ec.a86718",
                "56a4e09b.674ff",
                "9b0b230126c163b9"
            ]
        ]
    },
    {
        "id": "e8414f6a.a80f7",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 1190,
        "y": 1373,
        "wires": []
    },
    {
        "id": "524dac78.457d04",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1210,
        "y": 1460,
        "wires": [
            [
                "6101ad08.9ef884"
            ]
        ]
    },
    {
        "id": "6101ad08.9ef884",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.response+\" for \"+msg.Username+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 1460,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "6058c6a6.c96408",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "if(msg.response===\"UserCreation\"){\n    msg.payload = {\"response\":\"Authorized. Processing UserCreation for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserCreation response\")\n}\nif(msg.response===\"invUserCreation\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserCreation response\")\n}\nif(msg.response===\"UserUpdate\"){\n    msg.payload = {\"response\":\"Authorized. Processing User Update for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserUpdate response\")\n}\nif(msg.response===\"invUserUpdate\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserUpdate response\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 1373,
        "wires": [
            [
                "e8414f6a.a80f7"
            ]
        ]
    },
    {
        "id": "f716d5ec.a86718",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 830,
        "y": 1513,
        "wires": []
    },
    {
        "id": "e2b816ec.09e458",
        "type": "comment",
        "z": "a53d296e.1ea118",
        "name": "FLOW FOR AUTHENTICATION - Supports: Login/Validation, New User, Update Details, Password Update",
        "info": "",
        "x": 400,
        "y": 1320,
        "wires": []
    },
    {
        "id": "f94201d9.e04e6",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Authentication",
        "func": "results = msg.payload.data;\n\nif(msg.response === \"Authenticate\"){\n    if(results){\n            node.warn(\" ***** Authenticated user \"+results.Username+\" ***** \");\n            msg.payload = {\"response\":\"true\",\n                        \"Username\":results.Username,\n                        \"FirstName\":results.FirstName,\n                        \"LastName\":results.LastName,\n                        \"Role\":results.Role,\n                        \"Plant\":results.Plant,\n                        \"Manager\":results.Manager,\n                        \"Email\":results.Email\n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n    else{\n            node.warn(\" ***** Failed to authenticate. User doesn't exist \");\n            msg.payload = {\"response\":\"false\"};\n            msg.statusCode = 200;\n            return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1513,
        "wires": [
            [
                "d5ea146d.386ec8"
            ]
        ]
    },
    {
        "id": "56a4e09b.674ff",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 830,
        "y": 1453,
        "wires": [
            [
                "6058c6a6.c96408"
            ],
            [
                "6058c6a6.c96408",
                "253097676feb3d5a"
            ],
            [
                "1269e433.f993ac"
            ]
        ]
    },
    {
        "id": "6b1d718a.8c70e",
        "type": "comment",
        "z": "a53d296e.1ea118",
        "name": "FLOW DATA INITIALIZE",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "c50069f1.aecbd8",
        "type": "inject",
        "z": "a53d296e.1ea118",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "fae8b2a9.f1132"
            ]
        ]
    },
    {
        "id": "fae8b2a9.f1132",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Init config",
        "func": "RAKserver = [\"https://demo.innovent.site\"];\nIMAGEserver = [\"https://iotimages.rakceramics.com\"];\n\n//PROD\n//SAPserver = [\"https://digi.rakceramics.com/sap/bc/zhu_opr?sap-client=100\"];\n//SAPserver = [\"http://cpuaehaiac2.rakceram.com:8000/sap/bc/zhu_opr?sap-client=100\"];\n\n//SAP TEST\nSAPserver = [\"http://cnuaeecqap2.rakceram.com:8000/sap/bc/zhu_opr?sap-client=100\"];\n//SAPserver = [\"http://dummy.rakceram.com:8000/sap/bc/zhu_opr?sap-client=100\"];\n\n\nresponseData = []\nglobal.set(\"server\", RAKserver);\nglobal.set(\"IMserver\", IMAGEserver);\nglobal.set(\"SAPserver\", SAPserver);\nglobal.set(\"responseData\", responseData);\n\nnode.warn(\"Configured server: \"+RAKserver);\nnode.warn(\"Configured Image server: \"+IMAGEserver);\nnode.warn(\"Configured SAP server: \"+SAPserver);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f104ad9d.e7cd6",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1210,
        "y": 1513,
        "wires": [
            [
                "f94201d9.e04e6",
                "77030591.497a4c"
            ]
        ]
    },
    {
        "id": "1269e433.f993ac",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1513,
        "wires": [
            [
                "f104ad9d.e7cd6"
            ]
        ]
    },
    {
        "id": "d5ea146d.386ec8",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 1530,
        "y": 1513,
        "wires": []
    },
    {
        "id": "5c816936.a973c8",
        "type": "comment",
        "z": "a53d296e.1ea118",
        "name": "FLOW FORKLIFT - Get Forklift details for Device association",
        "info": "",
        "x": 2382,
        "y": 1140,
        "wires": []
    },
    {
        "id": "a685bc60.36858",
        "type": "http in",
        "z": "a53d296e.1ea118",
        "name": "FORKLIFT",
        "url": "/FORKLIFT",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 2222,
        "y": 1280,
        "wires": [
            [
                "e225505f.bd9a3",
                "e7a29c24.4e57a"
            ]
        ]
    },
    {
        "id": "c6353078.9cfb4",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Forklift request, proceeding... \");\n    results = msg.payload;\n    \n    if(results.Process===\"ForkliftDetails\"){\n        msg.Process=results.Process;\n        var body = \"{\"\n        if(results.Reg_No){\n            if((body.slice(-1))===\"\\\"\")\n            {\n                body+=\",\";\n            }\n            body+=\"\\\"Reg_No\\\":\\\"\"+results.Reg_No+\"\\\"\";\n        }\n        if(results.ID){\n            if((body.slice(-1))===\"\\\"\")\n            {\n                body+=\",\";\n            }\n            body+=\"\\\"ID\\\":\\\"\"+results.ID+\"\\\"\";\n        }\n        if(results.Chassis_No){\n            if((body.slice(-1))===\"\\\"\")\n            {\n                body+=\",\";\n            }\n            body+=\"\\\"Chassis_No\\\":\\\"\"+results.Chassis_No+\"\\\"\";\n        }\n        body+=\"}\";\n        msg.payload=body;\n        msg.send=2;\n        return msg;\n    }\n    \n    if(results.Process===\"RegisterForkliftDetails\"){\n        var toUpdate = [];\n       var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\"+\n        \"\\\"serialNumber\\\":\\\"\"+results.ID+\n        \"\\\",\\\"Process\\\":\\\"\"+results.Process+\n        \"\\\",\\\"name\\\":\\\"\"+results.ID+\"\\\"\";\n        \n        if(results.Reg_No){\n            itemToUpdate+=\",\\\"Reg_No\\\":\\\"\"+results.Reg_No+\"\\\"\";\n        }\n        if(results.Plant){\n            itemToUpdate+=\",\\\"Plant\\\":\\\"\"+results.Plant+\"\\\"\";\n        }\n    \tif(results.Chassis_No){\n            itemToUpdate+=\",\\\"Chassis_No\\\":\\\"\"+results.Chassis_No+\"\\\"\";\n        }\n        if(results.RegisteredDevice){\n            itemToUpdate+=\",\\\"RegisteredDevice\\\":\\\"\"+results.RegisteredDevice+\"\\\"\";\n        }\n        itemToUpdate+=\"}\";\n            \n        itemToUpdate = JSON.parse(itemToUpdate);\n        //node.warn(\"itemToUpdate RegisterForkliftDetails value after JSON here: \"+itemToUpdate);\n        \n        toUpdate.push(itemToUpdate);\n        msg.response = \"RegisterForkliftDetails\";\n        msg.ID = results.ID;\n        node.warn(toUpdate);\n        msg.payload=toUpdate;\n        msg.send=1;\n        return msg;\n    }\n    \n    if(results.Process===\"SensorUpdate\"){\n        var toUpdate = [];\n        var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\"+\n        \"\\\"serialNumber\\\":\\\"\"+results.ID+\n        \"\\\",\\\"Process\\\":\\\"\"+results.Process+\n        \"\\\",\\\"source\\\":\\\"MOBILE_\"+results.Process+\"\\\"\";\n        if(results.CAMERAstatus){\n            itemToUpdate+=\",\\\"CAMERAstatus\\\":\\\"\"+results.CAMERAstatus+\"\\\"\";\n        }\n    \tif(results.SENSORstatus){\n            itemToUpdate+=\",\\\"SENSORstatus\\\":\\\"\"+results.SENSORstatus+\"\\\"\";\n        }\n        if(results.GNSSstatus){\n            itemToUpdate+=\",\\\"GNSSstatus\\\":\\\"\"+results.GNSSstatus+\"\\\"\";\n        }\n        itemToUpdate+=\"}\";\n            \n        itemToUpdate = JSON.parse(itemToUpdate);\n\n        toUpdate.push(itemToUpdate);\n        msg.response = \"SensorUpdate\";\n        msg.ID = results.ID;\n        msg.payload=toUpdate;\n        msg.send=1;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2732,
        "y": 1273,
        "wires": [
            [
                "43b85446.ce17bc"
            ]
        ]
    },
    {
        "id": "43b85446.ce17bc",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2912,
        "y": 1273,
        "wires": [
            [
                "46006952.2f57f8"
            ],
            [
                "46006952.2f57f8",
                "1c14b4e5.73041b"
            ],
            [
                "600bbf16.b27f4"
            ]
        ]
    },
    {
        "id": "ad02e651.727e88",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3272,
        "y": 1196,
        "wires": []
    },
    {
        "id": "46006952.2f57f8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "if(msg.response===\"UserCreation\"){\n    msg.payload = {\"response\":\"Authorized. Processing UserCreation for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserCreation response\")\n}\nif(msg.response===\"invUserCreation\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserCreation response\")\n}\nif(msg.response===\"UserUpdate\"){\n    msg.payload = {\"response\":\"Authorized. Processing User Update for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserUpdate response\")\n}\nif(msg.response===\"invUserUpdate\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserUpdate response\")\n}\n\n//****************UPDATE RESPONSES HERE\n\nif(msg.response===\"RegisterForkliftDetails\"){\n    msg.payload = {\"response\":\"Authorized. Processing Device Registration for Forklift \"+msg.ID};\n    msg.statusCode = 200;\n    node.warn(\"Authorized RegisterForkliftDetails response\")\n}\n\nif(msg.response===\"SensorUpdate\"){\n    msg.payload = {\"response\":\"Authorized. Processing SensorUpdate for Forklift \"+msg.ID};\n    msg.statusCode = 200;\n    node.warn(\"Authorized SensorUpdate response\")\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3112,
        "y": 1196,
        "wires": [
            [
                "ad02e651.727e88"
            ]
        ]
    },
    {
        "id": "600bbf16.b27f4",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Parser",
        "func": "if(msg.Process===\"ForkliftDetails\"){\n    msg.server = global.get(\"server\");\n    //node.warn(\"***** Getting ForkliftDetails *****\");\n    msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/FORKLIFTDETAILS?includeResults=true&includeTotal=true\";\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3092,
        "y": 1340,
        "wires": [
            [
                "f1b50daf.8bdcd"
            ]
        ]
    },
    {
        "id": "f1b50daf.8bdcd",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3232,
        "y": 1340,
        "wires": [
            [
                "90278003.a2cd3"
            ]
        ]
    },
    {
        "id": "90278003.a2cd3",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 3392,
        "y": 1340,
        "wires": [
            [
                "b472efac.0c32e",
                "ba8c633d.f7b0c"
            ]
        ]
    },
    {
        "id": "b472efac.0c32e",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3552,
        "y": 1340,
        "wires": []
    },
    {
        "id": "ba8c633d.f7b0c",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Authentication",
        "func": "if(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- Successfully processed: \" +msg.Process+ \" request ----- \");\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3582,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "107eba3d.efe536",
        "type": "comment",
        "z": "a53d296e.1ea118",
        "name": "FLOW OPERATIONS - Forklift Operations",
        "info": "",
        "x": 2320,
        "y": 2000,
        "wires": []
    },
    {
        "id": "3e95ab29.8fb8f4",
        "type": "http in",
        "z": "a53d296e.1ea118",
        "name": "OPERATIONS",
        "url": "/OPERATIONS",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 2260,
        "y": 2180,
        "wires": [
            [
                "5140ca05.58eca4",
                "f2ccdf04.76b7d",
                "fd2a73cb.a7e08"
            ]
        ]
    },
    {
        "id": "1453e60.5b2b21a",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\nvar IMserver = global.get(\"IMserver\");\nmsg.image = [];\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\n        \"response\": \"Unauthorized\"\n    };\n    msg.statusCode = 401;\n    msg.send = 1;\n    return msg;\n} else {\n    results = msg.payload;\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    if (results.PalletSerialNumber) {\n        if (splChars.indexOf(results.PalletSerialNumber.charAt()) != -1) {\n            msg.payload = {\n                \"response\": \"Invalid QR code\"\n            };\n            msg.statusCode = 400;\n        }\n\n        if (results.PalletSerialNumber.length < 18) {\n            msg.payload = {\n                \"response\": \"Invalid QR code\"\n            };\n            msg.statusCode = 400;\n        }\n        if (msg.statusCode == 400) {\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n\n    msg.Process = results.Process;\n    msg.Pallet = results.PalletSerialNumber;\n    node.warn(\"Authorized Forklift \" + msg.Process + \" request, proceeding... \");\n\n    //*************************************   PICKUP PROCESS   *************************************\n    if (msg.Process === \"Pickup\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastPickupDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + results.Process + \"\\\"\";\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Loaded\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\" + results.PalletSerialNumber + \"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invPickup\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n    //*************************************   DROP-OFF PROCESS (INDOOR OR FIELD)   *************************************    \n    if (msg.Process === \"Stored\" || msg.Process === \"Pending-Repacking\" || msg.Process === \"Manual\" || msg.Process === \"Drop off\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffStorageDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Status\\\":\\\"\" + msg.Process + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + processed + \"\\\"\";\n\n            if (results.image) {\n                body += \",\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n\n            if (results.zone) {\n                body += \",\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n\n            if (results.LocationDetails) {\n                body += \",\\\"LocationDetails\\\":\\\"\" + results.LocationDetails + \"\\\"\";\n            }\n\n            if (results.StorageLocation) {\n                body += \",\\\"StorageLocation\\\":\\\"\" + results.StorageLocation + \"\\\"\";\n            }\n\n            if (results.BinLocation) {\n                body += \",\\\"BinLocation\\\":\\\"\" + results.BinLocation + \"\\\"\";\n            }\n\n            if (results.L5Location) {\n                body += \",\\\"L5Location\\\":\\\"\" + results.L5Location + \"\\\"\";\n            }\n\n            if (results.Lane) {\n                body += \",\\\"Lane\\\":\\\"\" + results.Lane + \"\\\"\";\n            }\n\n            if (results.GridID) {\n                body += \",\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n\n            body += \"}\";\n\n            // At this point, `body` contains your JSON string\n\n\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            if (results.GridID) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            node.warn(body)\n            msg.payload = body;\n            msg.originalPayload = results;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n    //*************************************   DROP-OFF PROCESS (INTERNAL RAK TRUCK)   *************************************    \n    if (msg.Process === \"Drop off Transit\" || msg.Process === \"Loaded on vehicle\" || msg.Process === \"Stock Transfer\" || msg.Process === \"Loading for sample section\" || msg.Process === \"Loading for decoration Team\" || msg.Process === \"Loading for water jet cutting\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off Transit\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\" + results.truck_plate + \"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffInternalTruckDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Status\\\":\\\"\" + msg.Process + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + processed + \"\\\",\" +\n                \"\\\"LocationDetails\\\":\\\"\\\",\" +\n                \"\\\"StorageLocation\\\":\\\"\\\",\" +\n                \"\\\"BinLocation\\\":\\\"\\\",\" +\n                \"\\\"Lane\\\":\\\"\\\"\";\n            if (results.image) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            if (results.GridID) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            node.warn(body);\n            msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off Transit\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n\n\n    //*************************************   DROP-OFF PROCESS (EXTERNAL TRUCK)    *************************************    \n    if (msg.Process === \"Shipped\" || msg.Process === \"Drop off Ship\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off Ship\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffExternalTruckDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Process\\\":\\\"Shipped\\\",\" +\n                \"\\\"Status\\\":\\\"Sold\\\",\" +\n                \"\\\"LocationDetails\\\":\\\"\\\",\" +\n                \"\\\"StorageLocation\\\":\\\"\\\",\" +\n                \"\\\"BinLocation\\\":\\\"\\\",\" +\n                \"\\\"Lane\\\":\\\"\\\"\";\n            if (results.image) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            if (results.GridID) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off Ship\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 2173,
        "wires": [
            [
                "d7e955d0.9bd538"
            ]
        ]
    },
    {
        "id": "d7e955d0.9bd538",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2910,
        "y": 2173,
        "wires": [
            [
                "8bc9430a.6d859"
            ],
            [
                "8bc9430a.6d859",
                "79be98d1.671de8",
                "b5c775b7.eaf898",
                "5227c8b70e692d43",
                "15b474ffa940d670"
            ]
        ]
    },
    {
        "id": "d8dcb61d.089128",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3250,
        "y": 2040,
        "wires": []
    },
    {
        "id": "8bc9430a.6d859",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "if(msg.Process===\"Pickup\"){\n    msg.payload = {\"response\":\"Authorized. Processing Pickup for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Pickup response\")\n}\nif(msg.Process===\"invPickup\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Pickup response\")\n}\nif(msg.Process===\"Stored\" || msg.Process===\"Pending-Repacking\" || msg.Process===\"Manual\" || msg.Process===\"Drop off\"){\n    msg.payload = {\"response\":\"Authorized. Processing Drop off for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Drop off response\")\n}\nif(msg.Process===\"invDrop off\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Drop off response\")\n}\nif(msg.Process===\"Drop off Transit\" || msg.Process===\"Loaded on vehicle\" || msg.Process===\"Stock Transfer\" || msg.Process===\"Loading for sample section\" || msg.Process===\"Loading for decoration Team\" || msg.Process===\"Loading for water jet cutting\"){\n    msg.payload = {\"response\":\"Authorized. Processing Drop off Transit for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Drop off Transit response\")\n}\nif(msg.Process===\"invDrop off Transit\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Drop off Transit response\")\n}\nif(msg.Process===\"Drop off Ship\" || msg.Process===\"Shipped\"){\n    msg.payload = {\"response\":\"Authorized. Processing Drop off Ship for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Drop off Ship response\")\n}\nif(msg.Process===\"invDrop off Ship\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Drop off Ship response\")\n}\n\ndelete msg.image;\ndelete msg.Process;\ndelete msg.Pallet;\ndelete msg.fork;\ndelete msg.send;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 2040,
        "wires": [
            [
                "d8dcb61d.089128"
            ]
        ]
    },
    {
        "id": "5140ca05.58eca4",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2470,
        "y": 2248,
        "wires": []
    },
    {
        "id": "2145bb2.396b744",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Pallet item",
        "func": "msg.method = \"POST\";\nvar toUpdate = [];\n\n// Set the URL\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/bulk/serialNumber\";\n\n// Push payload into an array\ntoUpdate.push(msg.payload);\nmsg.payload = toUpdate;\n\n// Prepare payload for Backend GridID updation\nvar backendGridIdUpdation = [];\nif (msg.payload[0] && msg.payload[0].serialNumber && msg.payload[0].GridID) {\n    backendGridIdUpdation.push({\n        serialNumber: msg.payload[0].serialNumber,\n        gridId: msg.payload[0].GridID,\n        location: msg.originalPayload.location\n    });\n}\n\n// Assign the prepared object to msg\nmsg.backendGridIdUpdation = backendGridIdUpdation;\n\n// Log the result\nnode.warn(backendGridIdUpdation);\n\n// Clean up unnecessary properties\ndelete msg.fork;\ndelete msg.req;\ndelete msg.res;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3250,
        "y": 2160,
        "wires": [
            [
                "18e1bc2e957c2282",
                "a7297a3cf7d8a632",
                "2f580fa4e5594597"
            ]
        ]
    },
    {
        "id": "ddae50f7.e65cf",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3810,
        "y": 2160,
        "wires": [
            [
                "f65e13a8.25966",
                "1414885b088c9851"
            ]
        ]
    },
    {
        "id": "f65e13a8.25966",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed \"+msg.Process+\" for the Pallet \"+msg.Pallet+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4000,
        "y": 2160,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "c6a2245a.a21728",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "delay",
        "timeout": "800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3230,
        "y": 2100,
        "wires": [
            [
                "5b0662d8.99946c"
            ]
        ]
    },
    {
        "id": "5b0662d8.99946c",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Forklift item",
        "func": "msg.method = \"POST\";\nvar toUpdate = [];\n\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKFORKLIFT/bulk/serialNumber\";\n\ntoUpdate.push(msg.fork);\nmsg.payload=toUpdate;\n\ndelete msg.fork;\ndelete msg.req;\ndelete msg.res;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3421,
        "y": 2098,
        "wires": [
            [
                "5dbf8780.d96008",
                "a7297a3cf7d8a632"
            ]
        ]
    },
    {
        "id": "5dbf8780.d96008",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3610,
        "y": 2098,
        "wires": []
    },
    {
        "id": "a6336ea3.19505",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1190,
        "y": 1420,
        "wires": []
    },
    {
        "id": "77030591.497a4c",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1350,
        "y": 1553,
        "wires": []
    },
    {
        "id": "1c14b4e5.73041b",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKFORKLIFT/bulk/serialNumber\";\ndelete msg.res;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3132,
        "y": 1273,
        "wires": [
            [
                "30c197c4f26a1ab6"
            ]
        ]
    },
    {
        "id": "5c4204d5.d7299c",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3472,
        "y": 1273,
        "wires": [
            [
                "8f3b0ff3.dd22d"
            ]
        ]
    },
    {
        "id": "8f3b0ff3.dd22d",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "node.warn(msg.payload);\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.response+\" for Forklift \"+msg.ID+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3622,
        "y": 1273,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "c44ef62e.aada28",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3450,
        "y": 1240,
        "wires": []
    },
    {
        "id": "14b40d07.956e73",
        "type": "Load Balance",
        "z": "a53d296e.1ea118",
        "defaultcapacity": 100,
        "dynamic": "6409711c.8bf87",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 2480,
        "y": 280,
        "wires": [
            [
                "41a3c6dd.a91b08"
            ],
            [
                "6254e726.9b9498"
            ],
            [
                "b5dfc7c1.da6d38"
            ],
            [
                "66030b62.6c9d94"
            ]
        ]
    },
    {
        "id": "41a3c6dd.a91b08",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2690,
        "y": 220,
        "wires": []
    },
    {
        "id": "b5dfc7c1.da6d38",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized CycleCount transaction, proceeding... \");\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    results = msg.payload;\n    for(var j=0;j < results.length;j++){\n        for(var i=0;i < results[j].serialNumber.length;i++){\n            if(splChars.indexOf(results[j].serialNumber.charAt(i)) != -1){\n                msg.payload = {\"response\":\"Invalid QR code\"};\n                msg.statusCode = 400;\n            }\n        }\n        if(results[j].serialNumber.length < 18){\n            msg.payload = {\"response\":\"Invalid QR code\"};\n            msg.statusCode = 400;\n        }\n    }\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2790,
        "y": 540,
        "wires": [
            [
                "bda8826b.d8c78"
            ]
        ]
    },
    {
        "id": "3dbc3994.42c8f6",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3250,
        "y": 480,
        "wires": []
    },
    {
        "id": "bda8826b.d8c78",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2970,
        "y": 540,
        "wires": [
            [
                "3dbc3994.42c8f6"
            ],
            [
                "3dbc3994.42c8f6"
            ],
            [
                "a548264b.1472f8",
                "d60746e0.ba1128"
            ]
        ]
    },
    {
        "id": "a548264b.1472f8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Item Messages",
        "func": "results = msg.payload;\nvar counterg = Math.ceil((results.length)/50);\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",results.length);\nglobal.set(\"tmp\",0);\nmsg.updatelocation = 0;\nmsg.serials = [];\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\nvar toUpdate = [];\nvar serials = [];\nfor(var j=0;j < results.length;j++){\n    var body = \"{\"+\n        \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\"+\n        \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n        \"\\\"LastCycleCountDate\\\":\"+ currentTime + \",\"+\n        \"\\\"ProcessTime\\\":\"+ currentTime + \",\"+\n        \"\\\"serialNumber\\\":\\\"\"+ results[j].serialNumber + \"\\\",\"+\n        \"\\\"source\\\":\\\"MOBILE_cycleCount\\\",\"+\n        \"\\\"User\\\":\\\"\"+ results[j].udfs.User.value + \"\\\",\"+\n        \"\\\"UUIDMobile\\\":\\\"\"+ results[j].UUIDMobile + \"\\\",\"+\n        \"\\\"cycleCount\\\":\\\"\"+ results[j].udfs.cycleCount.value + \"\\\",\"+\n        \"\\\"Process\\\":\\\"cycleCount\\\"\";\n    if(results[j].udfs.location){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        msg.updatelocation=1;\n        body+=\"\\\"location\\\":\\\"\"+results[j].udfs.location.value+\"\\\"\";\n    }\n    if(results[j].udfs.LocationDetails){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"LocationDetails\\\":\\\"\"+results[j].udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(results[j].udfs.StorageLocation){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"StorageLocation\\\":\\\"\"+results[j].udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(results[j].udfs.BinLocation){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"BinLocation\\\":\\\"\"+results[j].udfs.BinLocation.value+\"\\\"\";\n    }\n    if(results[j].udfs.Lane){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"Lane\\\":\\\"\"+results[j].udfs.Lane.value+\"\\\"\";\n    }\n    if(results[j].udfs.zone){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        msg.updatelocation=1;\n        body+=\"\\\"zone\\\":\\\"\"+results[j].udfs.zone.value+\"\\\"\";\n    }\n    if(results[j].udfs.L5Location){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"L5Location\\\":\\\"\"+results[j].udfs.L5Location.value+\"\\\"\";\n    }\n    body+=\"}\";\n    \n    toUpdate.push(JSON.parse(body));\n    serials.push(results[j].serialNumber);\n}\n//node.warn(\"String of messages To Update: \" + toUpdate);\n\nmsg.payload=toUpdate;\nmsg.serials=serials;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3170,
        "y": 600,
        "wires": [
            [
                "8d26172c.005888",
                "87da67db.bcecb8"
            ]
        ]
    },
    {
        "id": "8d26172c.005888",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3350,
        "y": 640,
        "wires": []
    },
    {
        "id": "2f905810.cd6a98",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3550,
        "y": 600,
        "wires": [
            [
                "9fca4a7b.58ddc8"
            ]
        ]
    },
    {
        "id": "9fca4a7b.58ddc8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/MOBILE&thingTypeCode=/RAKCERAMICS/RAKPALLET\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3730,
        "y": 600,
        "wires": [
            [
                "681b75b1.1a641c"
            ]
        ]
    },
    {
        "id": "681b75b1.1a641c",
        "type": "half-bridge",
        "z": "a53d296e.1ea118",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 3750,
        "y": 560,
        "wires": [
            [
                "4bed4f79.2c293"
            ]
        ]
    },
    {
        "id": "4bed4f79.2c293",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3750,
        "y": 520,
        "wires": [
            [
                "21957e05.a514c2",
                "ed76a3.6011096"
            ]
        ]
    },
    {
        "id": "21957e05.a514c2",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        node.warn(\" ***** Successfully processed cycleCount for: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3900,
        "y": 520,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "87da67db.bcecb8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 3380,
        "y": 600,
        "wires": [
            [
                "2f905810.cd6a98"
            ]
        ]
    },
    {
        "id": "d60746e0.ba1128",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "results = msg.payload;\nmsg.payload = {\"response\":\"Authorized. Processing CycleCount for \"+results.length+ \" items\"};\nmsg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3130,
        "y": 547,
        "wires": [
            [
                "3dbc3994.42c8f6"
            ]
        ]
    },
    {
        "id": "ed76a3.6011096",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3890,
        "y": 480,
        "wires": []
    },
    {
        "id": "66030b62.6c9d94",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized CycleCount transaction, proceeding... \");\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    results = msg.payload;\n    for(var j=0;j < results.length;j++){\n        for(var i=0;i < results[j].serialNumber.length;i++){\n            if(splChars.indexOf(results[j].serialNumber.charAt(i)) != -1){\n                msg.payload = {\"response\":\"Invalid QR code\"};\n                msg.statusCode = 400;\n            }\n        }\n        if(results[j].serialNumber.length < 18){\n            msg.payload = {\"response\":\"Invalid QR code\"};\n            msg.statusCode = 400;\n        }\n    }\n    \n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2730,
        "y": 820,
        "wires": [
            [
                "c861d201.f8cb6"
            ]
        ]
    },
    {
        "id": "ae822b91.2a4848",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3190,
        "y": 760,
        "wires": []
    },
    {
        "id": "c861d201.f8cb6",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2910,
        "y": 820,
        "wires": [
            [
                "ae822b91.2a4848"
            ],
            [
                "ae822b91.2a4848"
            ],
            [
                "a010b78e.46e9f8",
                "940ddd6f.a4a8f",
                "5a2a85f7.8ffcec"
            ]
        ]
    },
    {
        "id": "a010b78e.46e9f8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Item Messages",
        "func": "results = msg.payload;\nvar counterg = Math.ceil((results.length)/50);\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",results.length);\nglobal.set(\"tmp\",0);\nmsg.updatelocation = 0;\nmsg.serials = [];\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\nvar toUpdate = [];\nvar serials = [];\nfor(var j=0;j < results.length;j++){\n    var body = \"{\"+\n        \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\"+\n        \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n        \"\\\"LastCycleCountDate\\\":\"+ currentTime + \",\"+\n        \"\\\"ProcessTime\\\":\"+ currentTime + \",\"+\n        \"\\\"serialNumber\\\":\\\"\"+ results[j].serialNumber + \"\\\",\"+\n        \"\\\"source\\\":\\\"MOBILE_cycleCount\\\",\"+\n        \"\\\"User\\\":\\\"\"+ results[j].udfs.User.value + \"\\\",\"+\n        \"\\\"UUIDMobile\\\":\\\"\"+ results[j].UUIDMobile + \"\\\",\"+\n        \"\\\"cycleCount\\\":\\\"\"+ results[j].udfs.cycleCount.value + \"\\\",\"+\n        \"\\\"Process\\\":\\\"cycleCount\\\"\";\n    if(results[j].udfs.location){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        msg.updatelocation=1;\n        body+=\"\\\"location\\\":\\\"\"+results[j].udfs.location.value+\"\\\"\";\n    }\n    if(results[j].udfs.LocationDetails){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"LocationDetails\\\":\\\"\"+results[j].udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(results[j].udfs.StorageLocation){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"StorageLocation\\\":\\\"\"+results[j].udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(results[j].udfs.BinLocation){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"BinLocation\\\":\\\"\"+results[j].udfs.BinLocation.value+\"\\\"\";\n    }\n    if(results[j].udfs.Lane){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"Lane\\\":\\\"\"+results[j].udfs.Lane.value+\"\\\"\";\n    }\n    if(results[j].udfs.zone){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        msg.updatelocation=1;\n        body+=\"\\\"zone\\\":\\\"\"+results[j].udfs.zone.value+\"\\\"\";\n    }\n    if(results[j].udfs.L5Location){\n        if((body.slice(-1))===\"\\\"\"){\n            body+=\",\";\n        }\n        body+=\"\\\"L5Location\\\":\\\"\"+results[j].udfs.L5Location.value+\"\\\"\";\n    }\n    body+=\"}\";\n    \n    toUpdate.push(JSON.parse(body));\n    serials.push(results[j].serialNumber);\n}\n//node.warn(\"String of messages To Update: \" + toUpdate);\n\nmsg.payload=toUpdate;\nmsg.serials=serials;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 880,
        "wires": [
            [
                "ade9cb8b.834a58",
                "6e050e6f.8f973"
            ]
        ]
    },
    {
        "id": "ade9cb8b.834a58",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3290,
        "y": 920,
        "wires": []
    },
    {
        "id": "5b8490ad.a0506",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3490,
        "y": 880,
        "wires": [
            [
                "3d2f0397.47181c"
            ]
        ]
    },
    {
        "id": "3d2f0397.47181c",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/MOBILE&thingTypeCode=/RAKCERAMICS/RAKPALLET\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3670,
        "y": 880,
        "wires": [
            [
                "8557d1c8.738b7"
            ]
        ]
    },
    {
        "id": "8557d1c8.738b7",
        "type": "half-bridge",
        "z": "a53d296e.1ea118",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 3690,
        "y": 840,
        "wires": [
            [
                "14ef755a.1b06ab"
            ]
        ]
    },
    {
        "id": "14ef755a.1b06ab",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3690,
        "y": 800,
        "wires": [
            [
                "4d9499b9.0b5758",
                "8b7208e3.69db78"
            ]
        ]
    },
    {
        "id": "4d9499b9.0b5758",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        node.warn(\" ***** Successfully processed cycleCount for: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3840,
        "y": 800,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "6e050e6f.8f973",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 3320,
        "y": 880,
        "wires": [
            [
                "5b8490ad.a0506"
            ]
        ]
    },
    {
        "id": "940ddd6f.a4a8f",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "results = msg.payload;\nmsg.payload = {\"response\":\"Authorized. Processing CycleCount for \"+results.length+ \" items\"};\nmsg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3070,
        "y": 827,
        "wires": [
            [
                "ae822b91.2a4848"
            ]
        ]
    },
    {
        "id": "8b7208e3.69db78",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3830,
        "y": 760,
        "wires": []
    },
    {
        "id": "52fd629b.b273ac",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Item Messages",
        "func": "results = msg.payload;\nvar counterg = Math.ceil((results.length) / 50);\nglobal.set(\"counter\", counterg);\nglobal.set(\"toprocess\", results.length);\nglobal.set(\"tmp\", 0);\nvar IMserver = global.get(\"IMserver\");\nmsg.updatelocation = 0;\nmsg.serials = [];\n\nvar currentTime = new Date().getTime();\nvar toUpdate = [];\nvar toStore = [];\nvar image = [];\nvar serials = [];\n\nfor (var j = 0; j < results.length; j++) {\n    if (results[j].image) {\n        toStore[0] = results[j].image;\n        toStore[1] = results[j].serialNumber;\n        image.push(toStore);\n    }\n\n    var body = {\n        \"thingTypeCode\": \"RAKPALLET\",\n        \"timestamp\": currentTime,\n        \"LastStatusChangeDate\": currentTime,\n        \"ProcessTime\": currentTime,\n        \"serialNumber\": results[j].serialNumber,\n        \"source\": \"MOBILE_StatusChange\",\n        \"User\": results[j].User,\n        \"UUIDMobile\": results[j].UUIDMobile,\n        \"Status\": results[j].Status,\n        \"Process\": \"StatusChange\"\n    };\n\n    if (results[j].image) {\n        body[\"Image\"] = IMserver + \"/\" + results[j].serialNumber + \"/pallet_\" + results[j].serialNumber + \".png\";\n    }\n\n     if (results[j].location) {\n     msg.updatelocation = 1;\n     var locationArray = results[j].location.split(';').map(Number).slice(0, 2);\n     body[\"location\"] = {\n         \"type\": \"Point\",\n         \"coordinates\": locationArray\n     };\n }\n\n    if (results[j].LocationDetails) {\n        body[\"LocationDetails\"] = results[j].LocationDetails;\n    }\n\n    if (results[j].StorageLocation) {\n        body[\"StorageLocation\"] = results[j].StorageLocation;\n    }\n\n    if (results[j].BinLocation) {\n        body[\"BinLocation\"] = results[j].BinLocation;\n    }\n\n    if (results[j].Lane) {\n        body[\"Lane\"] = results[j].Lane;\n    }\n\n    if (results[j].L5Location) {\n        body[\"L5Location\"] = results[j].L5Location;\n    }\n\n    // if (results[j].MappedZone) {\n    //     msg.updatelocation = 1;\n    //     body[\"zone\"] = results[j].MappedZone;\n    // }\n\n    toUpdate.push(body);\n    serials.push(results[j].serialNumber);\n}\n\nmsg.image = image;\nmsg.payload = toUpdate;\nmsg.serials = serials;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 473,
        "wires": [
            [
                "fdc349e8.f7def8",
                "3aceb986.75c0c6"
            ]
        ]
    },
    {
        "id": "d811de03.659f7",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/update/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1771,
        "y": 473,
        "wires": [
            [
                "10d1966170328eeb"
            ]
        ]
    },
    {
        "id": "961221a4.517e9",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1970,
        "y": 400,
        "wires": [
            [
                "c2f98796.747408",
                "c785db5a.2640a8",
                "e4295e9f06b14fa2"
            ]
        ]
    },
    {
        "id": "c2f98796.747408",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 360,
        "wires": []
    },
    {
        "id": "4b871e3f.8d9d7",
        "type": "Load Balance",
        "z": "a53d296e.1ea118",
        "defaultcapacity": 100,
        "dynamic": "6409711c.8bf87",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 400,
        "y": 380,
        "wires": [
            [
                "ed4c9b5f.706108"
            ],
            [
                "115b7a3e.585fc6"
            ],
            [
                "65ab1c51.f2d4c4"
            ],
            [
                "d2982aa5.130178"
            ]
        ]
    },
    {
        "id": "65ab1c51.f2d4c4",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized Status Change transaction, proceeding... \");\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    results = msg.payload;\n    for(var j=0;j < results.length;j++){\n        for(var i=0;i < results[j].serialNumber.length;i++){\n            if(splChars.indexOf(results[j].serialNumber.charAt(i)) != -1){\n                msg.payload = {\"response\":\"Invalid QR code\"};\n                msg.statusCode = 400;\n            }\n        }\n        if(results[j].serialNumber.length < 18){\n            msg.payload = {\"response\":\"Invalid QR code\"};\n            msg.statusCode = 400;\n        }\n    }\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 640,
        "wires": [
            [
                "f8cd55c9.2869d8"
            ]
        ]
    },
    {
        "id": "79f6dc36.41df04",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 1210,
        "y": 600,
        "wires": []
    },
    {
        "id": "f8cd55c9.2869d8",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 640,
        "wires": [
            [
                "79f6dc36.41df04"
            ],
            [
                "79f6dc36.41df04"
            ],
            [
                "2ef78560.69a07a",
                "1937f19c.456e5e"
            ]
        ]
    },
    {
        "id": "2ef78560.69a07a",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "results = msg.payload;\nmsg.payload = {\"response\":\"Authorized. Processing StatusChange for \"+results.length+ \" items\",\"pallet\":results[0].serialNumber,\"process\":\"StatusChange\"};\nmsg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 647,
        "wires": [
            [
                "79f6dc36.41df04"
            ]
        ]
    },
    {
        "id": "1ff6d36f.1406ad",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1970,
        "y": 660,
        "wires": [
            [
                "14cacf1b.348d71",
                "9420693e.a4c138"
            ]
        ]
    },
    {
        "id": "14cacf1b.348d71",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        node.warn(\" ***** Successfully processed StatusChange of \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 660,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "9420693e.a4c138",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2130,
        "y": 620,
        "wires": []
    },
    {
        "id": "d2982aa5.130178",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized Status Change transaction, proceeding... \");\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    results = msg.payload;\n    for(var j=0;j < results.length;j++){\n        for(var i=0;i < results[j].serialNumber.length;i++){\n            if(splChars.indexOf(results[j].serialNumber.charAt(i)) != -1){\n                msg.payload = {\"response\":\"Invalid QR code\"};\n                msg.statusCode = 400;\n            }\n        }\n        if(results[j].serialNumber.length < 18){\n            msg.payload = {\"response\":\"Invalid QR code\"};\n            msg.statusCode = 400;\n        }\n    }\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 920,
        "wires": [
            [
                "c9366504.ab4208"
            ]
        ]
    },
    {
        "id": "dc7b6535.a99018",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 1170,
        "y": 880,
        "wires": []
    },
    {
        "id": "c9366504.ab4208",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 830,
        "y": 920,
        "wires": [
            [
                "dc7b6535.a99018"
            ],
            [
                "dc7b6535.a99018"
            ],
            [
                "b68cc6d4.733228",
                "8f57f93b.5dc188"
            ]
        ]
    },
    {
        "id": "b68cc6d4.733228",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "results = msg.payload;\nmsg.payload = {\"response\":\"Authorized. Processing StatusChange for \"+results.length+ \" items\",\"pallet\":results[0].serialNumber,\"process\":\"StatusChange\"};\nmsg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 927,
        "wires": [
            [
                "dc7b6535.a99018"
            ]
        ]
    },
    {
        "id": "90b09328.6a474",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1970,
        "y": 960,
        "wires": [
            [
                "d252ffee.74508",
                "d5a4a782.33e548",
                "0de5bf84539ea0a7"
            ]
        ]
    },
    {
        "id": "d252ffee.74508",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2130,
        "y": 920,
        "wires": []
    },
    {
        "id": "ed4c9b5f.706108",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "2f95ee21.e79452",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 370,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f37c2c63.56f4c",
        "type": "Load Balance",
        "z": "a53d296e.1ea118",
        "defaultcapacity": 100,
        "dynamic": "a1a175ed.1dae78",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 400,
        "y": 1460,
        "wires": [
            [
                "fa7b064d.2ad978"
            ],
            [],
            [],
            [
                "da513710.0c1c18"
            ]
        ]
    },
    {
        "id": "fa7b064d.2ad978",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 610,
        "y": 1380,
        "wires": []
    },
    {
        "id": "563cf8bf.216f58",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\n        \"response\": \"Unauthorized\"\n    };\n    msg.statusCode = 401;\n    msg.send = 0;\n    return msg;\n} else {\n    node.warn(\"Authorized User Management request, proceeding... \");\n    results = msg.payload;\n\n    if (results.Process === \"UserCreation\") {\n        if (results.Username && results.FirstName && results.LastName && results.Password) {\n            var toUpdate = [];\n            if (!results.Email) {\n                results.Email = \"\";\n            }\n            if (!results.Plant) {\n                results.Plant = \"\";\n            }\n            if (!results.Manager) {\n                results.Manager = \"\";\n            }\n            if (!results.Role) {\n                results.Role = \"\";\n            }\n            var itemToUpdate = {\n                \"thingTypeCode\": \"USERS\",\n                \"timestamp\": currentTime,\n                \"serialNumber\": results.Username,\n                \"FirstName\": results.FirstName,\n                \"name\": results.FirstName,\n                \"LastName\": results.LastName,\n                \"Email\": results.Email,\n                \"Username\": results.Username,\n                \"Password\": results.Password,\n                \"Plant\": results.Plant,\n                \"Manager\": results.Manager,\n                \"Process\": results.Process,\n                \"Role\": results.Role,\n                \"source\": \"MOBILE_\" + results.Process,\n                \"Status\": \"active\"\n            };\n            // toUpdate.push(itemToUpdate);\n            msg.response = \"UserCreation\";\n            msg.Username = results.Username;\n            msg.payload = itemToUpdate;\n            msg.send = 1;\n            return msg;\n        } else {\n            msg.response = \"invUserCreation\";\n            msg.send = 0;\n            return msg;\n        }\n\n    }\n\n    if (results.Process === \"Authenticate\") {\n        //var server = global.get(\"server\");\n        msg.response = \"Authenticate\";\n        msg.Password = results.Password;\n        msg.Username = (results.Username).toUpperCase();\n        //msg.url = server+\"/riot-core-services/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKUSERS/authenticate\";\n        msg.send = 2;\n        return msg;\n    }\n\n    if (results.Process === \"UserUpdate\") {\n        if (results.Username) {\n            var toUpdate = {};\n\n            var itemToUpdate = {\n                // \"thingTypeCode\": \"USERS\",\n                // \"serialNumber\": (results.Username).toUpperCase(),\n                // \"Process\": results.Process,\n                // \"source\": \"MOBILE_\" + results.Process,\n                // \"name\":  results.LastName,\n            };\n\n            if (results.FirstName) {\n                itemToUpdate.FirstName = results.FirstName;\n            }\n            if (results.LastName) {\n                itemToUpdate.LastName = results.LastName;\n            }\n            if (results.Email) {\n                itemToUpdate.Email = results.Email;\n            }\n            if (results.Password) {\n                itemToUpdate.Password = results.Password;\n            }\n            if (results.Plant) {\n                itemToUpdate.Plant = results.Plant;\n            }\n            if (results.Manager) {\n                itemToUpdate.Manager = results.Manager;\n            }\n            if (results.Role) {\n                itemToUpdate.Role = results.Role;\n            }\n            if (results.Status) {\n                itemToUpdate.Status = results.Status;\n            }\n            itemToUpdate.name= results.LastName;\n            itemToUpdate.Process = results.Process;\n            itemToUpdate.thingTypeCode = \"USERS\"; \n\n            //node.warn(\"itemToUpdate value: \" + JSON.stringify(itemToUpdate));\n\n            // Adding itemToUpdate object directly to the toUpdate object\n            toUpdate[\"toUpdate\"] = itemToUpdate;\n\n            //node.warn(\"toUpdate value: \" + JSON.stringify(toUpdate));\n            msg.response = \"UserUpdate\";\n            msg.Username = results.Username;\n            msg.payload = itemToUpdate;\n            msg.send = 1;\n            return msg;\n        } else {\n            msg.response = \"invUserUpdate\";\n            msg.send = 0;\n            return msg;\n        }\n\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1720,
        "wires": [
            [
                "86670808.bfc038",
                "197bd362.ee726d",
                "5b327d4b80115fb6"
            ]
        ]
    },
    {
        "id": "d120bafa.fd03b8",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 1230,
        "y": 1660,
        "wires": []
    },
    {
        "id": "1271f7a7.08fa08",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1250,
        "y": 1740,
        "wires": [
            [
                "140fb990.0047d6",
                "43aabbe96b1880f6"
            ]
        ]
    },
    {
        "id": "140fb990.0047d6",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.response+\" for \"+msg.Username+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 1740,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "964be320.d5108",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "if(msg.response===\"UserCreation\"){\n    msg.payload = {\"response\":\"Authorized. Processing UserCreation for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserCreation response\")\n}\nif(msg.response===\"invUserCreation\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserCreation response\")\n}\nif(msg.response===\"UserUpdate\"){\n    msg.payload = {\"response\":\"Authorized. Processing User Update for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserUpdate response\")\n}\nif(msg.response===\"invUserUpdate\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserUpdate response\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 1660,
        "wires": [
            [
                "d120bafa.fd03b8"
            ]
        ]
    },
    {
        "id": "86670808.bfc038",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 1800,
        "wires": []
    },
    {
        "id": "2e1f787d.391748",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Authentication",
        "func": "results = msg.payload.data;\n\nif(msg.response === \"Authenticate\"){\n    if(results){\n            node.warn(\" ***** Authenticated user \"+results.Username+\" ***** \");\n            msg.payload = {\"response\":\"true\",\n                        \"Username\":results.Username,\n                        \"FirstName\":results.FirstName,\n                        \"LastName\":results.LastName,\n                        \"Role\":results.Role,\n                        \"Plant\":results.Plant,\n                        \"Manager\":results.Manager,\n                        \"Email\":results.Email\n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n    else{\n            node.warn(\" ***** Failed to authenticate. User doesn't exist \");\n            msg.payload = {\"response\":\"false\"};\n            msg.statusCode = 200;\n            return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 1800,
        "wires": [
            [
                "6da21ae9.ae82b4"
            ]
        ]
    },
    {
        "id": "197bd362.ee726d",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 1740,
        "wires": [
            [
                "964be320.d5108"
            ],
            [
                "964be320.d5108",
                "83a3327382a0dd2c"
            ],
            [
                "209c4801.8ef1d8"
            ]
        ]
    },
    {
        "id": "39b04c1e.704914",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1250,
        "y": 1800,
        "wires": [
            [
                "2e1f787d.391748",
                "8b97d660.7538a8"
            ]
        ]
    },
    {
        "id": "209c4801.8ef1d8",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1800,
        "wires": [
            [
                "39b04c1e.704914"
            ]
        ]
    },
    {
        "id": "6da21ae9.ae82b4",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 1570,
        "y": 1800,
        "wires": []
    },
    {
        "id": "d635f936.40e4b8",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1230,
        "y": 1700,
        "wires": []
    },
    {
        "id": "8b97d660.7538a8",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1390,
        "y": 1840,
        "wires": []
    },
    {
        "id": "da513710.0c1c18",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\n        \"response\": \"Unauthorized\"\n    };\n    msg.statusCode = 401;\n    msg.send = 0;\n    return msg;\n} else {\n    node.warn(\"Authorized User Management request, proceeding... \");\n    results = msg.payload;\n\n    if (results.Process === \"UserCreation\") {\n        if (results.Username && results.FirstName && results.LastName && results.Password) {\n            var toUpdate = [];\n            if (!results.Email) {\n                results.Email = \"\";\n            }\n            if (!results.Plant) {\n                results.Plant = \"\";\n            }\n            if (!results.Manager) {\n                results.Manager = \"\";\n            }\n            if (!results.Role) {\n                results.Role = \"\";\n            }\n           var itemToUpdate = {\n                \"thingTypeCode\": \"USERS\",\n                \"timestamp\": currentTime,\n                \"serialNumber\": results.Username,\n                \"FirstName\": results.FirstName,\n                \"name\": results.FirstName,\n                \"LastName\": results.LastName,\n                \"Email\": results.Email,\n                \"Username\": results.Username,\n                \"Password\": results.Password,\n                \"Plant\": results.Plant,\n                \"Manager\": results.Manager,\n                \"Process\": results.Process,\n                \"Role\": results.Role,\n                \"source\": \"MOBILE_\" + results.Process,\n                \"Status\": \"active\"\n            };\n            // toUpdate.push(itemToUpdate);\n            msg.response = \"UserCreation\";\n            msg.Username = results.Username;\n            msg.payload = itemToUpdate;\n            msg.send = 1;\n            return msg;\n        } else {\n            msg.response = \"invUserCreation\";\n            msg.send = 0;\n            return msg;\n        }\n\n    }\n\n    if (results.Process === \"Authenticate\") {\n        //var server = global.get(\"server\");\n        msg.response = \"Authenticate\";\n        msg.Password = results.Password;\n        msg.Username = (results.Username).toUpperCase();\n        //msg.url = server+\"/riot-core-services/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKUSERS/authenticate\";\n        msg.send = 2;\n        return msg;\n    }\n\n    if (results.Process === \"UserUpdate\") {\n        if (results.Username) {\n            var toUpdate = [];\n            var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"USERS\\\",\" +\n                \"\\\"serialNumber\\\":\\\"\" + (results.Username).toUpperCase() +\n                \"\\\",\\\"Process\\\":\\\"\" + results.Process +\n                \"\\\",\\\"source\\\":\\\"MOBILE_\" + results.Process + \"\\\"\";\n            if (results.FirstName) {\n                itemToUpdate += \",\\\"FirstName\\\":\\\"\" + results.FirstName + \"\\\"\";\n            }\n            if (results.LastName) {\n                itemToUpdate += \",\\\"LastName\\\":\\\"\" + results.LastName + \"\\\"\";\n            }\n            if (results.Email) {\n                itemToUpdate += \",\\\"Email\\\":\\\"\" + results.Email + \"\\\"\";\n            }\n            if (results.Password) {\n                itemToUpdate += \",\\\"Password\\\":\\\"\" + results.Password + \"\\\"\";\n            }\n            if (results.Plant) {\n                itemToUpdate += \",\\\"Plant\\\":\\\"\" + results.Plant + \"\\\"\";\n            }\n            if (results.Manager) {\n                itemToUpdate += \",\\\"Manager\\\":\\\"\" + results.Manager + \"\\\"\";\n            }\n            if (results.Role) {\n                itemToUpdate += \",\\\"Role\\\":\\\"\" + results.Role + \"\\\"\";\n            }\n            if (results.Status) {\n                itemToUpdate += \",\\\"Status\\\":\\\"\" + results.Status + \"\\\"\";\n            }\n            itemToUpdate += \"}\";\n            node.warn(\"itemToUpdate value after changing LastName here: \" + itemToUpdate);\n\n            itemToUpdate = JSON.parse(itemToUpdate);\n            node.warn(\"itemToUpdate value after JSON here: \" + itemToUpdate);\n\n            toUpdate.push(itemToUpdate);\n            msg.response = \"UserUpdate\";\n            msg.Username = results.Username;\n            msg.payload = toUpdate;\n            msg.send = 1;\n            return msg;\n        } else {\n            msg.response = \"invUserUpdate\";\n            msg.send = 0;\n            return msg;\n        }\n\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2020,
        "wires": [
            [
                "66407ae.2640684",
                "bb3a1711.c91cd8",
                "3a92f286bf212018"
            ]
        ]
    },
    {
        "id": "cb509f35.615c7",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 1170,
        "y": 1940,
        "wires": []
    },
    {
        "id": "709c820f.03a74c",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1190,
        "y": 2020,
        "wires": [
            [
                "fb38e8a2.f074e8"
            ]
        ]
    },
    {
        "id": "fb38e8a2.f074e8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.response+\" for \"+msg.Username+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 2020,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "2bcad541.b2292a",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "if(msg.response===\"UserCreation\"){\n    msg.payload = {\"response\":\"Authorized. Processing UserCreation for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserCreation response\")\n}\nif(msg.response===\"invUserCreation\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserCreation response\")\n}\nif(msg.response===\"UserUpdate\"){\n    msg.payload = {\"response\":\"Authorized. Processing User Update for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserUpdate response\")\n}\nif(msg.response===\"invUserUpdate\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserUpdate response\")\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 1940,
        "wires": [
            [
                "cb509f35.615c7"
            ]
        ]
    },
    {
        "id": "66407ae.2640684",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 2080,
        "wires": []
    },
    {
        "id": "359c2231.302fee",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Authentication",
        "func": "results = msg.payload.data;\n\nif(msg.response === \"Authenticate\"){\n    if(results){\n            node.warn(\" ***** Authenticated user \"+results.Username+\" ***** \");\n            msg.payload = {\"response\":\"true\",\n                        \"Username\":results.Username,\n                        \"FirstName\":results.FirstName,\n                        \"LastName\":results.LastName,\n                        \"Role\":results.Role,\n                        \"Plant\":results.Plant,\n                        \"Manager\":results.Manager,\n                        \"Email\":results.Email\n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n    else{\n            node.warn(\" ***** Failed to authenticate. User doesn't exist \");\n            msg.payload = {\"response\":\"false\"};\n            msg.statusCode = 200;\n            return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 2080,
        "wires": [
            [
                "1296c4b5.7344eb"
            ]
        ]
    },
    {
        "id": "bb3a1711.c91cd8",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 810,
        "y": 2020,
        "wires": [
            [
                "2bcad541.b2292a"
            ],
            [
                "2bcad541.b2292a",
                "a58371232f0e63fe"
            ],
            [
                "a0cae7e8.3b9c38"
            ]
        ]
    },
    {
        "id": "e81eeacd.891238",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1190,
        "y": 2080,
        "wires": [
            [
                "359c2231.302fee",
                "179d4bbf.e0f5e4"
            ]
        ]
    },
    {
        "id": "a0cae7e8.3b9c38",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 2080,
        "wires": [
            [
                "e81eeacd.891238",
                "c165eb70c6068009"
            ]
        ]
    },
    {
        "id": "1296c4b5.7344eb",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 1510,
        "y": 2080,
        "wires": []
    },
    {
        "id": "da77a2d0.7d39b",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1170,
        "y": 1980,
        "wires": []
    },
    {
        "id": "179d4bbf.e0f5e4",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1330,
        "y": 2120,
        "wires": []
    },
    {
        "id": "e225505f.bd9a3",
        "type": "Load Balance",
        "z": "a53d296e.1ea118",
        "defaultcapacity": 100,
        "dynamic": "a1a175ed.1dae78",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 2502,
        "y": 1280,
        "wires": [
            [
                "5299dc76.996924"
            ],
            [
                "c6353078.9cfb4"
            ],
            [
                "122c2e121a95a2b7"
            ],
            [
                "c510da2f7c9968ae"
            ]
        ]
    },
    {
        "id": "e7a29c24.4e57a",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2472,
        "y": 1344,
        "wires": []
    },
    {
        "id": "5299dc76.996924",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2690,
        "y": 1220,
        "wires": []
    },
    {
        "id": "63921d4b.a69384",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\nvar IMserver = global.get(\"IMserver\");\nmsg.image = [];\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\n        \"response\": \"Unauthorized\"\n    };\n    msg.statusCode = 401;\n    msg.send = 1;\n    return msg;\n} else {\n    results = msg.payload;\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    if (results.PalletSerialNumber) {\n        if (splChars.indexOf(results.PalletSerialNumber.charAt()) != -1) {\n            msg.payload = {\n                \"response\": \"Invalid QR code\"\n            };\n            msg.statusCode = 400;\n        }\n\n        if (results.PalletSerialNumber.length < 18) {\n            msg.payload = {\n                \"response\": \"Invalid QR code\"\n            };\n            msg.statusCode = 400;\n        }\n        if (msg.statusCode == 400) {\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n\n    msg.Process = results.Process;\n    msg.Pallet = results.PalletSerialNumber;\n    node.warn(\"Authorized Forklift \" + msg.Process + \" request, proceeding... \");\n\n    //*************************************   PICKUP PROCESS   *************************************\n    if (msg.Process === \"Pickup\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastPickupDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + results.Process + \"\\\"\";\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Loaded\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\" + results.PalletSerialNumber + \"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invPickup\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n    //*************************************   DROP-OFF PROCESS (INDOOR OR FIELD)   *************************************    \n    if (msg.Process === \"Stored\" || msg.Process === \"Pending-Repacking\" || msg.Process === \"Manual\" || msg.Process === \"Drop off\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffStorageDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Status\\\":\\\"\" + msg.Process + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + processed + \"\\\"\";\n\n            if (results.image) {\n                body += \",\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n\n            if (results.zone) {\n                body += \",\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n\n            if (results.LocationDetails) {\n                body += \",\\\"LocationDetails\\\":\\\"\" + results.LocationDetails + \"\\\"\";\n            }\n\n            if (results.StorageLocation) {\n                body += \",\\\"StorageLocation\\\":\\\"\" + results.StorageLocation + \"\\\"\";\n            }\n\n            if (results.BinLocation) {\n                body += \",\\\"BinLocation\\\":\\\"\" + results.BinLocation + \"\\\"\";\n            }\n\n            if (results.L5Location) {\n                body += \",\\\"L5Location\\\":\\\"\" + results.L5Location + \"\\\"\";\n            }\n\n            if (results.Lane) {\n                body += \",\\\"Lane\\\":\\\"\" + results.Lane + \"\\\"\";\n            }\n\n            if (results.GridID) {\n                body += \",\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n\n            body += \"}\";\n\n            // At this point, `body` contains your JSON string\n\n\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            if (results.GridID) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            node.warn(body)\n            msg.payload = body;\n            msg.originalPayload = results;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n    //*************************************   DROP-OFF PROCESS (INTERNAL RAK TRUCK)   *************************************    \n    if (msg.Process === \"Drop off Transit\" || msg.Process === \"Loaded on vehicle\" || msg.Process === \"Stock Transfer\" || msg.Process === \"Loading for sample section\" || msg.Process === \"Loading for decoration Team\" || msg.Process === \"Loading for water jet cutting\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off Transit\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\" + results.truck_plate + \"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffInternalTruckDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Status\\\":\\\"\" + msg.Process + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + processed + \"\\\",\" +\n                \"\\\"LocationDetails\\\":\\\"\\\",\" +\n                \"\\\"StorageLocation\\\":\\\"\\\",\" +\n                \"\\\"BinLocation\\\":\\\"\\\",\" +\n                \"\\\"Lane\\\":\\\"\\\"\";\n            if (results.image) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            if (results.GridID) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            node.warn(body);\n            msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off Transit\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n\n\n    //*************************************   DROP-OFF PROCESS (EXTERNAL TRUCK)    *************************************    \n    if (msg.Process === \"Shipped\" || msg.Process === \"Drop off Ship\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off Ship\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffExternalTruckDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Process\\\":\\\"Shipped\\\",\" +\n                \"\\\"Status\\\":\\\"Sold\\\",\" +\n                \"\\\"LocationDetails\\\":\\\"\\\",\" +\n                \"\\\"StorageLocation\\\":\\\"\\\",\" +\n                \"\\\"BinLocation\\\":\\\"\\\",\" +\n                \"\\\"Lane\\\":\\\"\\\"\";\n            if (results.image) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            if (results.GridID) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off Ship\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2790,
        "y": 2433,
        "wires": [
            [
                "e1d7a1a1.d7186"
            ]
        ]
    },
    {
        "id": "e1d7a1a1.d7186",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2970,
        "y": 2433,
        "wires": [
            [
                "aac24c8d.75c5e"
            ],
            [
                "aac24c8d.75c5e",
                "7900076b.7a1848",
                "528ff78f.bea7c8",
                "fda65f63.df612",
                "b9c4ce3b.64ed2"
            ]
        ]
    },
    {
        "id": "d85df20.72bff1",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3310,
        "y": 2373,
        "wires": []
    },
    {
        "id": "aac24c8d.75c5e",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "if(msg.Process===\"Pickup\"){\n    msg.payload = {\"response\":\"Authorized. Processing Pickup for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Pickup response\")\n}\nif(msg.Process===\"invPickup\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Pickup response\")\n}\nif(msg.Process===\"Stored\" || msg.Process===\"Pending-Repacking\" || msg.Process===\"Manual\" || msg.Process===\"Drop off\"){\n    msg.payload = {\"response\":\"Authorized. Processing Drop off for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Drop off response\")\n}\nif(msg.Process===\"invDrop off\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Drop off response\")\n}\nif(msg.Process===\"Drop off Transit\" || msg.Process===\"Loaded on vehicle\" || msg.Process===\"Stock Transfer\" || msg.Process===\"Loading for sample section\" || msg.Process===\"Loading for decoration Team\" || msg.Process===\"Loading for water jet cutting\"){\n    msg.payload = {\"response\":\"Authorized. Processing Drop off Transit for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Drop off Transit response\")\n}\nif(msg.Process===\"invDrop off Transit\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Drop off Transit response\")\n}\nif(msg.Process===\"Drop off Ship\" || msg.Process===\"Shipped\"){\n    msg.payload = {\"response\":\"Authorized. Processing Drop off Ship for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Drop off Ship response\")\n}\nif(msg.Process===\"invDrop off Ship\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Drop off Ship response\")\n}\n\ndelete msg.image;\ndelete msg.Process;\ndelete msg.Pallet;\ndelete msg.fork;\ndelete msg.send;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3170,
        "y": 2353,
        "wires": [
            [
                "d85df20.72bff1"
            ]
        ]
    },
    {
        "id": "d4bda258.9ff49",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3850,
        "y": 2493,
        "wires": [
            [
                "249b3ce0.250fd4",
                "f3efcb81272388a0"
            ]
        ]
    },
    {
        "id": "249b3ce0.250fd4",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed \"+msg.Process+\" for the Pallet \"+msg.Pallet+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4000,
        "y": 2493,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "96f0aace.15a7f8",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "delay",
        "timeout": "800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3290,
        "y": 2438,
        "wires": [
            [
                "0fd9d974c6436f44"
            ]
        ]
    },
    {
        "id": "68a179b6.077128",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3670,
        "y": 2436,
        "wires": []
    },
    {
        "id": "fda65f63.df612",
        "type": "json",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3150,
        "y": 2493,
        "wires": [
            [
                "74f4e5ab898478ba"
            ]
        ]
    },
    {
        "id": "528ff78f.bea7c8",
        "type": "json",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "fork",
        "action": "",
        "pretty": false,
        "x": 3150,
        "y": 2440,
        "wires": [
            [
                "96f0aace.15a7f8"
            ]
        ]
    },
    {
        "id": "e3d98299.fd226",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\nvar IMserver = global.get(\"IMserver\");\nmsg.image = [];\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\n        \"response\": \"Unauthorized\"\n    };\n    msg.statusCode = 401;\n    msg.send = 1;\n    return msg;\n} else {\n    results = msg.payload;\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    if (results.PalletSerialNumber) {\n        if (splChars.indexOf(results.PalletSerialNumber.charAt()) != -1) {\n            msg.payload = {\n                \"response\": \"Invalid QR code\"\n            };\n            msg.statusCode = 400;\n        }\n\n        if (results.PalletSerialNumber.length < 18) {\n            msg.payload = {\n                \"response\": \"Invalid QR code\"\n            };\n            msg.statusCode = 400;\n        }\n        if (msg.statusCode == 400) {\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n\n    msg.Process = results.Process;\n    msg.Pallet = results.PalletSerialNumber;\n    node.warn(\"Authorized Forklift \" + msg.Process + \" request, proceeding... \");\n\n    //*************************************   PICKUP PROCESS   *************************************\n    if (msg.Process === \"Pickup\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastPickupDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + results.Process + \"\\\"\";\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Loaded\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\" + results.PalletSerialNumber + \"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invPickup\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n    //*************************************   DROP-OFF PROCESS (INDOOR OR FIELD)   *************************************    \n    if (msg.Process === \"Stored\" || msg.Process === \"Pending-Repacking\" || msg.Process === \"Manual\" || msg.Process === \"Drop off\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffStorageDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Status\\\":\\\"\" + msg.Process + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + processed + \"\\\"\";\n\n            if (results.image) {\n                body += \",\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n\n            if (results.zone) {\n                body += \",\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n\n            if (results.LocationDetails) {\n                body += \",\\\"LocationDetails\\\":\\\"\" + results.LocationDetails + \"\\\"\";\n            }\n\n            if (results.StorageLocation) {\n                body += \",\\\"StorageLocation\\\":\\\"\" + results.StorageLocation + \"\\\"\";\n            }\n\n            if (results.BinLocation) {\n                body += \",\\\"BinLocation\\\":\\\"\" + results.BinLocation + \"\\\"\";\n            }\n\n            if (results.L5Location) {\n                body += \",\\\"L5Location\\\":\\\"\" + results.L5Location + \"\\\"\";\n            }\n\n            if (results.Lane) {\n                body += \",\\\"Lane\\\":\\\"\" + results.Lane + \"\\\"\";\n            }\n\n            if (results.GridID) {\n                body += \",\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n\n            body += \"}\";\n\n            // At this point, `body` contains your JSON string\n\n\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            if (results.GridID) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            node.warn(body)\n            msg.payload = body;\n            msg.originalPayload = results;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n    //*************************************   DROP-OFF PROCESS (INTERNAL RAK TRUCK)   *************************************    \n    if (msg.Process === \"Drop off Transit\" || msg.Process === \"Loaded on vehicle\" || msg.Process === \"Stock Transfer\" || msg.Process === \"Loading for sample section\" || msg.Process === \"Loading for decoration Team\" || msg.Process === \"Loading for water jet cutting\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off Transit\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\" + results.truck_plate + \"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffInternalTruckDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Status\\\":\\\"\" + msg.Process + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + processed + \"\\\",\" +\n                \"\\\"LocationDetails\\\":\\\"\\\",\" +\n                \"\\\"StorageLocation\\\":\\\"\\\",\" +\n                \"\\\"BinLocation\\\":\\\"\\\",\" +\n                \"\\\"Lane\\\":\\\"\\\"\";\n            if (results.image) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            if (results.GridID) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            node.warn(body);\n            msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off Transit\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n\n\n    //*************************************   DROP-OFF PROCESS (EXTERNAL TRUCK)    *************************************    \n    if (msg.Process === \"Shipped\" || msg.Process === \"Drop off Ship\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off Ship\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffExternalTruckDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Process\\\":\\\"Shipped\\\",\" +\n                \"\\\"Status\\\":\\\"Sold\\\",\" +\n                \"\\\"LocationDetails\\\":\\\"\\\",\" +\n                \"\\\"StorageLocation\\\":\\\"\\\",\" +\n                \"\\\"BinLocation\\\":\\\"\\\",\" +\n                \"\\\"Lane\\\":\\\"\\\"\";\n            if (results.image) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            if (results.GridID) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                // Assuming results.location is a string with lat,long format like \"25.276987,55.296249\"\n                const locationArray = results.location.split(',').map(coord => parseFloat(coord.trim()));\n\n                // Check if the locationArray has exactly 2 numeric values\n                if (locationArray.length === 2 && !isNaN(locationArray[0]) && !isNaN(locationArray[1])) {\n                    const locationObject = {\n                        \"type\": \"Point\",\n                        \"coordinates\": locationArray // [lat, long]\n                    };\n\n                    if ((fork.slice(-1)) === \"\\\"\") {\n                        fork += \",\";\n                    }\n\n                    fork += \"\\\"location\\\":\" + JSON.stringify(locationObject);\n                } else {\n                    // Handle the error case where coordinates are invalid\n                    console.error(\"Invalid coordinates: \", results.location);\n                }\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off Ship\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 2713,
        "wires": [
            [
                "f064da82.758928"
            ]
        ]
    },
    {
        "id": "f064da82.758928",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2910,
        "y": 2713,
        "wires": [
            [
                "8b9064c7.4d57e8"
            ],
            [
                "8b9064c7.4d57e8",
                "5586b81d.d85268",
                "5867b20b.dddbac",
                "289f973a.2ae7c8",
                "57ce21c6.520d2"
            ]
        ]
    },
    {
        "id": "1898be17.334712",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3250,
        "y": 2653,
        "wires": []
    },
    {
        "id": "8b9064c7.4d57e8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "if(msg.Process===\"Pickup\"){\n    msg.payload = {\"response\":\"Authorized. Processing Pickup for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Pickup response\")\n}\nif(msg.Process===\"invPickup\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Pickup response\")\n}\nif(msg.Process===\"Stored\" || msg.Process===\"Pending-Repacking\" || msg.Process===\"Manual\" || msg.Process===\"Drop off\"){\n    msg.payload = {\"response\":\"Authorized. Processing Drop off for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Drop off response\")\n}\nif(msg.Process===\"invDrop off\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Drop off response\")\n}\nif(msg.Process===\"Drop off Transit\" || msg.Process===\"Loaded on vehicle\" || msg.Process===\"Stock Transfer\" || msg.Process===\"Loading for sample section\" || msg.Process===\"Loading for decoration Team\" || msg.Process===\"Loading for water jet cutting\"){\n    msg.payload = {\"response\":\"Authorized. Processing Drop off Transit for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Drop off Transit response\")\n}\nif(msg.Process===\"invDrop off Transit\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Drop off Transit response\")\n}\nif(msg.Process===\"Drop off Ship\" || msg.Process===\"Shipped\"){\n    msg.payload = {\"response\":\"Authorized. Processing Drop off Ship for the Pallet \"+msg.Pallet,\"pallet\":msg.Pallet,\"process\":msg.Process};\n    msg.statusCode = 200;\n    node.warn(\"Authorized Drop off Ship response\")\n}\nif(msg.Process===\"invDrop off Ship\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters Drop off Ship response\")\n}\n\ndelete msg.image;\ndelete msg.Process;\ndelete msg.Pallet;\ndelete msg.fork;\ndelete msg.send;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 2633,
        "wires": [
            [
                "1898be17.334712"
            ]
        ]
    },
    {
        "id": "6c2f53ff.d45fdc",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3790,
        "y": 2760,
        "wires": [
            [
                "304e971d.fb70a8",
                "b4df4da2e26bf741"
            ]
        ]
    },
    {
        "id": "304e971d.fb70a8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed \"+msg.Process+\" for the Pallet \"+msg.Pallet+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3960,
        "y": 2760,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "8d60d7a2.751a18",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "delay",
        "timeout": "800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 3230,
        "y": 2718,
        "wires": [
            [
                "59e87643a1ee7795"
            ]
        ]
    },
    {
        "id": "75632a73.389ad4",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3610,
        "y": 2716,
        "wires": []
    },
    {
        "id": "289f973a.2ae7c8",
        "type": "json",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3090,
        "y": 2760,
        "wires": [
            [
                "0f9f84d971738aba"
            ]
        ]
    },
    {
        "id": "5867b20b.dddbac",
        "type": "json",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "fork",
        "action": "",
        "pretty": false,
        "x": 3090,
        "y": 2719,
        "wires": [
            [
                "8d60d7a2.751a18"
            ]
        ]
    },
    {
        "id": "f2ccdf04.76b7d",
        "type": "Load Balance",
        "z": "a53d296e.1ea118",
        "defaultcapacity": 100,
        "dynamic": "6409711c.8bf87",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 2500,
        "y": 2180,
        "wires": [
            [
                "ad7901b.f78c"
            ],
            [
                "1453e60.5b2b21a"
            ],
            [
                "63921d4b.a69384"
            ],
            [
                "e3d98299.fd226"
            ]
        ]
    },
    {
        "id": "5a2a85f7.8ffcec",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3030,
        "y": 960,
        "wires": []
    },
    {
        "id": "fdc349e8.f7def8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 473,
        "wires": [
            [
                "295b811e.3ae20e"
            ]
        ]
    },
    {
        "id": "295b811e.3ae20e",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1590,
        "y": 473,
        "wires": [
            [
                "d811de03.659f7"
            ]
        ]
    },
    {
        "id": "1937f19c.456e5e",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Item Messages",
        "func": "results = msg.payload;\nvar counterg = Math.ceil((results.length) / 50);\nglobal.set(\"counter\", counterg);\nglobal.set(\"toprocess\", results.length);\nglobal.set(\"tmp\", 0);\nvar IMserver = global.get(\"IMserver\");\nmsg.updatelocation = 0;\nmsg.serials = [];\n\nvar currentTime = new Date().getTime();\nvar toUpdate = [];\nvar toStore = [];\nvar image = [];\nvar serials = [];\n\nfor (var j = 0; j < results.length; j++) {\n    if (results[j].image) {\n        toStore[0] = results[j].image;\n        toStore[1] = results[j].serialNumber;\n        image.push(toStore);\n    }\n\n    var body = {\n        \"thingTypeCode\": \"RAKPALLET\",\n        \"timestamp\": currentTime,\n        \"LastStatusChangeDate\": currentTime,\n        \"ProcessTime\": currentTime,\n        \"serialNumber\": results[j].serialNumber,\n        \"source\": \"MOBILE_StatusChange\",\n        \"User\": results[j].User,\n        \"UUIDMobile\": results[j].UUIDMobile,\n        \"Status\": results[j].Status,\n        \"Process\": \"StatusChange\"\n    };\n\n    if (results[j].image) {\n        body[\"Image\"] = IMserver + \"/\" + results[j].serialNumber + \"/pallet_\" + results[j].serialNumber + \".png\";\n    }\n\n     if (results[j].location) {\n     msg.updatelocation = 1;\n     var locationArray = results[j].location.split(';').map(Number).slice(0, 2);\n     body[\"location\"] = {\n         \"type\": \"Point\",\n         \"coordinates\": locationArray\n     };\n }\n\n    if (results[j].LocationDetails) {\n        body[\"LocationDetails\"] = results[j].LocationDetails;\n    }\n\n    if (results[j].StorageLocation) {\n        body[\"StorageLocation\"] = results[j].StorageLocation;\n    }\n\n    if (results[j].BinLocation) {\n        body[\"BinLocation\"] = results[j].BinLocation;\n    }\n\n    if (results[j].Lane) {\n        body[\"Lane\"] = results[j].Lane;\n    }\n\n    if (results[j].L5Location) {\n        body[\"L5Location\"] = results[j].L5Location;\n    }\n\n    // if (results[j].MappedZone) {\n    //     msg.updatelocation = 1;\n    //     body[\"zone\"] = results[j].MappedZone;\n    // }\n\n    toUpdate.push(body);\n    serials.push(results[j].serialNumber);\n}\n\nmsg.image = image;\nmsg.payload = toUpdate;\nmsg.serials = serials;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 740,
        "wires": [
            [
                "b856bfd8.394c3",
                "f38288e6.5b7888"
            ]
        ]
    },
    {
        "id": "4a99b6f6.a122c8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/update/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1811,
        "y": 740,
        "wires": [
            [
                "50b5cbc8951981e5"
            ]
        ]
    },
    {
        "id": "b856bfd8.394c3",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1460,
        "y": 740,
        "wires": [
            [
                "d325b244.025ea"
            ]
        ]
    },
    {
        "id": "d325b244.025ea",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1630,
        "y": 740,
        "wires": [
            [
                "4a99b6f6.a122c8"
            ]
        ]
    },
    {
        "id": "c785db5a.2640a8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        node.warn(\" ***** Successfully processed StatusChange of \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 400,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "d5a4a782.33e548",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        node.warn(\" ***** Successfully processed StatusChange of \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 960,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "8f57f93b.5dc188",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Item Messages",
        "func": "results = msg.payload;\nvar counterg = Math.ceil((results.length) / 50);\nglobal.set(\"counter\", counterg);\nglobal.set(\"toprocess\", results.length);\nglobal.set(\"tmp\", 0);\nvar IMserver = global.get(\"IMserver\");\nmsg.updatelocation = 0;\nmsg.serials = [];\n\nvar currentTime = new Date().getTime();\nvar toUpdate = [];\nvar toStore = [];\nvar image = [];\nvar serials = [];\n\nfor (var j = 0; j < results.length; j++) {\n    if (results[j].image) {\n        toStore[0] = results[j].image;\n        toStore[1] = results[j].serialNumber;\n        image.push(toStore);\n    }\n\n    var body = {\n        \"thingTypeCode\": \"RAKPALLET\",\n        \"timestamp\": currentTime,\n        \"LastStatusChangeDate\": currentTime,\n        \"ProcessTime\": currentTime,\n        \"serialNumber\": results[j].serialNumber,\n        \"source\": \"MOBILE_StatusChange\",\n        \"User\": results[j].User,\n        \"UUIDMobile\": results[j].UUIDMobile,\n        \"Status\": results[j].Status,\n        \"Process\": \"StatusChange\"\n    };\n\n    if (results[j].image) {\n        body[\"Image\"] = IMserver + \"/\" + results[j].serialNumber + \"/pallet_\" + results[j].serialNumber + \".png\";\n    }\n\n     if (results[j].location) {\n     msg.updatelocation = 1;\n     var locationArray = results[j].location.split(';').map(Number).slice(0, 2);\n     body[\"location\"] = {\n         \"type\": \"Point\",\n         \"coordinates\": locationArray\n     };\n }\n\n    if (results[j].LocationDetails) {\n        body[\"LocationDetails\"] = results[j].LocationDetails;\n    }\n\n    if (results[j].StorageLocation) {\n        body[\"StorageLocation\"] = results[j].StorageLocation;\n    }\n\n    if (results[j].BinLocation) {\n        body[\"BinLocation\"] = results[j].BinLocation;\n    }\n\n    if (results[j].Lane) {\n        body[\"Lane\"] = results[j].Lane;\n    }\n\n    if (results[j].L5Location) {\n        body[\"L5Location\"] = results[j].L5Location;\n    }\n\n    // if (results[j].MappedZone) {\n    //     msg.updatelocation = 1;\n    //     body[\"zone\"] = results[j].MappedZone;\n    // }\n\n    toUpdate.push(body);\n    serials.push(results[j].serialNumber);\n}\n\nmsg.image = image;\nmsg.payload = toUpdate;\nmsg.serials = serials;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1020,
        "wires": [
            [
                "b2710295.b0861",
                "eb83e522.8a0168"
            ]
        ]
    },
    {
        "id": "7797fc5b.518774",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/update/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1771,
        "y": 1020,
        "wires": [
            [
                "a3050c08c5beec3b"
            ]
        ]
    },
    {
        "id": "b2710295.b0861",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 1020,
        "wires": [
            [
                "f3d74c6c.6fc9a"
            ]
        ]
    },
    {
        "id": "f3d74c6c.6fc9a",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1590,
        "y": 1020,
        "wires": [
            [
                "7797fc5b.518774"
            ]
        ]
    },
    {
        "id": "1625f863.e5ae28",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "",
        "func": "\nmsg.filename = \"/transfer/\"+msg.image[0][1]+\"/pallet_\"+msg.image[0][1]+\".png\";\nmsg.payload = msg.image[0][0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "3aceb986.75c0c6",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "image.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 420,
        "wires": [
            [
                "19ae8a6b.720d56"
            ]
        ]
    },
    {
        "id": "19ae8a6b.720d56",
        "type": "splitter",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "image",
        "x": 1250,
        "y": 380,
        "wires": [
            [
                "1625f863.e5ae28"
            ]
        ]
    },
    {
        "id": "990b3f75.3d2f1",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "",
        "func": "\nmsg.filename = \"/transfer/\"+msg.image[0][1]+\"/pallet_\"+msg.image[0][1]+\".png\";\nmsg.payload = msg.image[0][0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 649,
        "wires": [
            []
        ]
    },
    {
        "id": "f38288e6.5b7888",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "image.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1290,
        "y": 689,
        "wires": [
            [
                "960d49f9.7388d8"
            ]
        ]
    },
    {
        "id": "960d49f9.7388d8",
        "type": "splitter",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "image",
        "x": 1290,
        "y": 649,
        "wires": [
            [
                "990b3f75.3d2f1"
            ]
        ]
    },
    {
        "id": "ecb45312.8a8d8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "",
        "func": "\nmsg.filename = \"/transfer/\"+msg.image[0][1]+\"/pallet_\"+msg.image[0][1]+\".png\";\nmsg.payload = msg.image[0][0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 930,
        "wires": [
            []
        ]
    },
    {
        "id": "eb83e522.8a0168",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "image.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 970,
        "wires": [
            [
                "9a6d8f3b.1a07c"
            ]
        ]
    },
    {
        "id": "9a6d8f3b.1a07c",
        "type": "splitter",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "image",
        "x": 1250,
        "y": 930,
        "wires": [
            [
                "ecb45312.8a8d8"
            ]
        ]
    },
    {
        "id": "ca1ea978.17d8c8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "",
        "func": "if(msg.Process === \"Drop off Ship\"){\n    msg.filename = \"/transfer/\"+msg.image[1]+\"/shipped_pallet_\"+msg.image[1]+\".png\";\n    msg.payload = msg.image[0];\n}\nelse{\n    msg.filename = \"/transfer/\"+msg.image[1]+\"/pallet_\"+msg.image[1]+\".png\";\n    msg.payload = msg.image[0];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3240,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "b5c775b7.eaf898",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "image.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3090,
        "y": 2280,
        "wires": [
            [
                "ca1ea978.17d8c8"
            ]
        ]
    },
    {
        "id": "79be98d1.671de8",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2910,
        "y": 2280,
        "wires": []
    },
    {
        "id": "7900076b.7a1848",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2970,
        "y": 2540,
        "wires": []
    },
    {
        "id": "dd4bc3bc.0d6cc",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "",
        "func": "if(msg.Process === \"Drop off Ship\"){\n    msg.filename = \"/transfer/\"+msg.image[1]+\"/shipped_pallet_\"+msg.image[1]+\".png\";\n    msg.payload = msg.image[0];\n}\nelse{\n    msg.filename = \"/transfer/\"+msg.image[1]+\"/pallet_\"+msg.image[1]+\".png\";\n    msg.payload = msg.image[0];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3270,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "b9c4ce3b.64ed2",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "image.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3150,
        "y": 2540,
        "wires": [
            [
                "dd4bc3bc.0d6cc"
            ]
        ]
    },
    {
        "id": "cde58d1.95f017",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "",
        "func": "if(msg.Process === \"Drop off Ship\"){\n    msg.filename = \"/transfer/\"+msg.image[1]+\"/shipped_pallet_\"+msg.image[1]+\".png\";\n    msg.payload = msg.image[0];\n}\nelse{\n    msg.filename = \"/transfer/\"+msg.image[1]+\"/pallet_\"+msg.image[1]+\".png\";\n    msg.payload = msg.image[0];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3210,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "57ce21c6.520d2",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "image.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3090,
        "y": 2820,
        "wires": [
            [
                "cde58d1.95f017"
            ]
        ]
    },
    {
        "id": "5586b81d.d85268",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2910,
        "y": 2820,
        "wires": []
    },
    {
        "id": "bb7e7265.19848",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1470,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "256d8d9f.671ed2",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1510,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "230ac554.e000da",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1470,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "fa7cd18b.2e23",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 2690,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "fd2a73cb.a7e08",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Inbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/OPERATIONS/'+ shortDate + '/inbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2500,
        "y": 2100,
        "wires": [
            [
                "ad7901b.f78c",
                "fa7cd18b.2e23"
            ]
        ]
    },
    {
        "id": "ad7901b.f78c",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2690,
        "y": 2100,
        "wires": []
    },
    {
        "id": "f9dd0153.7ce88",
        "type": "http in",
        "z": "a53d296e.1ea118",
        "name": "USER MANAGEMENT",
        "url": "/USERSM",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 2260,
        "wires": [
            [
                "cda3acfa.34f68"
            ]
        ]
    },
    {
        "id": "cda3acfa.34f68",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized User Management request, proceeding... \");\n    results = msg.payload;\n    \n    if(results.Process===\"UserCreation\"){\n        if(results.Username&&results.FirstName&&results.LastName&&results.Password){\n            var toUpdate = [];\n            if(!results.Email){\n                results.Email=\"\";\n            }\n            if(!results.Plant){\n                results.Plant=\"\";\n            }\n            if(!results.Manager){\n                results.Manager=\"\";\n            }\n            if(!results.Role){\n                results.Role=\"\";\n            }\n            var itemToUpdate = {  \n                \"thingTypeCode\" : \"USERS\",\n                \"timestamp\": currentTime,\n                \"serialNumber\": results.Username,\n    \t\t\t\"FirstName\": results.FirstName,\n    \t\t\t\"LastName\": results.LastName,\n    \t\t\t\"Email\": results.Email,\n    \t\t\t\"Username\": results.Username,\n    \t\t\t\"Password\": results.Password,\n    \t\t\t\"Plant\": results.Plant,\n    \t\t\t\"Manager\": results.Manager,\n    \t\t\t\"Process\": results.Process,\n    \t\t\t\"Role\": results.Role,\n    \t\t\t\"source\": \"MOBILE_\"+results.Process,\n    \t\t\t\"Status\": \"active\"\n            };\n            toUpdate.push(itemToUpdate);\n            msg.response = \"UserCreation\";\n            msg.Username = results.Username;\n            msg.payload=toUpdate;\n            msg.send=1;\n            return msg;\n        }else{\n            msg.response = \"invUserCreation\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n    \n    if(results.Process===\"Authenticate\"){\n        var server = global.get(\"server\");\n        msg.response = \"Authenticate\";\n        msg.Password=results.Password;\n        msg.Username = (results.Username).toUpperCase();\n        //msg.url = server+\"/riot-core-services/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.url = \"http://reports:8080/riot-core-reports/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.send=2;\n        return msg;\n    }\n    \n    if(results.Process===\"UserUpdate\"){\n        if(results.Username){\n            var toUpdate = [];\n            var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"USERS\\\",\"+\n            \"\\\"serialNumber\\\":\\\"\"+(results.Username).toUpperCase()+\n            \"\\\",\\\"Process\\\":\\\"\"+results.Process+\n            \"\\\",\\\"source\\\":\\\"MOBILE_\"+results.Process+\"\\\"\";\n            if(results.FirstName){\n                itemToUpdate+=\",\\\"FirstName\\\":\\\"\"+results.FirstName+\"\\\"\";\n            }\n    \t\tif(results.LastName){\n                itemToUpdate+=\",\\\"LastName\\\":\\\"\"+results.LastName+\"\\\"\";\n            }\n            if(results.Email){\n                itemToUpdate+=\",\\\"Email\\\":\\\"\"+results.Email+\"\\\"\";\n            }\n            if(results.Password){\n                itemToUpdate+=\",\\\"Password\\\":\\\"\"+results.Password+\"\\\"\";\n            }\n            if(results.Plant){\n                itemToUpdate+=\",\\\"Plant\\\":\\\"\"+results.Plant+\"\\\"\";\n            }\n            if(results.Manager){\n                itemToUpdate+=\",\\\"Manager\\\":\\\"\"+results.Manager+\"\\\"\";\n            }\n            if(results.Role){\n                itemToUpdate+=\",\\\"Role\\\":\\\"\"+results.Role+\"\\\"\";\n            }\n            if(results.Status){\n                itemToUpdate+=\",\\\"Status\\\":\\\"\"+results.Status+\"\\\"\";\n            }\n            itemToUpdate+=\"}\";\n            node.warn(\"itemToUpdate value after changing LastName here: \"+itemToUpdate);\n            \n            itemToUpdate = JSON.parse(itemToUpdate);\n            node.warn(\"itemToUpdate value after JSON here: \"+itemToUpdate);\n            \n            toUpdate.push(itemToUpdate);\n            msg.response = \"UserUpdate\";\n            msg.Username = results.Username;\n            msg.payload=toUpdate;\n            msg.send=1;\n            return msg;\n        }else{\n            msg.response = \"invUserUpdate\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 2260,
        "wires": [
            [
                "1065a4bd.81102b"
            ]
        ]
    },
    {
        "id": "2df99f18.d278",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Authentication",
        "func": "results = msg.payload.results;\n\nif(msg.response === \"Authenticate\"){\n    if(results.length > 0){\n        if(results[0].Password === msg.Password){\n            node.warn(\" ***** Authenticated user \"+results[0].Username+\" ***** \");\n            msg.payload = {\"response\":\"true\",\n                        \"Username\":results[0].Username,\n                        \"FirstName\":results[0].FirstName,\n                        \"LastName\":results[0].LastName,\n                        \"Role\":results[0].Role,\n                        \"Plant\":results[0].Plant,\n                        \"Manager\":results[0].Manager,\n                        \"Email\":results[0].Email\n            };\n            msg.statusCode = 200;\n            return msg;\n        }else{\n            node.warn(\" ***** Failed to authenticate user \"+results[0].Username+\" ***** \");\n            msg.payload = {\"response\":\"false\"};\n            msg.statusCode = 200;\n            return msg;\n        }\n    }else{\n            node.warn(\" ***** Failed to authenticate. User doesn't exist \");\n            msg.payload = {\"response\":\"false\"};\n            msg.statusCode = 200;\n            return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 2260,
        "wires": [
            [
                "69d17e35.56b8a"
            ]
        ]
    },
    {
        "id": "63d4a645.8aaff8",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 770,
        "y": 2260,
        "wires": [
            [
                "2df99f18.d278",
                "4b1c2466.06682c"
            ]
        ]
    },
    {
        "id": "1065a4bd.81102b",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 2260,
        "wires": [
            [
                "63d4a645.8aaff8",
                "57bfd795.0639e8"
            ]
        ]
    },
    {
        "id": "69d17e35.56b8a",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 1090,
        "y": 2260,
        "wires": []
    },
    {
        "id": "4b1c2466.06682c",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 2300,
        "wires": []
    },
    {
        "id": "57bfd795.0639e8",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 750,
        "y": 2220,
        "wires": []
    },
    {
        "id": "7f3ce0e.3ecb22",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 590,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "fc89fe33.b3f2e",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Inbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/RAK/STATUS-CHANGE/'+ shortDate + '/inbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 260,
        "wires": [
            [
                "7f3ce0e.3ecb22",
                "dc04bc4f.21df2"
            ]
        ]
    },
    {
        "id": "dc04bc4f.21df2",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "253097676feb3d5a",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "post",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKUSERS/create",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1460,
        "wires": [
            [
                "524dac78.457d04",
                "a6336ea3.19505"
            ]
        ]
    },
    {
        "id": "83a3327382a0dd2c",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "post",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKUSERS/create",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1740,
        "wires": [
            [
                "1271f7a7.08fa08",
                "d635f936.40e4b8"
            ]
        ]
    },
    {
        "id": "a58371232f0e63fe",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "post",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKUSERS/create",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 2020,
        "wires": [
            [
                "709c820f.03a74c",
                "da77a2d0.7d39b"
            ]
        ]
    },
    {
        "id": "3a92f286bf212018",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 1960,
        "wires": []
    },
    {
        "id": "5b327d4b80115fb6",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 1680,
        "wires": []
    },
    {
        "id": "9b0b230126c163b9",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 830,
        "y": 1400,
        "wires": []
    },
    {
        "id": "43aabbe96b1880f6",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1390,
        "y": 1700,
        "wires": []
    },
    {
        "id": "23497da7c3993992",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 780,
        "wires": []
    },
    {
        "id": "b044e25ed9a7c909",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 1060,
        "wires": []
    },
    {
        "id": "ae28fc4b33579eba",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 520,
        "wires": []
    },
    {
        "id": "10d1966170328eeb",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 480,
        "wires": [
            [
                "961221a4.517e9",
                "ae28fc4b33579eba"
            ]
        ]
    },
    {
        "id": "50b5cbc8951981e5",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 740,
        "wires": [
            [
                "1ff6d36f.1406ad",
                "23497da7c3993992"
            ]
        ]
    },
    {
        "id": "a3050c08c5beec3b",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 1020,
        "wires": [
            [
                "90b09328.6a474",
                "b044e25ed9a7c909"
            ]
        ]
    },
    {
        "id": "18e1bc2e957c2282",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3270,
        "y": 2200,
        "wires": []
    },
    {
        "id": "a7297a3cf7d8a632",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 2160,
        "wires": [
            [
                "ddae50f7.e65cf"
            ]
        ]
    },
    {
        "id": "1414885b088c9851",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3950,
        "y": 2100,
        "wires": []
    },
    {
        "id": "74f4e5ab898478ba",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Pallet item",
        "func": "msg.method = \"POST\";\nvar toUpdate = [];\n\n// Set the URL\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/bulk/serialNumber\";\n\n// Push payload into an array\ntoUpdate.push(msg.payload);\nmsg.payload = toUpdate;\n\n// Prepare payload for Backend GridID updation\nvar backendGridIdUpdation = [];\nif (msg.payload[0] && msg.payload[0].serialNumber && msg.payload[0].GridID) {\n    backendGridIdUpdation.push({\n        serialNumber: msg.payload[0].serialNumber,\n        gridId: msg.payload[0].GridID,\n        location: msg.originalPayload.location\n    });\n}\n\n// Assign the prepared object to msg\nmsg.backendGridIdUpdation = backendGridIdUpdation;\n\n// Log the result\nnode.warn(backendGridIdUpdation);\n\n// Clean up unnecessary properties\ndelete msg.fork;\ndelete msg.req;\ndelete msg.res;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3330,
        "y": 2480,
        "wires": [
            [
                "bae764bdb9cd5d69",
                "9109b02155b29275",
                "c6dc113fdb51d0d5"
            ]
        ]
    },
    {
        "id": "0fd9d974c6436f44",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Forklift item",
        "func": "msg.method = \"POST\";\nvar toUpdate = [];\n\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKFORKLIFT/bulk/serialNumber\";\n\ntoUpdate.push(msg.fork);\nmsg.payload=toUpdate;\n\ndelete msg.fork;\ndelete msg.req;\ndelete msg.res;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3480,
        "y": 2440,
        "wires": [
            [
                "68a179b6.077128",
                "bae764bdb9cd5d69"
            ]
        ]
    },
    {
        "id": "59e87643a1ee7795",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Forklift item",
        "func": "msg.method = \"POST\";\nvar toUpdate = [];\n\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKFORKLIFT/bulk/serialNumber\";\n\ntoUpdate.push(msg.fork);\nmsg.payload=toUpdate;\n\ndelete msg.fork;\ndelete msg.req;\ndelete msg.res;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3420,
        "y": 2720,
        "wires": [
            [
                "75632a73.389ad4",
                "58e3fabb32b2e0b3"
            ]
        ]
    },
    {
        "id": "0f9f84d971738aba",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare Pallet item",
        "func": "msg.method = \"POST\";\nvar toUpdate = [];\n\n// Set the URL\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/bulk/serialNumber\";\n\n// Push payload into an array\ntoUpdate.push(msg.payload);\nmsg.payload = toUpdate;\n\n// Prepare payload for Backend GridID updation\nvar backendGridIdUpdation = [];\nif (msg.payload[0] && msg.payload[0].serialNumber && msg.payload[0].GridID) {\n    backendGridIdUpdation.push({\n        serialNumber: msg.payload[0].serialNumber,\n        gridId: msg.payload[0].GridID,\n        location: msg.originalPayload.location\n    });\n}\n\n// Assign the prepared object to msg\nmsg.backendGridIdUpdation = backendGridIdUpdation;\n\n// Log the result\nnode.warn(backendGridIdUpdation);\n\n// Clean up unnecessary properties\ndelete msg.fork;\ndelete msg.req;\ndelete msg.res;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3270,
        "y": 2760,
        "wires": [
            [
                "58e3fabb32b2e0b3",
                "2d2dee7672edb944",
                "356cf3eb7deb1545"
            ]
        ]
    },
    {
        "id": "c165eb70c6068009",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1170,
        "y": 2120,
        "wires": []
    },
    {
        "id": "30c197c4f26a1ab6",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3310,
        "y": 1280,
        "wires": [
            [
                "5c4204d5.d7299c",
                "c44ef62e.aada28"
            ]
        ]
    },
    {
        "id": "921717460d3fab35",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2910,
        "y": 1520,
        "wires": [
            [
                "0577bbf575a3a732"
            ],
            [
                "0577bbf575a3a732",
                "1e3d505d3f367c0b"
            ],
            [
                "b040f235fcf6a378"
            ]
        ]
    },
    {
        "id": "6524a1ffc2713cad",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3270,
        "y": 1443,
        "wires": []
    },
    {
        "id": "0577bbf575a3a732",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "if(msg.response===\"UserCreation\"){\n    msg.payload = {\"response\":\"Authorized. Processing UserCreation for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserCreation response\")\n}\nif(msg.response===\"invUserCreation\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserCreation response\")\n}\nif(msg.response===\"UserUpdate\"){\n    msg.payload = {\"response\":\"Authorized. Processing User Update for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserUpdate response\")\n}\nif(msg.response===\"invUserUpdate\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserUpdate response\")\n}\n\n//****************UPDATE RESPONSES HERE\n\nif(msg.response===\"RegisterForkliftDetails\"){\n    msg.payload = {\"response\":\"Authorized. Processing Device Registration for Forklift \"+msg.ID};\n    msg.statusCode = 200;\n    node.warn(\"Authorized RegisterForkliftDetails response\")\n}\n\nif(msg.response===\"SensorUpdate\"){\n    msg.payload = {\"response\":\"Authorized. Processing SensorUpdate for Forklift \"+msg.ID};\n    msg.statusCode = 200;\n    node.warn(\"Authorized SensorUpdate response\")\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 1443,
        "wires": [
            [
                "6524a1ffc2713cad"
            ]
        ]
    },
    {
        "id": "b040f235fcf6a378",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Parser",
        "func": "if(msg.Process===\"ForkliftDetails\"){\n    msg.server = global.get(\"server\");\n    //node.warn(\"***** Getting ForkliftDetails *****\");\n    msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/FORKLIFTDETAILS?includeResults=true&includeTotal=true\";\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3090,
        "y": 1587,
        "wires": [
            [
                "e20125b3273f8fa6"
            ]
        ]
    },
    {
        "id": "e20125b3273f8fa6",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 1587,
        "wires": [
            [
                "b03a0c46f615a288"
            ]
        ]
    },
    {
        "id": "b03a0c46f615a288",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 3390,
        "y": 1587,
        "wires": [
            [
                "453392c85d93ddc8",
                "ac11c893a94f9b85"
            ]
        ]
    },
    {
        "id": "453392c85d93ddc8",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3550,
        "y": 1587,
        "wires": []
    },
    {
        "id": "ac11c893a94f9b85",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Authentication",
        "func": "if(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- Successfully processed: \" +msg.Process+ \" request ----- \");\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3580,
        "y": 1627,
        "wires": [
            []
        ]
    },
    {
        "id": "1e3d505d3f367c0b",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKFORKLIFT/bulk/serialNumber\";\ndelete msg.res;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3130,
        "y": 1520,
        "wires": [
            [
                "338cc1e15c285679"
            ]
        ]
    },
    {
        "id": "f6955da62055ff6a",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3470,
        "y": 1520,
        "wires": [
            [
                "4641427a0effeead"
            ]
        ]
    },
    {
        "id": "4641427a0effeead",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "node.warn(msg.payload);\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.response+\" for Forklift \"+msg.ID+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3620,
        "y": 1520,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "587fb8374cf3564f",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3448,
        "y": 1487,
        "wires": []
    },
    {
        "id": "338cc1e15c285679",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3308,
        "y": 1527,
        "wires": [
            [
                "f6955da62055ff6a",
                "587fb8374cf3564f"
            ]
        ]
    },
    {
        "id": "122c2e121a95a2b7",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Forklift request, proceeding... \");\n    results = msg.payload;\n    \n    if(results.Process===\"ForkliftDetails\"){\n        msg.Process=results.Process;\n        var body = \"{\"\n        if(results.Reg_No){\n            if((body.slice(-1))===\"\\\"\")\n            {\n                body+=\",\";\n            }\n            body+=\"\\\"Reg_No\\\":\\\"\"+results.Reg_No+\"\\\"\";\n        }\n        if(results.ID){\n            if((body.slice(-1))===\"\\\"\")\n            {\n                body+=\",\";\n            }\n            body+=\"\\\"ID\\\":\\\"\"+results.ID+\"\\\"\";\n        }\n        if(results.Chassis_No){\n            if((body.slice(-1))===\"\\\"\")\n            {\n                body+=\",\";\n            }\n            body+=\"\\\"Chassis_No\\\":\\\"\"+results.Chassis_No+\"\\\"\";\n        }\n        body+=\"}\";\n        msg.payload=body;\n        msg.send=2;\n        return msg;\n    }\n    \n    if(results.Process===\"RegisterForkliftDetails\"){\n        var toUpdate = [];\n       var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\"+\n        \"\\\"serialNumber\\\":\\\"\"+results.ID+\n        \"\\\",\\\"Process\\\":\\\"\"+results.Process+\n        \"\\\",\\\"name\\\":\\\"\"+results.ID+\"\\\"\";\n        \n        if(results.Reg_No){\n            itemToUpdate+=\",\\\"Reg_No\\\":\\\"\"+results.Reg_No+\"\\\"\";\n        }\n        if(results.Plant){\n            itemToUpdate+=\",\\\"Plant\\\":\\\"\"+results.Plant+\"\\\"\";\n        }\n    \tif(results.Chassis_No){\n            itemToUpdate+=\",\\\"Chassis_No\\\":\\\"\"+results.Chassis_No+\"\\\"\";\n        }\n        if(results.RegisteredDevice){\n            itemToUpdate+=\",\\\"RegisteredDevice\\\":\\\"\"+results.RegisteredDevice+\"\\\"\";\n        }\n        itemToUpdate+=\"}\";\n            \n        itemToUpdate = JSON.parse(itemToUpdate);\n        //node.warn(\"itemToUpdate RegisterForkliftDetails value after JSON here: \"+itemToUpdate);\n        \n        toUpdate.push(itemToUpdate);\n        msg.response = \"RegisterForkliftDetails\";\n        msg.ID = results.ID;\n        node.warn(toUpdate);\n        msg.payload=toUpdate;\n        msg.send=1;\n        return msg;\n    }\n    \n    if(results.Process===\"SensorUpdate\"){\n        var toUpdate = [];\n        var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\"+\n        \"\\\"serialNumber\\\":\\\"\"+results.ID+\n        \"\\\",\\\"Process\\\":\\\"\"+results.Process+\n        \"\\\",\\\"source\\\":\\\"MOBILE_\"+results.Process+\"\\\"\";\n        if(results.CAMERAstatus){\n            itemToUpdate+=\",\\\"CAMERAstatus\\\":\\\"\"+results.CAMERAstatus+\"\\\"\";\n        }\n    \tif(results.SENSORstatus){\n            itemToUpdate+=\",\\\"SENSORstatus\\\":\\\"\"+results.SENSORstatus+\"\\\"\";\n        }\n        if(results.GNSSstatus){\n            itemToUpdate+=\",\\\"GNSSstatus\\\":\\\"\"+results.GNSSstatus+\"\\\"\";\n        }\n        itemToUpdate+=\"}\";\n            \n        itemToUpdate = JSON.parse(itemToUpdate);\n\n        toUpdate.push(itemToUpdate);\n        msg.response = \"SensorUpdate\";\n        msg.ID = results.ID;\n        msg.payload=toUpdate;\n        msg.send=1;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1520,
        "wires": [
            [
                "921717460d3fab35"
            ]
        ]
    },
    {
        "id": "985964e3d4aab924",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2910,
        "y": 1780,
        "wires": [
            [
                "7e34b724646ff701"
            ],
            [
                "7e34b724646ff701",
                "4a000f0293a20167"
            ],
            [
                "c4533b649b2b9a0e"
            ]
        ]
    },
    {
        "id": "017bf31cce70aefb",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3270,
        "y": 1703,
        "wires": []
    },
    {
        "id": "7e34b724646ff701",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Processing",
        "func": "if(msg.response===\"UserCreation\"){\n    msg.payload = {\"response\":\"Authorized. Processing UserCreation for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserCreation response\")\n}\nif(msg.response===\"invUserCreation\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserCreation response\")\n}\nif(msg.response===\"UserUpdate\"){\n    msg.payload = {\"response\":\"Authorized. Processing User Update for \"+msg.Username};\n    msg.statusCode = 200;\n    node.warn(\"Authorized UserUpdate response\")\n}\nif(msg.response===\"invUserUpdate\"){\n    msg.payload = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.statusCode = 400;\n    node.warn(\"Incomplete paramenters UserUpdate response\")\n}\n\n//****************UPDATE RESPONSES HERE\n\nif(msg.response===\"RegisterForkliftDetails\"){\n    msg.payload = {\"response\":\"Authorized. Processing Device Registration for Forklift \"+msg.ID};\n    msg.statusCode = 200;\n    node.warn(\"Authorized RegisterForkliftDetails response\")\n}\n\nif(msg.response===\"SensorUpdate\"){\n    msg.payload = {\"response\":\"Authorized. Processing SensorUpdate for Forklift \"+msg.ID};\n    msg.statusCode = 200;\n    node.warn(\"Authorized SensorUpdate response\")\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3110,
        "y": 1703,
        "wires": [
            [
                "017bf31cce70aefb"
            ]
        ]
    },
    {
        "id": "c4533b649b2b9a0e",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Parser",
        "func": "if(msg.Process===\"ForkliftDetails\"){\n    msg.server = global.get(\"server\");\n    //node.warn(\"***** Getting ForkliftDetails *****\");\n    msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/FORKLIFTDETAILS?includeResults=true&includeTotal=true\";\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3090,
        "y": 1847,
        "wires": [
            [
                "29661e7c44625220"
            ]
        ]
    },
    {
        "id": "29661e7c44625220",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 1847,
        "wires": [
            [
                "0d7f94e33f135025"
            ]
        ]
    },
    {
        "id": "0d7f94e33f135025",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 3390,
        "y": 1847,
        "wires": [
            [
                "75552f1aba628ed2",
                "3f18d4f390998ced"
            ]
        ]
    },
    {
        "id": "75552f1aba628ed2",
        "type": "http response",
        "z": "a53d296e.1ea118",
        "name": "",
        "x": 3550,
        "y": 1847,
        "wires": []
    },
    {
        "id": "3f18d4f390998ced",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Authentication",
        "func": "if(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- Successfully processed: \" +msg.Process+ \" request ----- \");\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 3580,
        "y": 1887,
        "wires": [
            []
        ]
    },
    {
        "id": "4a000f0293a20167",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKFORKLIFT/bulk/serialNumber\";\ndelete msg.res;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3130,
        "y": 1780,
        "wires": [
            [
                "351a1fa9e67e66f4"
            ]
        ]
    },
    {
        "id": "4ee7a356672a9270",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3470,
        "y": 1780,
        "wires": [
            [
                "e701563b867012b5"
            ]
        ]
    },
    {
        "id": "e701563b867012b5",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "node.warn(msg.payload);\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.response+\" for Forklift \"+msg.ID+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3620,
        "y": 1780,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "5c1429e446ff2e0c",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3448,
        "y": 1747,
        "wires": []
    },
    {
        "id": "351a1fa9e67e66f4",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3308,
        "y": 1787,
        "wires": [
            [
                "4ee7a356672a9270",
                "5c1429e446ff2e0c"
            ]
        ]
    },
    {
        "id": "c510da2f7c9968ae",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Forklift request, proceeding... \");\n    results = msg.payload;\n    \n    if(results.Process===\"ForkliftDetails\"){\n        msg.Process=results.Process;\n        var body = \"{\"\n        if(results.Reg_No){\n            if((body.slice(-1))===\"\\\"\")\n            {\n                body+=\",\";\n            }\n            body+=\"\\\"Reg_No\\\":\\\"\"+results.Reg_No+\"\\\"\";\n        }\n        if(results.ID){\n            if((body.slice(-1))===\"\\\"\")\n            {\n                body+=\",\";\n            }\n            body+=\"\\\"ID\\\":\\\"\"+results.ID+\"\\\"\";\n        }\n        if(results.Chassis_No){\n            if((body.slice(-1))===\"\\\"\")\n            {\n                body+=\",\";\n            }\n            body+=\"\\\"Chassis_No\\\":\\\"\"+results.Chassis_No+\"\\\"\";\n        }\n        body+=\"}\";\n        msg.payload=body;\n        msg.send=2;\n        return msg;\n    }\n    \n    if(results.Process===\"RegisterForkliftDetails\"){\n        var toUpdate = [];\n       var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\"+\n        \"\\\"serialNumber\\\":\\\"\"+results.ID+\n        \"\\\",\\\"Process\\\":\\\"\"+results.Process+\n        \"\\\",\\\"name\\\":\\\"\"+results.ID+\"\\\"\";\n        \n        if(results.Reg_No){\n            itemToUpdate+=\",\\\"Reg_No\\\":\\\"\"+results.Reg_No+\"\\\"\";\n        }\n        if(results.Plant){\n            itemToUpdate+=\",\\\"Plant\\\":\\\"\"+results.Plant+\"\\\"\";\n        }\n    \tif(results.Chassis_No){\n            itemToUpdate+=\",\\\"Chassis_No\\\":\\\"\"+results.Chassis_No+\"\\\"\";\n        }\n        if(results.RegisteredDevice){\n            itemToUpdate+=\",\\\"RegisteredDevice\\\":\\\"\"+results.RegisteredDevice+\"\\\"\";\n        }\n        itemToUpdate+=\"}\";\n            \n        itemToUpdate = JSON.parse(itemToUpdate);\n        //node.warn(\"itemToUpdate RegisterForkliftDetails value after JSON here: \"+itemToUpdate);\n        \n        toUpdate.push(itemToUpdate);\n        msg.response = \"RegisterForkliftDetails\";\n        msg.ID = results.ID;\n        node.warn(toUpdate);\n        msg.payload=toUpdate;\n        msg.send=1;\n        return msg;\n    }\n    \n    if(results.Process===\"SensorUpdate\"){\n        var toUpdate = [];\n        var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\"+\n        \"\\\"serialNumber\\\":\\\"\"+results.ID+\n        \"\\\",\\\"Process\\\":\\\"\"+results.Process+\n        \"\\\",\\\"source\\\":\\\"MOBILE_\"+results.Process+\"\\\"\";\n        if(results.CAMERAstatus){\n            itemToUpdate+=\",\\\"CAMERAstatus\\\":\\\"\"+results.CAMERAstatus+\"\\\"\";\n        }\n    \tif(results.SENSORstatus){\n            itemToUpdate+=\",\\\"SENSORstatus\\\":\\\"\"+results.SENSORstatus+\"\\\"\";\n        }\n        if(results.GNSSstatus){\n            itemToUpdate+=\",\\\"GNSSstatus\\\":\\\"\"+results.GNSSstatus+\"\\\"\";\n        }\n        itemToUpdate+=\"}\";\n            \n        itemToUpdate = JSON.parse(itemToUpdate);\n\n        toUpdate.push(itemToUpdate);\n        msg.response = \"SensorUpdate\";\n        msg.ID = results.ID;\n        msg.payload=toUpdate;\n        msg.send=1;\n        return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1780,
        "wires": [
            [
                "985964e3d4aab924"
            ]
        ]
    },
    {
        "id": "2f2683f2421b860a",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Vizix Success Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar basePath = '/flows/logs/RAK/STATUS-CHANGE/'+ shortDate + '/outbound/vizix_successful/';\nvar baseFilename = initialTime + '.txt';\n\nvar maxFileSize = 1024 * 1024; // 1MB in bytes\nvar sequence = flow.get('sequence') || 1; // Get the current sequence number, default to 1\nvar currentSize = flow.get('currentSize') || 0; // Get the current file size tracked, default to 0\n\n// Generate the filename based on the current sequence\nvar filename = basePath + initialTime + '_' + sequence + '.txt';\n\n// Assuming msg.payload contains the data to write, update the currentSize\nvar dataSize = Buffer.byteLength(msg.payload, 'utf8');\ncurrentSize += dataSize;\n\n// Check if the currentSize exceeds 1MB\nif (currentSize > maxFileSize) {\n    sequence++; // Increment the sequence number\n    filename = basePath + initialTime + '_' + sequence + '.txt'; // Generate new filename\n    currentSize = dataSize; // Reset the size for the new file\n}\n\n// Store the updated sequence and size in flow context\nflow.set('sequence', sequence);\nflow.set('currentSize', currentSize);\n\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 440,
        "wires": [
            [
                "0451fc14220563ca"
            ]
        ]
    },
    {
        "id": "0451fc14220563ca",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 2470,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e4295e9f06b14fa2",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2130,
        "y": 440,
        "wires": [
            [
                "2f2683f2421b860a"
            ],
            [
                "5997f030048dd1c8"
            ]
        ]
    },
    {
        "id": "5997f030048dd1c8",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Vizix Failed Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar basePath = '/flows/logs/RAK/STATUS-CHANGE/'+ shortDate + '/outbound/vizix_failed/';\nvar baseFilename = initialTime + '.txt';\n\nvar maxFileSize = 1024 * 1024; // 1MB in bytes\nvar sequence = flow.get('sequence') || 1; // Get the current sequence number, default to 1\nvar currentSize = flow.get('currentSize') || 0; // Get the current file size tracked, default to 0\n\n// Generate the filename based on the current sequence\nvar filename = basePath + initialTime + '_' + sequence + '.txt';\n\n// Assuming msg.payload contains the data to write, update the currentSize\nvar dataSize = Buffer.byteLength(msg.payload, 'utf8');\ncurrentSize += dataSize;\n\n// Check if the currentSize exceeds 1MB\nif (currentSize > maxFileSize) {\n    sequence++; // Increment the sequence number\n    filename = basePath + initialTime + '_' + sequence + '.txt'; // Generate new filename\n    currentSize = dataSize; // Reset the size for the new file\n}\n\n// Store the updated sequence and size in flow context\nflow.set('sequence', sequence);\nflow.set('currentSize', currentSize);\n\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 480,
        "wires": [
            [
                "9a85b5bd8bdea241"
            ]
        ]
    },
    {
        "id": "9a85b5bd8bdea241",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 2470,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f5925a0b31f7393b",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Vizix Success Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar basePath = '/flows/logs/RAK/STATUS-CHANGE/'+ shortDate + '/outbound/vizix_successful/';\nvar baseFilename = initialTime + '.txt';\n\nvar maxFileSize = 1024 * 1024; // 1MB in bytes\nvar sequence = flow.get('sequence') || 1; // Get the current sequence number, default to 1\nvar currentSize = flow.get('currentSize') || 0; // Get the current file size tracked, default to 0\n\n// Generate the filename based on the current sequence\nvar filename = basePath + initialTime + '_' + sequence + '.txt';\n\n// Assuming msg.payload contains the data to write, update the currentSize\nvar dataSize = Buffer.byteLength(msg.payload, 'utf8');\ncurrentSize += dataSize;\n\n// Check if the currentSize exceeds 1MB\nif (currentSize > maxFileSize) {\n    sequence++; // Increment the sequence number\n    filename = basePath + initialTime + '_' + sequence + '.txt'; // Generate new filename\n    currentSize = dataSize; // Reset the size for the new file\n}\n\n// Store the updated sequence and size in flow context\nflow.set('sequence', sequence);\nflow.set('currentSize', currentSize);\n\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 700,
        "wires": [
            [
                "49162ab3c077670d"
            ]
        ]
    },
    {
        "id": "49162ab3c077670d",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 2470,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "a368f110c2505c0c",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2130,
        "y": 700,
        "wires": [
            [
                "f5925a0b31f7393b"
            ],
            [
                "5ce8696330ad399b"
            ]
        ]
    },
    {
        "id": "5ce8696330ad399b",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Vizix Failed Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar basePath = '/flows/logs/RAK/STATUS-CHANGE/'+ shortDate + '/outbound/vizix_failed/';\nvar baseFilename = initialTime + '.txt';\n\nvar maxFileSize = 1024 * 1024; // 1MB in bytes\nvar sequence = flow.get('sequence') || 1; // Get the current sequence number, default to 1\nvar currentSize = flow.get('currentSize') || 0; // Get the current file size tracked, default to 0\n\n// Generate the filename based on the current sequence\nvar filename = basePath + initialTime + '_' + sequence + '.txt';\n\n// Assuming msg.payload contains the data to write, update the currentSize\nvar dataSize = Buffer.byteLength(msg.payload, 'utf8');\ncurrentSize += dataSize;\n\n// Check if the currentSize exceeds 1MB\nif (currentSize > maxFileSize) {\n    sequence++; // Increment the sequence number\n    filename = basePath + initialTime + '_' + sequence + '.txt'; // Generate new filename\n    currentSize = dataSize; // Reset the size for the new file\n}\n\n// Store the updated sequence and size in flow context\nflow.set('sequence', sequence);\nflow.set('currentSize', currentSize);\n\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 740,
        "wires": [
            [
                "3e3de81e278f8de2"
            ]
        ]
    },
    {
        "id": "3e3de81e278f8de2",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 2470,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "f1dfcbd6f0152af9",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Vizix Success Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar basePath = '/flows/logs/RAK/STATUS-CHANGE/'+ shortDate + '/outbound/vizix_successful/';\nvar baseFilename = initialTime + '.txt';\n\nvar maxFileSize = 1024 * 1024; // 1MB in bytes\nvar sequence = flow.get('sequence') || 1; // Get the current sequence number, default to 1\nvar currentSize = flow.get('currentSize') || 0; // Get the current file size tracked, default to 0\n\n// Generate the filename based on the current sequence\nvar filename = basePath + initialTime + '_' + sequence + '.txt';\n\n// Assuming msg.payload contains the data to write, update the currentSize\nvar dataSize = Buffer.byteLength(msg.payload, 'utf8');\ncurrentSize += dataSize;\n\n// Check if the currentSize exceeds 1MB\nif (currentSize > maxFileSize) {\n    sequence++; // Increment the sequence number\n    filename = basePath + initialTime + '_' + sequence + '.txt'; // Generate new filename\n    currentSize = dataSize; // Reset the size for the new file\n}\n\n// Store the updated sequence and size in flow context\nflow.set('sequence', sequence);\nflow.set('currentSize', currentSize);\n\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 1000,
        "wires": [
            [
                "2fd990f0dbe08bf6",
                "9e112b8aea671a65"
            ]
        ]
    },
    {
        "id": "2fd990f0dbe08bf6",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 2470,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "0de5bf84539ea0a7",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2130,
        "y": 1000,
        "wires": [
            [
                "f1dfcbd6f0152af9"
            ],
            [
                "160e68107ef78ec1"
            ]
        ]
    },
    {
        "id": "160e68107ef78ec1",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Vizix Failed Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar basePath = '/flows/logs/RAK/STATUS-CHANGE/'+ shortDate + '/outbound/vizix_failed/';\nvar baseFilename = initialTime + '.txt';\n\nvar maxFileSize = 1024 * 1024; // 1MB in bytes\nvar sequence = flow.get('sequence') || 1; // Get the current sequence number, default to 1\nvar currentSize = flow.get('currentSize') || 0; // Get the current file size tracked, default to 0\n\n// Generate the filename based on the current sequence\nvar filename = basePath + initialTime + '_' + sequence + '.txt';\n\n// Assuming msg.payload contains the data to write, update the currentSize\nvar dataSize = Buffer.byteLength(msg.payload, 'utf8');\ncurrentSize += dataSize;\n\n// Check if the currentSize exceeds 1MB\nif (currentSize > maxFileSize) {\n    sequence++; // Increment the sequence number\n    filename = basePath + initialTime + '_' + sequence + '.txt'; // Generate new filename\n    currentSize = dataSize; // Reset the size for the new file\n}\n\n// Store the updated sequence and size in flow context\nflow.set('sequence', sequence);\nflow.set('currentSize', currentSize);\n\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 1040,
        "wires": [
            [
                "745a836f3c114039"
            ]
        ]
    },
    {
        "id": "745a836f3c114039",
        "type": "file",
        "z": "a53d296e.1ea118",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 2470,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "9e112b8aea671a65",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2450,
        "y": 960,
        "wires": []
    },
    {
        "id": "bae764bdb9cd5d69",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3690,
        "y": 2480,
        "wires": [
            [
                "d4bda258.9ff49"
            ]
        ]
    },
    {
        "id": "58e3fabb32b2e0b3",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3630,
        "y": 2760,
        "wires": [
            [
                "6c2f53ff.d45fdc"
            ]
        ]
    },
    {
        "id": "9109b02155b29275",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3510,
        "y": 2500,
        "wires": []
    },
    {
        "id": "2d2dee7672edb944",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3370,
        "y": 2860,
        "wires": []
    },
    {
        "id": "f3efcb81272388a0",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3990,
        "y": 2460,
        "wires": []
    },
    {
        "id": "b4df4da2e26bf741",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3950,
        "y": 2720,
        "wires": []
    },
    {
        "id": "5227c8b70e692d43",
        "type": "json",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "fork",
        "action": "",
        "pretty": false,
        "x": 3090,
        "y": 2100,
        "wires": [
            [
                "c6a2245a.a21728"
            ]
        ]
    },
    {
        "id": "642eb3b7e2595112",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "old_Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\nvar IMserver = global.get(\"IMserver\");\nmsg.image = [];\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\n        \"response\": \"Unauthorized\"\n    };\n    msg.statusCode = 401;\n    msg.send = 1;\n    return msg;\n} else {\n    results = msg.payload;\n    node.warn(results);\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    for (var j = 0; j < results.length; j++) {a\n        if (PalletSerialNumber) {\n            for (var i = 0; i < results[j].PalletSerialNumber.length; i++) {\n                if (splChars.indexOf(results[j].PalletSerialNumber.charAt(i)) != -1) {\n                    msg.payload = {\n                        \"response\": \"Invalid QR code\"\n                    };\n                    msg.statusCode = 400;\n                }\n            }\n            if (results[j].PalletSerialNumber.length < 18) {\n                msg.payload = {\n                    \"response\": \"Invalid QR code\"\n                };\n                msg.statusCode = 400;\n            }\n            if (msg.statusCode == 400) {\n                msg.send = 1;\n                return msg;\n            }\n        }\n    }\n\n    msg.Process = results.Process;\n    msg.Pallet = results.PalletSerialNumber;\n    node.warn(\"Authorized Forklift \" + msg.Process + \" request, proceeding... \");\n\n    //*************************************   PICKUP PROCESS   *************************************\n    if (msg.Process === \"Pickup\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n\n            var body = {\n                \"thingTypeCode\": \"RAKPALLET\",\n                \"timestamp\": currentTime,\n                \"ProcessTime\": currentTime,\n                \"LastPickupDate\": currentTime,\n                \"serialNumber\": results.PalletSerialNumber,\n                \"lastDetectTime\": results.lastDetectTime,\n                \"source\": results.source,\n                \"User\": results.User,\n                \"RAKFORKLIFT\": results.ForkliftSerialNumber,\n                \"Process\": results.Process\n            };\n\n            // Adding location object if it exists\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                body[\"location\"] = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n\n            // Adding GridID if it exists\n            if (results.GridID) {\n                body[\"GridID\"] = results.GridID;\n            }\n\n            // Adding zone if it exists\n            if (results.zone) {\n                body[\"zone\"] = results.MappedZone;\n            }\n\n            // Converting the object to a JSON string\n            node.warn(body);\n\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Loaded\\\",\" +\n                \"\\\"name\\\":\" + results.PalletSerialNumber + \",\" +\n                \"\\\"RAKPALLET\\\":\\\"\" + results.PalletSerialNumber + \"\\\"\";\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                fork[\"location\"] = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                fork += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.GridID) { //edit\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            msg.payload = JSON.parse(body);\n           // msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invPickup\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n    //*************************************   DROP-OFF PROCESS (INDOOR OR FIELD)   *************************************    \n    if (msg.Process === \"Stored\" || msg.Process === \"Pending-Repacking\" || msg.Process === \"Manual\" || msg.Process === \"Drop off\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffStorageDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Status\\\":\\\"\" + msg.Process + \"\\\",\" +\n                \"\\\"name\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + processed + \"\\\"\";\n\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n\n            if (results.zone) {\n                body += \",\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            if (results.LocationDetails) {\n                body += \",\\\"LocationDetails\\\":\\\"\" + results.LocationDetails + \"\\\"\";\n            }\n            if (results.StorageLocation) {\n                body += \",\\\"StorageLocation\\\":\\\"\" + results.StorageLocation + \"\\\"\";\n            }\n            if (results.BinLocation) {\n                body += \",\\\"BinLocation\\\":\\\"\" + results.BinLocation + \"\\\"\";\n            }\n            if (results.L5Location) {\n                body += \",\\\"L5Location\\\":\\\"\" + results.L5Location + \"\\\"\";\n            }\n            if (results.GridID) { // edit\n                body += \",\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            if (results.Lane) {\n                body += \",\\\"Lane\\\":\\\"\" + results.Lane + \"\\\"\";\n            }\n\n            body += \"}\";\n\n\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                \"\\\"name\\\":\" + results.PalletSerialNumber + \",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                fork[\"location\"] = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                fork += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.GridID) { //edit\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            node.warn(body);\n            msg.payload = JSON.parse(body);\n            //msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n    //*************************************   DROP-OFF PROCESS (INTERNAL RAK TRUCK)   *************************************    \n    if (msg.Process === \"Drop off Transit\" || msg.Process === \"Loaded on vehicle\" || msg.Process === \"Stock Transfer\" || msg.Process === \"Loading for sample section\" || msg.Process === \"Loading for decoration Team\" || msg.Process === \"Loading for water jet cutting\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off Transit\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\" + results.truck_plate + \"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffInternalTruckDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Status\\\":\\\"\" + msg.Process + \"\\\",\" +\n                \"\\\"Process\\\":\\\"\" + processed + \"\\\",\" +\n                \"\\\"LocationDetails\\\":\\\"\\\",\" +\n                \"\\\"StorageLocation\\\":\\\"\\\",\" +\n                \"\\\"BinLocation\\\":\\\"\\\",\" +\n                \"\\\"Lane\\\":\\\"\\\"\";\n\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.image) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n            if (results.Lane) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"Lane\\\":\\\"\" + results.Lane + \"\\\"\";\n            }\n            if (results.GridID) { //edit\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n                //\"\\\"name\\\":\" + results.PalletSerialNumber + \",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                fork[\"location\"] = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                fork += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.GridID) { //edit\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            fork += \"}\";\n            node.warn(fork);\n            msg.fork = fork;\n            node.warn(body);\n            msg.payload = body;\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off Transit\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n\n\n    //*************************************   DROP-OFF PROCESS (EXTERNAL TRUCK)    *************************************    \n    if (msg.Process === \"Shipped\" || msg.Process === \"Drop off Ship\") {\n        if (results.PalletSerialNumber && results.source && results.lastDetectTime && results.User && results.ForkliftSerialNumber) {\n            if (results.image) {\n                msg.image[0] = results.image;\n                msg.image[1] = msg.Pallet;\n            }\n            var processed = \"Drop off Ship\";\n            var body = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\" +\n                \"\\\"RAKFORKLIFT\\\":\\\"\\\",\" +\n                \"\\\"RAKTRUCK\\\":\\\"\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"ProcessTime\\\":\" + currentTime + \",\" +\n                \"\\\"LastDropOffExternalTruckDate\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.PalletSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"Process\\\":\\\"Shipped\\\",\" +\n                \"\\\"Status\\\":\\\"Sold\\\",\" +\n                \"\\\"LocationDetails\\\":\\\"\\\",\" +\n                \"\\\"StorageLocation\\\":\\\"\\\",\" +\n                \"\\\"BinLocation\\\":\\\"\\\",\" +\n                \"\\\"Lane\\\":\\\"\\\"\";\n            if (results.image) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"Image\\\":\\\"\" + IMserver + \"/\" + msg.Pallet + \"/pallet_\" + msg.Pallet + \".png\\\"\";\n            }\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                var locationObject = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                body += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.GridID) { //edit\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            if (results.zone) {\n                if ((body.slice(-1)) === \"\\\"\") {\n                    body += \",\";\n                }\n                body += \"\\\"zone\\\":\\\"\" + results.MappedZone + \"\\\"\";\n            }\n            body += \"}\";\n            var fork = \"{\" +\n                \"\\\"thingTypeCode\\\":\\\"RAKFORKLIFT\\\",\" +\n                \"\\\"timestamp\\\":\" + currentTime + \",\" +\n                \"\\\"serialNumber\\\":\\\"\" + results.ForkliftSerialNumber + \"\\\",\" +\n                \"\\\"lastDetectTime\\\":\" + results.lastDetectTime + \",\" +\n                \"\\\"source\\\":\\\"\" + results.source + \"\\\",\" +\n                \"\\\"User\\\":\\\"\" + results.User + \"\\\",\" +\n                \"\\\"status\\\":\\\"Empty\\\",\" +\n               // \"\\\"name\\\":\" + results.PalletSerialNumber + \",\" +\n                \"\\\"RAKPALLET\\\":\\\"\\\"\";\n            if (results.location) {\n                var locationArray = results.location.split(';').map(Number).slice(0, 2);\n                fork[\"location\"] = {\n                    \"type\": \"Point\",\n                    \"coordinates\": locationArray\n                };\n                fork += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n            }\n            if (results.GridID) { //edit\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"GridID\\\":\\\"\" + results.GridID + \"\\\"\";\n            }\n            if (results.zone) {\n                if ((fork.slice(-1)) === \"\\\"\") {\n                    fork += \",\";\n                }\n                fork += \"\\\"zone\\\":\\\"\" + results.zone + \"\\\"\";\n            }\n            fork += \"}\";\n            msg.fork = fork;\n            msg.payload = JSON.parse(body);\n            msg.send = 2;\n            return msg;\n        } else {\n            msg.Process = \"invDrop off Ship\"\n            msg.send = 1;\n            return msg;\n        }\n    }\n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "15b474ffa940d670",
        "type": "json",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3070,
        "y": 2160,
        "wires": [
            [
                "2145bb2.396b744"
            ]
        ]
    },
    {
        "id": "a6ee9fa5c4642ef8",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "backendGridIdUpdation",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3780,
        "y": 2220,
        "wires": [
            [
                "71a4a1fd422fc4b9"
            ]
        ]
    },
    {
        "id": "71a4a1fd422fc4b9",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://164.90.229.163:6001/api/v1/stock-count/qr-code/location\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3960,
        "y": 2220,
        "wires": [
            [
                "d8a4494d396cd3de",
                "a660df40dc3c6c0e"
            ]
        ]
    },
    {
        "id": "a660df40dc3c6c0e",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 4160,
        "y": 2220,
        "wires": [
            [
                "18c11a64726f7238",
                "b6c50cef6cb6bf3b"
            ]
        ]
    },
    {
        "id": "d8a4494d396cd3de",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 4140,
        "y": 2260,
        "wires": []
    },
    {
        "id": "18c11a64726f7238",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed \"+msg.Process+\" for the Pallet \"+msg.Pallet+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4330,
        "y": 2220,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "b6c50cef6cb6bf3b",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 4320,
        "y": 2260,
        "wires": []
    },
    {
        "id": "b72d1c0a170e858f",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3630,
        "y": 2220,
        "wires": [
            [
                "a6ee9fa5c4642ef8"
            ]
        ]
    },
    {
        "id": "2f580fa4e5594597",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "Process",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Stored",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Pending-Repacking",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Manual",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Drop off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 3490,
        "y": 2220,
        "wires": [
            [
                "b72d1c0a170e858f"
            ],
            [
                "b72d1c0a170e858f"
            ],
            [
                "b72d1c0a170e858f"
            ],
            [
                "b72d1c0a170e858f"
            ]
        ]
    },
    {
        "id": "628edfd86f32ebd4",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "backendGridIdUpdation",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3810,
        "y": 2560,
        "wires": [
            [
                "36c93f2ee4560757"
            ]
        ]
    },
    {
        "id": "36c93f2ee4560757",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://164.90.229.163:6001/api/v1/stock-count/qr-code/location\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3990,
        "y": 2560,
        "wires": [
            [
                "cc8997a6ec4201c0",
                "e0188d9d39867c9d"
            ]
        ]
    },
    {
        "id": "e0188d9d39867c9d",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 4190,
        "y": 2560,
        "wires": [
            [
                "b92afc53eefc8e6d",
                "5310c4b5fb2481ef"
            ]
        ]
    },
    {
        "id": "cc8997a6ec4201c0",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 4170,
        "y": 2600,
        "wires": []
    },
    {
        "id": "b92afc53eefc8e6d",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed \"+msg.Process+\" for the Pallet \"+msg.Pallet+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4360,
        "y": 2560,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "5310c4b5fb2481ef",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 4350,
        "y": 2600,
        "wires": []
    },
    {
        "id": "e708de2f1df1b6b4",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3660,
        "y": 2560,
        "wires": [
            [
                "628edfd86f32ebd4"
            ]
        ]
    },
    {
        "id": "c6dc113fdb51d0d5",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "Process",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Stored",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Pending-Repacking",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Manual",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Drop off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 3510,
        "y": 2560,
        "wires": [
            [
                "e708de2f1df1b6b4"
            ],
            [
                "e708de2f1df1b6b4"
            ],
            [
                "e708de2f1df1b6b4"
            ],
            [
                "e708de2f1df1b6b4"
            ]
        ]
    },
    {
        "id": "a96436adb42b06cf",
        "type": "change",
        "z": "a53d296e.1ea118",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "backendGridIdUpdation",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3810,
        "y": 2840,
        "wires": [
            [
                "52aaaa4ced9db9b9"
            ]
        ]
    },
    {
        "id": "52aaaa4ced9db9b9",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://164.90.229.163:6001/api/v1/stock-count/qr-code/location\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3990,
        "y": 2840,
        "wires": [
            [
                "14e2ca626ec5c3b2",
                "081e79cabe08751b"
            ]
        ]
    },
    {
        "id": "081e79cabe08751b",
        "type": "http request",
        "z": "a53d296e.1ea118",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 4190,
        "y": 2840,
        "wires": [
            [
                "b8d5703be3e006cc",
                "41962b4a8103d168"
            ]
        ]
    },
    {
        "id": "14e2ca626ec5c3b2",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 4170,
        "y": 2880,
        "wires": []
    },
    {
        "id": "b8d5703be3e006cc",
        "type": "function",
        "z": "a53d296e.1ea118",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed \"+msg.Process+\" for the Pallet \"+msg.Pallet+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4360,
        "y": 2840,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "41962b4a8103d168",
        "type": "debug",
        "z": "a53d296e.1ea118",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 4350,
        "y": 2880,
        "wires": []
    },
    {
        "id": "1253d20db13d4867",
        "type": "delay",
        "z": "a53d296e.1ea118",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3660,
        "y": 2840,
        "wires": [
            [
                "a96436adb42b06cf"
            ]
        ]
    },
    {
        "id": "356cf3eb7deb1545",
        "type": "switch",
        "z": "a53d296e.1ea118",
        "name": "",
        "property": "Process",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Stored",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Pending-Repacking",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Manual",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Drop off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 3510,
        "y": 2840,
        "wires": [
            [
                "1253d20db13d4867"
            ],
            [
                "1253d20db13d4867"
            ],
            [
                "1253d20db13d4867"
            ],
            [
                "1253d20db13d4867"
            ]
        ]
    },
    {
        "id": "8c24dbaa.d75ef8",
        "type": "http in",
        "z": "b0648658.d6e708",
        "name": "SAVE NEW TAGGED ITEMS",
        "url": "/TAGGING",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 200,
        "wires": [
            [
                "864d5b98.b441e8",
                "483b3775.0f0aa8",
                "5a5a1c0e.c68c74"
            ]
        ]
    },
    {
        "id": "848563c4.1bef3",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized Tagging transaction, proceeding... \");\n    \n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    results = msg.payload;\n    for(var j=0;j < results.length;j++){\n        for(var i=0;i < results[j].serialNumber.length;i++){\n            if(splChars.indexOf(results[j].serialNumber.charAt(i)) != -1){\n                msg.payload = {\"response\":\"Invalid QR code\"};\n                msg.statusCode = 400;\n            }\n        }\n        if(results[j].serialNumber.length < 18){\n            msg.payload = {\"response\":\"Invalid QR code\"};\n            msg.statusCode = 400;\n        }\n        if(results[j].udfs.Material){\n            var Material = results[j].udfs.Material.value;\n            if(Material.length > 18 || Material.length < 4 ){\n                msg.payload = {\"response\":\"Invalid MATERIAL code. Please review.\"};\n                msg.statusCode = 400;\n            }\n        }\n        \n    }\n    msg.payloadOriginal=msg.payload;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 194,
        "wires": [
            [
                "bc3dc7ad.45bbb8"
            ]
        ]
    },
    {
        "id": "ee386dcd.456b3",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1150,
        "y": 73,
        "wires": []
    },
    {
        "id": "bc3dc7ad.45bbb8",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 851,
        "y": 194,
        "wires": [
            [
                "ee386dcd.456b3"
            ],
            [
                "ee386dcd.456b3"
            ],
            [
                "31f7731a.1d105c"
            ]
        ]
    },
    {
        "id": "b87d05d5.389028",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nvar zone = \"\";\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",message.length);\nglobal.set(\"tmp\",0);\nvar IMserver = global.get(\"IMserver\");\n\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar serialArrKeyHolder = [];\nvar palletArr = [];\nmessage.forEach(function(item){\n    var arrKey = \"{\\\"serialNumber\\\":\\\"\"+item.serialNumber+\"\\\",\"+\n                \"\\\"User\\\":\\\"\"+item.udfs.User.value+\"\\\",\"+\n                \"\\\"PalletType\\\":\\\"\"+item.type+\"\\\",\"+\n                \"\\\"UUIDMobile\\\":\\\"\"+item.udfs.UUIDMobile.value+\"\\\"\";\n    if(item.image){\n        arrKey+=\",\\\"Image\\\":\\\"\"+item.image+\"\\\"\";\n    }\n    if(item.udfs.location || item.udfs.zone){\n        if(item.udfs.location && (!item.udfs.zone || item.udfs.zone.value === \"\" )){\n            arrKey+=\",\\\"location\\\":\\\"\"+item.udfs.location.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the LOCATION value: \"+item.udfs.location.value);\n        }\n        if(item.udfs.zone && item.udfs.zone.value !== \"\" ){\n            arrKey+=\",\\\"zone\\\":\\\"\"+item.udfs.zone.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the ZONE value: \"+item.udfs.zone.value);\n        }\n    }\n    if(item.udfs.LocationDetails){\n        arrKey+=\",\\\"LocationDetails\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n        arrKey+=\",\\\"Plant\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(item.udfs.StorageLocation){\n        arrKey+=\",\\\"StorageLocation\\\":\\\"\"+item.udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(item.udfs.BinLocation){\n        arrKey+=\",\\\"BinLocation\\\":\\\"\"+item.udfs.BinLocation.value+\"\\\"\";\n    }\n    if(item.udfs.Lane){\n        arrKey+=\",\\\"Lane\\\":\\\"\"+item.udfs.Lane.value+\"\\\"\";\n    }\n    if(item.udfs.L5Location){\n        arrKey+=\",\\\"L5Location\\\":\\\"\"+item.udfs.L5Location.value+\"\\\"\";\n    }\n    arrKey+=\"}\";\n\n    var key = [arrKey];\n    //node.warn(key)\n    serialArrKeyHolder[key] = serialArrKeyHolder[key]||{};\n    var obj = serialArrKeyHolder[key];\n    if(Object.keys(obj).length === 0){\n        palletArr.push({obj});\n    }\n    obj.key = JSON.parse(key);\n    obj.materials  = obj.materials || [];\n        var arrMaterials = \"{\"+\n        \"\\\"Material\\\":\\\"\"+item.udfs.Material.value+\"\\\", \"+\n        \"\\\"Batch\\\":\\\"\"+item.udfs.Batch.value+\"\\\"\";\n    if(item.udfs.Qty){\n        arrMaterials+=\", \\\"Qty\\\":\\\"\"+item.udfs.Qty.value+\"\\\"\";\n    }\n    arrMaterials+=\"}\";\n    obj.materials.push(JSON.parse(arrMaterials));\n\n});\n\nfor(var i=0;i < palletArr.length;i++){\n    palletArr[i] = palletArr[i].obj\n}\n\nvar toUpdateP = [];\nvar toUpdateM = [];\nvar toStore = [];\nvar image = [];\nvar results = palletArr;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n//node.warn(results);\nfor(var j=0;j < results.length;j++){\n    msg.Process = \"Tagging\";\n    //SETTING UP HUITEM INFORMATION\n    for(var k=0;k < results[j].materials.length;k++){\n        var Material = results[j].materials[k].Material;\n        var Batch =  results[j].materials[k].Batch;\n        var Material_Master = Material;\n        \n        Material_Master = Material_Master.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n        Material_Master = Material_Master.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n        Material_Master = Material_Master.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n        Material_Master = Material_Master.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n        Material_Master = Material_Master.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n        Material_Master = Material_Master.latinize(); //Removing diacritics\n        Material_Master = Material_Master.replace(/\\s/g, ''); //Removing spaces\n        \n        var hu = k+1;\n        \n       var bodyM = {\n    \"thingTypeCode\": \"HUITEM\",\n    \"serialNumber\": results[j].key.serialNumber + \"_\" + results[j].materials[k].Batch + \"_\" + Material_Master,\n    \"timestamp\": currentTime,\n    \"Production_Date\": currentTime,\n    \"aliasMapped\": results[j].key.serialNumber + \"_\" + results[j].materials[k].Batch + \"_\" + Material_Master,\n    \"source\": \"FLOW_Tagging\",\n    \"Material_Code\": Material,\n    \"Material_Master\": Material_Master,\n    \"name\": results[j].key.serialNumber + \"_\" + results[j].materials[k].Batch + \"_\" + Material_Master,\n    \"Batch\": results[j].materials[k].Batch,\n    \"huitem\": pad(hu, 6)\n};\n\nif (results[j].materials[k].Qty) {\n    bodyM[\"Qty\"] = results[j].materials[k].Qty;\n    // ****************** TEMPORARILY REMOVING THE RETAGGING PROCESS - 30/06/2021\n    // msg.Process = \"reTagging\";\n}\n\nif (results[j].key.location) {\n    var locationArray = results[j].key.location.split(';').map(Number).slice(0, 2);\n    bodyM[\"location\"] = {\n        \"type\": \"Point\",\n        \"coordinates\": locationArray\n    };\n}\n\nif (results[j].key.zone && results[j].key.zone !== \"\") {\n    var zone = results[j].key.zone.replace(/[&]/g, \"\");\n    bodyM[\"zone\"] = zone;\n}\n\nif (results[j].key.LocationDetails) {\n    bodyM[\"LocationDetails\"] = results[j].key.LocationDetails;\n    bodyM[\"Plant\"] = results[j].key.LocationDetails;\n}\n\nif (results[j].key.StorageLocation) {\n    bodyM[\"StorageLocation\"] = results[j].key.StorageLocation;\n}\n\nbodyM[\"Process\"] = msg.Process;\n\nnode.warn(JSON.stringify(bodyM));\ntoUpdateM.push(bodyM);\n    }\n    \n    if(results[j].key.Image){\n        toStore[0] = results[j].key.Image;\n        toStore[1] = results[j].key.serialNumber;\n        image.push(toStore);\n    }\n    \n    //SETTING UP PALLET INFORMATION\n    var bodyP = {\n    \"thingTypeCode\": \"RAKPALLET\",\n    \"aliasMapped\": results[j].key.serialNumber + \"_\" + Batch + \"_\" + Material_Master,\n    \"timestamp\": currentTime,\n    \"TaggingDate\": currentTime,\n    \"ProcessTime\": currentTime,\n    \"serialNumber\": results[j].key.serialNumber,\n    \"PalletType\": results[j].key.PalletType,\n    \"source\": \"MOBILE_Tagging\",\n    \"name\": results[j].key.serialNumber,\n    \"facility\": \"RAKHQ\",\n    \"Status\": \"Active\",\n    \"User\": results[j].key.User,\n    \"UUIDMobile\": results[j].key.UUIDMobile,\n    \"Process\": msg.Process\n};\n\nif (results[j].key.Image) {\n    bodyP[\"Image\"] = IMserver + \"/\" + results[j].key.serialNumber + \"/pallet_\" + results[j].key.serialNumber + \".png\";\n}\n\nif (results[j].key.location) {\n    var locationArray = results[j].key.location.split(';').map(Number).slice(0, 2);\n    bodyP[\"location\"] = {\n        \"type\": \"Point\",\n        \"coordinates\": locationArray\n    };\n}\n\nif (results[j].key.zone && results[j].key.zone !== \"\") {\n    var zone = results[j].key.zone.replace(/[&]/g, \"\");\n    bodyP[\"zone\"] = zone;\n}\n\nif (results[j].key.LocationDetails) {\n    bodyP[\"LocationDetails\"] = results[j].key.LocationDetails;\n    bodyP[\"Plant\"] = results[j].key.LocationDetails;\n}\n\nif (results[j].key.StorageLocation) {\n    bodyP[\"StorageLocation\"] = results[j].key.StorageLocation;\n}\n\nif (results[j].key.BinLocation) {\n    bodyP[\"BinLocation\"] = results[j].key.BinLocation;\n}\n\nif (results[j].key.Lane) {\n    bodyP[\"Lane\"] = results[j].key.Lane;\n}\n\nif (results[j].key.L5Location) {\n    bodyP[\"L5Location\"] = results[j].key.L5Location;\n}\n\nnode.warn(JSON.stringify(bodyP));\ntoUpdateP.push(bodyP);\n\n}\n\n//node.warn(\"String of messages To Update: \" + toUpdateP);\nmsg.image=image;\nnode.warn(toUpdateP)\nmsg.payloadP=toUpdateP;\nmsg.payloadM=toUpdateM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 280,
        "wires": [
            [
                "c591c9c1.3ff018",
                "c08512f0.f9463",
                "782f5e0c.f3526",
                "dd2a2802.531038"
            ]
        ]
    },
    {
        "id": "bcffc771.c10e38",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1650,
        "y": 253,
        "wires": [
            [
                "a3918b4e.830578"
            ]
        ]
    },
    {
        "id": "a3918b4e.830578",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/MOBILE&thingTypeCode=/RAKCERAMICS/RAKPALLET\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 253,
        "wires": [
            [
                "29e4166d.eac77a"
            ]
        ]
    },
    {
        "id": "29e4166d.eac77a",
        "type": "half-bridge",
        "z": "b0648658.d6e708",
        "name": "",
        "bridgeCode": "FLOW",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1850,
        "y": 213,
        "wires": [
            [
                "b5aec080.00821"
            ]
        ]
    },
    {
        "id": "b5aec080.00821",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1850,
        "y": 173,
        "wires": [
            [
                "169bcb16.8c0a45",
                "566ec0a6.7ea01"
            ]
        ]
    },
    {
        "id": "169bcb16.8c0a45",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1860,
        "y": 133,
        "wires": [
            [
                "8fcfeb77166083ab"
            ]
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "7a9855b3.df862c",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 253,
        "wires": [
            [
                "bcffc771.c10e38"
            ]
        ]
    },
    {
        "id": "566ec0a6.7ea01",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1990,
        "y": 173,
        "wires": []
    },
    {
        "id": "2f85c810.be9378",
        "type": "comment",
        "z": "b0648658.d6e708",
        "name": "FLOW FOR THE TAGGING PROCESS - With Image and Mixed pallets support",
        "info": "",
        "x": 320,
        "y": 40,
        "wires": []
    },
    {
        "id": "bdc89388.89872",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "",
        "func": "\nmsg.filename = \"/transfer/\"+msg.image[0][1]+\"/pallet_\"+msg.image[0][1]+\".png\";\nmsg.payload = msg.image[0][0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 173,
        "wires": [
            [
                "68e3e337.aa886c",
                "ddd7f4aec40ea69f"
            ]
        ]
    },
    {
        "id": "98db8815.9459a8",
        "type": "file",
        "z": "b0648658.d6e708",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1560,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c591c9c1.3ff018",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "image.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1290,
        "y": 213,
        "wires": [
            [
                "269580b8.4abea"
            ]
        ]
    },
    {
        "id": "5a5a1c0e.c68c74",
        "type": "Load Balance",
        "z": "b0648658.d6e708",
        "defaultcapacity": 100,
        "dynamic": "6409711c.8bf87",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 440,
        "y": 200,
        "wires": [
            [
                "d5c581a1.0df54"
            ],
            [
                "bef614f3.9fbcb8"
            ],
            [
                "bef614f3.9fbcb8"
            ],
            [
                "bef614f3.9fbcb8"
            ]
        ]
    },
    {
        "id": "864d5b98.b441e8",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 410,
        "y": 273,
        "wires": []
    },
    {
        "id": "1824071d.ae4129",
        "type": "http in",
        "z": "b0648658.d6e708",
        "name": "GET PALLET DATA",
        "url": "/PALLETDATAOLD",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1480,
        "wires": [
            [
                "57426a16.9a05b4",
                "ce92040f.27e308"
            ]
        ]
    },
    {
        "id": "656c8bf6.a5c3f4",
        "type": "comment",
        "z": "b0648658.d6e708",
        "name": "FLOW TO GET PALLET DATA - Supports: Pallet Data with SerialNumber and returns MIXED pallets data",
        "info": "",
        "x": 430,
        "y": 1333,
        "wires": []
    },
    {
        "id": "269580b8.4abea",
        "type": "splitter",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "image",
        "x": 1290,
        "y": 173,
        "wires": [
            [
                "bdc89388.89872"
            ]
        ]
    },
    {
        "id": "782f5e0c.f3526",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 253,
        "wires": [
            [
                "7a9855b3.df862c"
            ]
        ]
    },
    {
        "id": "969c716c.e1a06",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "HUITEM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadM",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1315,
        "y": 293,
        "wires": [
            [
                "32418fba.b36db"
            ]
        ]
    },
    {
        "id": "32418fba.b36db",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1479,
        "y": 293,
        "wires": [
            [
                "187d797a.292e17"
            ]
        ]
    },
    {
        "id": "187d797a.292e17",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1649,
        "y": 293,
        "wires": [
            [
                "7d28f8ae.ab0de8"
            ]
        ]
    },
    {
        "id": "7d28f8ae.ab0de8",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/FLOW&thingTypeCode=/RAKCERAMICS/HUITEM\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1832,
        "y": 293,
        "wires": [
            [
                "5db43a72.655de4"
            ]
        ]
    },
    {
        "id": "5db43a72.655de4",
        "type": "half-bridge",
        "z": "b0648658.d6e708",
        "name": "",
        "bridgeCode": "FLOW",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1850,
        "y": 333,
        "wires": [
            [
                "2bf7a617.aaf17a"
            ]
        ]
    },
    {
        "id": "2bf7a617.aaf17a",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1850,
        "y": 373,
        "wires": [
            [
                "f7c5fd03.14ee9"
            ]
        ]
    },
    {
        "id": "f7c5fd03.14ee9",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1990,
        "y": 373,
        "wires": []
    },
    {
        "id": "dd2a2802.531038",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1300,
        "y": 333,
        "wires": [
            [
                "969c716c.e1a06"
            ]
        ]
    },
    {
        "id": "6d81259.68cc1dc",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized Tagging transaction, proceeding... \");\n    \n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    results = msg.payload;\n    for(var j=0;j < results.length;j++){\n        for(var i=0;i < results[j].serialNumber.length;i++){\n            if(splChars.indexOf(results[j].serialNumber.charAt(i)) != -1){\n                msg.payload = {\"response\":\"Invalid QR code\"};\n                msg.statusCode = 400;\n            }\n        }\n        if(results[j].serialNumber.length < 18){\n            msg.payload = {\"response\":\"Invalid QR code\"};\n            msg.statusCode = 400;\n        }\n        if(results[j].udfs.Material){\n            var Material = results[j].udfs.Material.value;\n            if(Material.length > 18 || Material.length < 4 ){\n                msg.payload = {\"response\":\"Invalid MATERIAL code. Please review.\"};\n                msg.statusCode = 400;\n            }\n        }\n        \n    }\n    msg.payloadOriginal=msg.payload;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 593,
        "wires": [
            [
                "f174e02b.276fa"
            ]
        ]
    },
    {
        "id": "e220f273.c32ab",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1130,
        "y": 580,
        "wires": []
    },
    {
        "id": "f174e02b.276fa",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 951,
        "y": 593,
        "wires": [
            [
                "e220f273.c32ab"
            ],
            [
                "e220f273.c32ab"
            ],
            [
                "798f8421.65a10c"
            ]
        ]
    },
    {
        "id": "e18723e5.c4e93",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nvar zone = \"\";\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",message.length);\nglobal.set(\"tmp\",0);\nvar IMserver = global.get(\"IMserver\");\n\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar serialArrKeyHolder = [];\nvar palletArr = [];\nmessage.forEach(function(item){\n    var arrKey = \"{\\\"serialNumber\\\":\\\"\"+item.serialNumber+\"\\\",\"+\n                \"\\\"User\\\":\\\"\"+item.udfs.User.value+\"\\\",\"+\n                \"\\\"PalletType\\\":\\\"\"+item.type+\"\\\",\"+\n                \"\\\"UUIDMobile\\\":\\\"\"+item.udfs.UUIDMobile.value+\"\\\"\";\n    if(item.image){\n        arrKey+=\",\\\"Image\\\":\\\"\"+item.image+\"\\\"\";\n    }\n    if(item.udfs.location || item.udfs.zone){\n        if(item.udfs.location && (!item.udfs.zone || item.udfs.zone.value === \"\" )){\n            arrKey+=\",\\\"location\\\":\\\"\"+item.udfs.location.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the LOCATION value: \"+item.udfs.location.value);\n        }\n        if(item.udfs.zone && item.udfs.zone.value !== \"\" ){\n            arrKey+=\",\\\"zone\\\":\\\"\"+item.udfs.zone.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the ZONE value: \"+item.udfs.zone.value);\n        }\n    }\n    if(item.udfs.LocationDetails){\n        arrKey+=\",\\\"LocationDetails\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n        arrKey+=\",\\\"Plant\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(item.udfs.StorageLocation){\n        arrKey+=\",\\\"StorageLocation\\\":\\\"\"+item.udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(item.udfs.BinLocation){\n        arrKey+=\",\\\"BinLocation\\\":\\\"\"+item.udfs.BinLocation.value+\"\\\"\";\n    }\n    if(item.udfs.Lane){\n        arrKey+=\",\\\"Lane\\\":\\\"\"+item.udfs.Lane.value+\"\\\"\";\n    }\n    if(item.udfs.L5Location){\n        arrKey+=\",\\\"L5Location\\\":\\\"\"+item.udfs.L5Location.value+\"\\\"\";\n    }\n    arrKey+=\"}\";\n\n    var key = [arrKey];\n    //node.warn(key)\n    serialArrKeyHolder[key] = serialArrKeyHolder[key]||{};\n    var obj = serialArrKeyHolder[key];\n    if(Object.keys(obj).length === 0){\n        palletArr.push({obj});\n    }\n    obj.key = JSON.parse(key);\n    obj.materials  = obj.materials || [];\n        var arrMaterials = \"{\"+\n        \"\\\"Material\\\":\\\"\"+item.udfs.Material.value+\"\\\", \"+\n        \"\\\"Batch\\\":\\\"\"+item.udfs.Batch.value+\"\\\"\";\n    if(item.udfs.Qty){\n        arrMaterials+=\", \\\"Qty\\\":\\\"\"+item.udfs.Qty.value+\"\\\"\";\n    }\n    arrMaterials+=\"}\";\n    obj.materials.push(JSON.parse(arrMaterials));\n\n});\n\nfor(var i=0;i < palletArr.length;i++){\n    palletArr[i] = palletArr[i].obj\n}\n\nvar toUpdateP = [];\nvar toUpdateM = [];\nvar toStore = [];\nvar image = [];\nvar results = palletArr;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n//node.warn(results);\nfor(var j=0;j < results.length;j++){\n    msg.Process = \"Tagging\";\n    //SETTING UP HUITEM INFORMATION\n    for(var k=0;k < results[j].materials.length;k++){\n        var Material = results[j].materials[k].Material;\n        var Batch =  results[j].materials[k].Batch;\n        var Material_Master = Material;\n        \n        Material_Master = Material_Master.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n        Material_Master = Material_Master.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n        Material_Master = Material_Master.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n        Material_Master = Material_Master.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n        Material_Master = Material_Master.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n        Material_Master = Material_Master.latinize(); //Removing diacritics\n        Material_Master = Material_Master.replace(/\\s/g, ''); //Removing spaces\n        \n        var hu = k+1;\n        \n       var bodyM = {\n    \"thingTypeCode\": \"HUITEM\",\n    \"serialNumber\": results[j].key.serialNumber + \"_\" + results[j].materials[k].Batch + \"_\" + Material_Master,\n    \"timestamp\": currentTime,\n    \"Production_Date\": currentTime,\n    \"aliasMapped\": results[j].key.serialNumber + \"_\" + results[j].materials[k].Batch + \"_\" + Material_Master,\n    \"source\": \"FLOW_Tagging\",\n    \"Material_Code\": Material,\n    \"Material_Master\": Material_Master,\n    \"name\": results[j].key.serialNumber + \"_\" + results[j].materials[k].Batch + \"_\" + Material_Master,\n    \"Batch\": results[j].materials[k].Batch,\n    \"huitem\": pad(hu, 6)\n};\n\nif (results[j].materials[k].Qty) {\n    bodyM[\"Qty\"] = results[j].materials[k].Qty;\n    // ****************** TEMPORARILY REMOVING THE RETAGGING PROCESS - 30/06/2021\n    // msg.Process = \"reTagging\";\n}\n\nif (results[j].key.location) {\n    var locationArray = results[j].key.location.split(';').map(Number).slice(0, 2);\n    bodyM[\"location\"] = {\n        \"type\": \"Point\",\n        \"coordinates\": locationArray\n    };\n}\n\nif (results[j].key.zone && results[j].key.zone !== \"\") {\n    var zone = results[j].key.zone.replace(/[&]/g, \"\");\n    bodyM[\"zone\"] = zone;\n}\n\nif (results[j].key.LocationDetails) {\n    bodyM[\"LocationDetails\"] = results[j].key.LocationDetails;\n    bodyM[\"Plant\"] = results[j].key.LocationDetails;\n}\n\nif (results[j].key.StorageLocation) {\n    bodyM[\"StorageLocation\"] = results[j].key.StorageLocation;\n}\n\nbodyM[\"Process\"] = msg.Process;\n\nnode.warn(JSON.stringify(bodyM));\ntoUpdateM.push(bodyM);\n    }\n    \n    if(results[j].key.Image){\n        toStore[0] = results[j].key.Image;\n        toStore[1] = results[j].key.serialNumber;\n        image.push(toStore);\n    }\n    \n    //SETTING UP PALLET INFORMATION\n    var bodyP = {\n    \"thingTypeCode\": \"RAKPALLET\",\n    \"aliasMapped\": results[j].key.serialNumber,\n    \"timestamp\": currentTime,\n    \"TaggingDate\": currentTime,\n    \"ProcessTime\": currentTime,\n    \"serialNumber\": results[j].key.serialNumber,\n    \"PalletType\": results[j].key.PalletType,\n    \"source\": \"MOBILE_Tagging\",\n    \"name\": results[j].key.serialNumber,\n    \"facility\": \"RAKHQ\",\n    \"Status\": \"Active\",\n    \"User\": results[j].key.User,\n    \"UUIDMobile\": results[j].key.UUIDMobile,\n    \"Process\": msg.Process\n};\n\nif (results[j].key.Image) {\n    bodyP[\"Image\"] = IMserver + \"/\" + results[j].key.serialNumber + \"/pallet_\" + results[j].key.serialNumber + \".png\";\n}\n\nif (results[j].key.location) {\n    var locationArray = results[j].key.location.split(';').map(Number).slice(0, 2);\n    bodyP[\"location\"] = {\n        \"type\": \"Point\",\n        \"coordinates\": locationArray\n    };\n}\n\nif (results[j].key.zone && results[j].key.zone !== \"\") {\n    var zone = results[j].key.zone.replace(/[&]/g, \"\");\n    bodyP[\"zone\"] = zone;\n}\n\nif (results[j].key.LocationDetails) {\n    bodyP[\"LocationDetails\"] = results[j].key.LocationDetails;\n    bodyP[\"Plant\"] = results[j].key.LocationDetails;\n}\n\nif (results[j].key.StorageLocation) {\n    bodyP[\"StorageLocation\"] = results[j].key.StorageLocation;\n}\n\nif (results[j].key.BinLocation) {\n    bodyP[\"BinLocation\"] = results[j].key.BinLocation;\n}\n\nif (results[j].key.Lane) {\n    bodyP[\"Lane\"] = results[j].key.Lane;\n}\n\nif (results[j].key.L5Location) {\n    bodyP[\"L5Location\"] = results[j].key.L5Location;\n}\n\nnode.warn(JSON.stringify(bodyP));\ntoUpdateP.push(bodyP);\n\n}\n\n//node.warn(\"String of messages To Update: \" + toUpdateP);\nmsg.image=image;\nnode.warn(toUpdateP)\nmsg.payloadP=toUpdateP;\nmsg.payloadM=toUpdateM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 672,
        "wires": [
            [
                "bd35f4a2.f9ebb8",
                "90b89d1f7ff0a6ab",
                "6f83c31ea68acf10",
                "876c2528d296a1d8"
            ]
        ]
    },
    {
        "id": "bef614f3.9fbcb8",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized Tagging transaction, proceeding... \");\n    \n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    results = msg.payload;\n    for(var j=0;j < results.length;j++){\n        for(var i=0;i < results[j].serialNumber.length;i++){\n            if(splChars.indexOf(results[j].serialNumber.charAt(i)) != -1){\n                msg.payload = {\"response\":\"Invalid QR code\"};\n                msg.statusCode = 400;\n            }\n        }\n        if(results[j].serialNumber.length < 18){\n            msg.payload = {\"response\":\"Invalid QR code\"};\n            msg.statusCode = 400;\n        }\n        if(results[j].udfs.Material){\n            var Material = results[j].udfs.Material.value;\n            if(Material.length > 18 || Material.length < 4 ){\n                msg.payload = {\"response\":\"Invalid MATERIAL code. Please review.\"};\n                msg.statusCode = 400;\n            }\n        }\n        \n    }\n    msg.payloadOriginal=msg.payload;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 1013,
        "wires": [
            [
                "482cef9c.5717a"
            ]
        ]
    },
    {
        "id": "3b151bdb.86c6a4",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1030,
        "y": 980,
        "wires": []
    },
    {
        "id": "482cef9c.5717a",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 851,
        "y": 1013,
        "wires": [
            [
                "3b151bdb.86c6a4"
            ],
            [
                "3b151bdb.86c6a4"
            ],
            [
                "f3c1342a.5f6988"
            ]
        ]
    },
    {
        "id": "4e3d6c7a.bb05f4",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nvar zone = \"\";\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",message.length);\nglobal.set(\"tmp\",0);\nvar IMserver = global.get(\"IMserver\");\n\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar serialArrKeyHolder = [];\nvar palletArr = [];\nmessage.forEach(function(item){\n    var arrKey = \"{\\\"serialNumber\\\":\\\"\"+item.serialNumber+\"\\\",\"+\n                \"\\\"User\\\":\\\"\"+item.udfs.User.value+\"\\\",\"+\n                \"\\\"PalletType\\\":\\\"\"+item.type+\"\\\",\"+\n                \"\\\"UUIDMobile\\\":\\\"\"+item.udfs.UUIDMobile.value+\"\\\"\";\n    if(item.image){\n        arrKey+=\",\\\"Image\\\":\\\"\"+item.image+\"\\\"\";\n    }\n    if(item.udfs.location || item.udfs.zone){\n        if(item.udfs.location && (!item.udfs.zone || item.udfs.zone.value === \"\" )){\n            arrKey+=\",\\\"location\\\":\\\"\"+item.udfs.location.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the LOCATION value: \"+item.udfs.location.value);\n        }\n        if(item.udfs.zone && item.udfs.zone.value !== \"\" ){\n            arrKey+=\",\\\"zone\\\":\\\"\"+item.udfs.zone.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the ZONE value: \"+item.udfs.zone.value);\n        }\n    }\n    if(item.udfs.LocationDetails){\n        arrKey+=\",\\\"LocationDetails\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n        arrKey+=\",\\\"Plant\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(item.udfs.StorageLocation){\n        arrKey+=\",\\\"StorageLocation\\\":\\\"\"+item.udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(item.udfs.BinLocation){\n        arrKey+=\",\\\"BinLocation\\\":\\\"\"+item.udfs.BinLocation.value+\"\\\"\";\n    }\n    if(item.udfs.Lane){\n        arrKey+=\",\\\"Lane\\\":\\\"\"+item.udfs.Lane.value+\"\\\"\";\n    }\n    if(item.udfs.L5Location){\n        arrKey+=\",\\\"L5Location\\\":\\\"\"+item.udfs.L5Location.value+\"\\\"\";\n    }\n    arrKey+=\"}\";\n\n    var key = [arrKey];\n    //node.warn(key)\n    serialArrKeyHolder[key] = serialArrKeyHolder[key]||{};\n    var obj = serialArrKeyHolder[key];\n    if(Object.keys(obj).length === 0){\n        palletArr.push({obj});\n    }\n    obj.key = JSON.parse(key);\n    obj.materials  = obj.materials || [];\n        var arrMaterials = \"{\"+\n        \"\\\"Material\\\":\\\"\"+item.udfs.Material.value+\"\\\", \"+\n        \"\\\"Batch\\\":\\\"\"+item.udfs.Batch.value+\"\\\"\";\n    if(item.udfs.Qty){\n        arrMaterials+=\", \\\"Qty\\\":\\\"\"+item.udfs.Qty.value+\"\\\"\";\n    }\n    arrMaterials+=\"}\";\n    obj.materials.push(JSON.parse(arrMaterials));\n\n});\n\nfor(var i=0;i < palletArr.length;i++){\n    palletArr[i] = palletArr[i].obj\n}\n\nvar toUpdateP = [];\nvar toUpdateM = [];\nvar toStore = [];\nvar image = [];\nvar results = palletArr;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n//node.warn(results);\nfor(var j=0;j < results.length;j++){\n    msg.Process = \"Tagging\";\n    //SETTING UP HUITEM INFORMATION\n    for(var k=0;k < results[j].materials.length;k++){\n        var Material = results[j].materials[k].Material;\n        var Batch =  results[j].materials[k].Batch;\n        var Material_Master = Material;\n        \n        Material_Master = Material_Master.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n        Material_Master = Material_Master.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n        Material_Master = Material_Master.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n        Material_Master = Material_Master.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n        Material_Master = Material_Master.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n        Material_Master = Material_Master.latinize(); //Removing diacritics\n        Material_Master = Material_Master.replace(/\\s/g, ''); //Removing spaces\n        \n        var hu = k+1;\n        \n       var bodyM = {\n    \"thingTypeCode\": \"HUITEM\",\n    \"serialNumber\": results[j].key.serialNumber + \"_\" + results[j].materials[k].Batch + \"_\" + Material_Master,\n    \"timestamp\": currentTime,\n    \"Production_Date\": currentTime,\n    \"aliasMapped\": results[j].key.serialNumber + \"_\" + results[j].materials[k].Batch + \"_\" + Material_Master,\n    \"source\": \"FLOW_Tagging\",\n    \"Material_Code\": Material,\n    \"Material_Master\": Material_Master,\n    \"name\": results[j].key.serialNumber + \"_\" + results[j].materials[k].Batch + \"_\" + Material_Master,\n    \"Batch\": results[j].materials[k].Batch,\n    \"huitem\": pad(hu, 6)\n};\n\nif (results[j].materials[k].Qty) {\n    bodyM[\"Qty\"] = results[j].materials[k].Qty;\n    // ****************** TEMPORARILY REMOVING THE RETAGGING PROCESS - 30/06/2021\n    // msg.Process = \"reTagging\";\n}\n\nif (results[j].key.location) {\n    var locationArray = results[j].key.location.split(';').map(Number).slice(0, 2);\n    bodyM[\"location\"] = {\n        \"type\": \"Point\",\n        \"coordinates\": locationArray\n    };\n}\n\nif (results[j].key.zone && results[j].key.zone !== \"\") {\n    var zone = results[j].key.zone.replace(/[&]/g, \"\");\n    bodyM[\"zone\"] = zone;\n}\n\nif (results[j].key.LocationDetails) {\n    bodyM[\"LocationDetails\"] = results[j].key.LocationDetails;\n    bodyM[\"Plant\"] = results[j].key.LocationDetails;\n}\n\nif (results[j].key.StorageLocation) {\n    bodyM[\"StorageLocation\"] = results[j].key.StorageLocation;\n}\n\nbodyM[\"Process\"] = msg.Process;\n\nnode.warn(JSON.stringify(bodyM));\ntoUpdateM.push(bodyM);\n    }\n    \n    if(results[j].key.Image){\n        toStore[0] = results[j].key.Image;\n        toStore[1] = results[j].key.serialNumber;\n        image.push(toStore);\n    }\n    \n    //SETTING UP PALLET INFORMATION\n    var bodyP = {\n    \"thingTypeCode\": \"RAKPALLET\",\n    \"aliasMapped\": results[j].key.serialNumber,\n    \"timestamp\": currentTime,\n    \"TaggingDate\": currentTime,\n    \"ProcessTime\": currentTime,\n    \"serialNumber\": results[j].key.serialNumber,\n    \"PalletType\": results[j].key.PalletType,\n    \"source\": \"MOBILE_Tagging\",\n    \"name\": results[j].key.serialNumber,\n    \"facility\": \"RAKHQ\",\n    \"Status\": \"Active\",\n    \"User\": results[j].key.User,\n    \"UUIDMobile\": results[j].key.UUIDMobile,\n    \"Process\": msg.Process\n};\n\nif (results[j].key.Image) {\n    bodyP[\"Image\"] = IMserver + \"/\" + results[j].key.serialNumber + \"/pallet_\" + results[j].key.serialNumber + \".png\";\n}\n\nif (results[j].key.location) {\n    var locationArray = results[j].key.location.split(';').map(Number).slice(0, 2);\n    bodyP[\"location\"] = {\n        \"type\": \"Point\",\n        \"coordinates\": locationArray\n    };\n}\n\nif (results[j].key.zone && results[j].key.zone !== \"\") {\n    var zone = results[j].key.zone.replace(/[&]/g, \"\");\n    bodyP[\"zone\"] = zone;\n}\n\nif (results[j].key.LocationDetails) {\n    bodyP[\"LocationDetails\"] = results[j].key.LocationDetails;\n    bodyP[\"Plant\"] = results[j].key.LocationDetails;\n}\n\nif (results[j].key.StorageLocation) {\n    bodyP[\"StorageLocation\"] = results[j].key.StorageLocation;\n}\n\nif (results[j].key.BinLocation) {\n    bodyP[\"BinLocation\"] = results[j].key.BinLocation;\n}\n\nif (results[j].key.Lane) {\n    bodyP[\"Lane\"] = results[j].key.Lane;\n}\n\nif (results[j].key.L5Location) {\n    bodyP[\"L5Location\"] = results[j].key.L5Location;\n}\n\nnode.warn(JSON.stringify(bodyP));\ntoUpdateP.push(bodyP);\n\n}\n\n//node.warn(\"String of messages To Update: \" + toUpdateP);\nmsg.image=image;\nnode.warn(toUpdateP)\nmsg.payloadP=toUpdateP;\nmsg.payloadM=toUpdateM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1100,
        "wires": [
            [
                "64e96b62.b40df4",
                "edea9315.ddd32",
                "67bcbcb26d8358a6",
                "108c66696325aab4"
            ]
        ]
    },
    {
        "id": "1b95503b.ee0c3",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2550,
        "y": 1080,
        "wires": [
            [
                "d805691b.82f9a8"
            ]
        ]
    },
    {
        "id": "d805691b.82f9a8",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1080,
        "wires": [
            [
                "b528c2380832707a",
                "41c6f1a0.0a9e2"
            ]
        ]
    },
    {
        "id": "41c6f1a0.0a9e2",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 2910,
        "y": 1040,
        "wires": [
            [
                "a090536e.c5f7e"
            ]
        ]
    },
    {
        "id": "a090536e.c5f7e",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\nvar responsePayload = JSON.parse(msg.payload);\nglobal.set(\"responseData\", responsePayload);\n// delete msg.payload;\n// return msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 1040,
        "wires": [
            [
                "b2ff5e07.da9a1"
            ]
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "eae43217.7adc9",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 2380,
        "y": 1080,
        "wires": [
            [
                "1b95503b.ee0c3"
            ]
        ]
    },
    {
        "id": "b2ff5e07.da9a1",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3190,
        "y": 1040,
        "wires": []
    },
    {
        "id": "15766ff9.94045",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "",
        "func": "\nmsg.filename = \"/transfer/\"+msg.image[0][1]+\"/pallet_\"+msg.image[0][1]+\".png\";\nmsg.payload = msg.image[0][0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 992,
        "wires": [
            [
                "78d0b36c.aa15fc",
                "a56b34026464b3d5"
            ]
        ]
    },
    {
        "id": "727911ac.6e6e1",
        "type": "file",
        "z": "b0648658.d6e708",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1560,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "edea9315.ddd32",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "image.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1290,
        "y": 1032,
        "wires": [
            [
                "3a36e14c.10211e"
            ]
        ]
    },
    {
        "id": "3a36e14c.10211e",
        "type": "splitter",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "image",
        "x": 1290,
        "y": 992,
        "wires": [
            [
                "15766ff9.94045"
            ]
        ]
    },
    {
        "id": "2e32fd4b.8fcfa2",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2210,
        "y": 1080,
        "wires": [
            [
                "eae43217.7adc9"
            ]
        ]
    },
    {
        "id": "5c2cfb87.2df674",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "HUITEM",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 1120,
        "wires": [
            [
                "d070c545.0d8458"
            ]
        ]
    },
    {
        "id": "d070c545.0d8458",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 2364,
        "y": 1120,
        "wires": [
            [
                "2d843d44.8306f2"
            ]
        ]
    },
    {
        "id": "2d843d44.8306f2",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2534,
        "y": 1120,
        "wires": [
            [
                "781f1849217ea1fd"
            ]
        ]
    },
    {
        "id": "1e9443c7.a2f61c",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2995,
        "y": 1128,
        "wires": [
            [
                "7dd71ce5c8e43444",
                "d8190a8b.d1bcc8"
            ]
        ]
    },
    {
        "id": "d8190a8b.d1bcc8",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3195,
        "y": 1128,
        "wires": [
            [
                "26b5d4fc.c3872c",
                "1acb7742cc4753a3",
                "5cb9c890481ac2e9"
            ]
        ]
    },
    {
        "id": "26b5d4fc.c3872c",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 3375,
        "y": 1128,
        "wires": []
    },
    {
        "id": "c991391e.5ce278",
        "type": "comment",
        "z": "b0648658.d6e708",
        "name": "FLOW HUITEM LOCATION UPDATE - Location update for any process were we have a location change",
        "info": "",
        "x": 430,
        "y": 1760,
        "wires": []
    },
    {
        "id": "2b529ba.53c5f64",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Parser",
        "func": "var serials = msg.serials;\n\n\n//Categorizing based on the process\nif(msg.process === \"Tagging\"){\n    var pallet = msg.payloadP;\n    var huitem = msg.payloadM;\n    \n    for(p=0;p<pallet.length;p++){\n        var rakpallet = pallet[p].serialNumber;\n        \n        for(h=0;h<huitem.length;h++){\n            var hrakpallet = huitem[h].RAKPALLET;\n            \n            if(rakpallet===hrakpallet){\n                //assigning values for the API call\n                var palletID = hrakpallet;\n                var Plant = rakpallet[p].LocationDetails;\n                var StorageLocation = rakpallet[p].StorageLocation;\n                var Qty = huitem[h].Qty;\n                var Material_Code = huitem[h].Material_Code;\n                var Batch = huitem[h].Batch;\n            }\n        }\n    }\n    msg.url = SAPserver+\"&plant=\"+Plant+\"&stloc=\"+StorageLocation+\"&pack_qty=\"+Qty+\"&material=\"+Material_Code+\"&batch=\"+Batch+\"&opr=PACK&hukey=\"+palletID;\n    msg.method = \"GET\"\n}\n\nif(msg.process === \"reTagging\"){\n    for(p=0;p<pallet.length;p++){\n        var rakpallet = pallet[p].serialNumber;\n        \n        for(h=0;h<huitem.length;h++){\n            var hrakpallet = huitem[h].RAKPALLET;\n            \n            if(rakpallet===hrakpallet){\n                //assigning values for the API call\n                var palletID = hrakpallet;\n                var Plant = rakpallet[p].LocationDetails;\n                var StorageLocation = rakpallet[p].StorageLocation;\n                var Qty = huitem[h].Qty;\n                var Material_Code = huitem[h].Material_Code;\n                var Batch = huitem[h].Batch;\n            }\n        }\n    }\n    \n    \n    \n    msg.url = SAPserver+\"&plant=\"+Plant+\"&stloc=\"+StorageLocation+\"&pack_qty=\"+Qty+\"&material=\"+Material_Code+\"&batch=\"+Batch+\"&opr=PACK&hukey=\"+msg.serialNumber;\n    msg.method = \"GET\"\n}\n\n\n\n\nif(msg.process === \"Drop off\"){\n    \n    \n    \n}\nif(msg.process === \"Shipped\"){\n    \n    \n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "c10cfd12.44d31",
        "type": "link in",
        "z": "b0648658.d6e708",
        "name": "HUITEM_locationUpdate",
        "links": [
            "536c1262.62709c",
            "b8217a54.e0d468",
            "cee6631f.fc98b",
            "1d992b04.0d5a85",
            "1d9b3bac.d4b754",
            "50570c04.00b364"
        ],
        "x": 95,
        "y": 1860,
        "wires": [
            [
                "2b529ba.53c5f64"
            ]
        ]
    },
    {
        "id": "191bab2e.d8e4e5",
        "type": "Load Balance",
        "z": "b0648658.d6e708",
        "defaultcapacity": 100,
        "dynamic": "6409711c.8bf87",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 220,
        "y": 1940,
        "wires": [
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "57426a16.9a05b4",
        "type": "Load Balance",
        "z": "b0648658.d6e708",
        "defaultcapacity": 100,
        "dynamic": "6409711c.8bf87",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 380,
        "y": 1480,
        "wires": [
            [
                "796e9f3f.e8c16"
            ],
            [
                "ddb05a84.594098"
            ],
            [
                "681cd55c.36feac"
            ],
            [
                "b118a2b5.98dc"
            ]
        ]
    },
    {
        "id": "ddb05a84.594098",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n        }\n    }\n    msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/HUITEMS\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 1420,
        "wires": [
            [
                "9467a3f5.20a06"
            ]
        ]
    },
    {
        "id": "796e9f3f.e8c16",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 650,
        "y": 1380,
        "wires": []
    },
    {
        "id": "719b977c.4a9048",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Pallet Data",
        "func": "function convertEpochToSpecificTimezone(timeEpoch, offset){\n    var d = new Date(timeEpoch);\n    var utc = d.getTime() + (d.getTimezoneOffset() * 60000);  //This converts to UTC 00:00\n    var nd = new Date(utc + (3600000*offset));\n    return nd.toLocaleString();\n}\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed Pallet Data request ***** \");\n    \n    var results = msg.payload.results;\n    var toResponse = [];\n    if(results){\n        for(i=0;i<results.length;i++){\n            var palletdata = \"{\\\"serialNumber\\\":\\\"\"+results[i].serialNumber+\"\\\"\";\n            if(results[i].huitem){\n                palletdata+=\",\\\"huitem\\\":\\\"\"+results[i].huitem+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"huitem\\\":\\\"\\\"\";\n            }\n            if(results[i].Material_Code){\n                palletdata+=\",\\\"Material\\\":\\\"\"+results[i].Material_Code+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Material\\\":\\\"\\\"\";\n            }\n            if(results[i].Batch){\n                palletdata+=\",\\\"Batch\\\":\\\"\"+results[i].Batch+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Batch\\\":\\\"\\\"\";\n            }\n            if(results[i].Qty){\n                palletdata+=\",\\\"Qty\\\":\\\"\"+results[i].Qty+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Qty\\\":\\\"\\\"\";\n            }\n            if(results[i].location){\n                palletdata+=\",\\\"location\\\":\\\"\"+results[i].location+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"location\\\":\\\"\\\"\";\n            }\n            if(results[i].ProcessTime){\n                var Process_Time = convertEpochToSpecificTimezone(results[i].ProcessTime.value, +4)\n                palletdata+=\",\\\"ProcessTime\\\":\\\"\"+Process_Time+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"ProcessTime\\\":\\\"\\\"\";\n            }\n            palletdata+=\"}\";\n        \n            toResponse.push(JSON.parse(palletdata));\n        }\n    }\n    else{\n        toResponse = {\"response\":\"Pallet data not found.\"};\n    }\n    msg.payload=toResponse;\n    msg.statusCode = 200;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1350,
        "y": 1440,
        "wires": [
            [
                "dc1f1443.bb08f8"
            ]
        ]
    },
    {
        "id": "d006bbb2.176868",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1190,
        "y": 1440,
        "wires": [
            [
                "719b977c.4a9048",
                "b2220488.2c3808"
            ]
        ]
    },
    {
        "id": "2dd24519.70a00a",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1440,
        "wires": [
            [
                "d006bbb2.176868"
            ]
        ]
    },
    {
        "id": "dc1f1443.bb08f8",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1490,
        "y": 1440,
        "wires": []
    },
    {
        "id": "b2220488.2c3808",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1330,
        "y": 1480,
        "wires": []
    },
    {
        "id": "9467a3f5.20a06",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 1420,
        "wires": [
            [
                "319b3430.8b657c"
            ],
            [
                "2dd24519.70a00a"
            ]
        ]
    },
    {
        "id": "319b3430.8b657c",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1010,
        "y": 1400,
        "wires": []
    },
    {
        "id": "681cd55c.36feac",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n        }\n    }\n    msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/HUITEMS\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 1520,
        "wires": [
            [
                "2f11bb7f.6742e4"
            ]
        ]
    },
    {
        "id": "eee4d87b.c381b8",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Pallet Data",
        "func": "function convertEpochToSpecificTimezone(timeEpoch, offset){\n    var d = new Date(timeEpoch);\n    var utc = d.getTime() + (d.getTimezoneOffset() * 60000);  //This converts to UTC 00:00\n    var nd = new Date(utc + (3600000*offset));\n    return nd.toLocaleString();\n}\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed Pallet Data request ***** \");\n    \n    var results = msg.payload.results;\n    var toResponse = [];\n    if(results){\n        for(i=0;i<results.length;i++){\n            var palletdata = \"{\\\"serialNumber\\\":\\\"\"+results[i].serialNumber+\"\\\"\";\n            if(results[i].huitem){\n                palletdata+=\",\\\"huitem\\\":\\\"\"+results[i].huitem+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"huitem\\\":\\\"\\\"\";\n            }\n            if(results[i].Material_Code){\n                palletdata+=\",\\\"Material\\\":\\\"\"+results[i].Material_Code+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Material\\\":\\\"\\\"\";\n            }\n            if(results[i].Batch){\n                palletdata+=\",\\\"Batch\\\":\\\"\"+results[i].Batch+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Batch\\\":\\\"\\\"\";\n            }\n            if(results[i].Qty){\n                palletdata+=\",\\\"Qty\\\":\\\"\"+results[i].Qty+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Qty\\\":\\\"\\\"\";\n            }\n            if(results[i].location){\n                palletdata+=\",\\\"location\\\":\\\"\"+results[i].location+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"location\\\":\\\"\\\"\";\n            }\n            if(results[i].ProcessTime){\n                var Process_Time = convertEpochToSpecificTimezone(results[i].ProcessTime.value, +4)\n                palletdata+=\",\\\"ProcessTime\\\":\\\"\"+Process_Time+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"ProcessTime\\\":\\\"\\\"\";\n            }\n            palletdata+=\"}\";\n        \n            toResponse.push(JSON.parse(palletdata));\n        }\n    }\n    else{\n        toResponse = {\"response\":\"Pallet data not found.\"};\n    }\n    msg.payload=toResponse;\n    msg.statusCode = 200;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 1540,
        "wires": [
            [
                "909dacab.325a8"
            ]
        ]
    },
    {
        "id": "83e9320a.9f0fa",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1230,
        "y": 1540,
        "wires": [
            [
                "eee4d87b.c381b8",
                "c775ad.9d9cea5"
            ]
        ]
    },
    {
        "id": "46158056.eaa38",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1540,
        "wires": [
            [
                "83e9320a.9f0fa"
            ]
        ]
    },
    {
        "id": "909dacab.325a8",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1530,
        "y": 1540,
        "wires": []
    },
    {
        "id": "c775ad.9d9cea5",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1370,
        "y": 1580,
        "wires": []
    },
    {
        "id": "2f11bb7f.6742e4",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 1520,
        "wires": [
            [
                "679aba91.312c84"
            ],
            [
                "46158056.eaa38"
            ]
        ]
    },
    {
        "id": "679aba91.312c84",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1050,
        "y": 1500,
        "wires": []
    },
    {
        "id": "b118a2b5.98dc",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n        }\n    }\n    msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/HUITEMS\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 1620,
        "wires": [
            [
                "d84b7ab1.7dc728"
            ]
        ]
    },
    {
        "id": "ca2d464.2d5cfb8",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Pallet Data",
        "func": "function convertEpochToSpecificTimezone(timeEpoch, offset){\n    var d = new Date(timeEpoch);\n    var utc = d.getTime() + (d.getTimezoneOffset() * 60000);  //This converts to UTC 00:00\n    var nd = new Date(utc + (3600000*offset));\n    return nd.toLocaleString();\n}\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed Pallet Data request ***** \");\n    \n    var results = msg.payload.results;\n    var toResponse = [];\n    if(results){\n        for(i=0;i<results.length;i++){\n            var palletdata = \"{\\\"serialNumber\\\":\\\"\"+results[i].serialNumber+\"\\\"\";\n            if(results[i].huitem){\n                palletdata+=\",\\\"huitem\\\":\\\"\"+results[i].huitem+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"huitem\\\":\\\"\\\"\";\n            }\n            if(results[i].Material_Code){\n                palletdata+=\",\\\"Material\\\":\\\"\"+results[i].Material_Code+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Material\\\":\\\"\\\"\";\n            }\n            if(results[i].Batch){\n                palletdata+=\",\\\"Batch\\\":\\\"\"+results[i].Batch+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Batch\\\":\\\"\\\"\";\n            }\n            if(results[i].Qty){\n                palletdata+=\",\\\"Qty\\\":\\\"\"+results[i].Qty+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Qty\\\":\\\"\\\"\";\n            }\n            if(results[i].location){\n                palletdata+=\",\\\"location\\\":\\\"\"+results[i].location+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"location\\\":\\\"\\\"\";\n            }\n            if(results[i].ProcessTime){\n                var Process_Time = convertEpochToSpecificTimezone(results[i].ProcessTime.value, +4)\n                palletdata+=\",\\\"ProcessTime\\\":\\\"\"+Process_Time+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"ProcessTime\\\":\\\"\\\"\";\n            }\n            palletdata+=\"}\";\n        \n            toResponse.push(JSON.parse(palletdata));\n        }\n    }\n    else{\n        toResponse = {\"response\":\"Pallet data not found.\"};\n    }\n    msg.payload=toResponse;\n    msg.statusCode = 200;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1350,
        "y": 1640,
        "wires": [
            [
                "7e74193d.1c77a8"
            ]
        ]
    },
    {
        "id": "28d3352b.a9670a",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1190,
        "y": 1640,
        "wires": [
            [
                "ca2d464.2d5cfb8",
                "fe942a90.15ee18"
            ]
        ]
    },
    {
        "id": "c8ea29d9.6ecb18",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 1640,
        "wires": [
            [
                "28d3352b.a9670a"
            ]
        ]
    },
    {
        "id": "7e74193d.1c77a8",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1490,
        "y": 1640,
        "wires": []
    },
    {
        "id": "fe942a90.15ee18",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1330,
        "y": 1680,
        "wires": []
    },
    {
        "id": "d84b7ab1.7dc728",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 1620,
        "wires": [
            [
                "14267a66.de4bb6"
            ],
            [
                "c8ea29d9.6ecb18"
            ]
        ]
    },
    {
        "id": "14267a66.de4bb6",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1010,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ce92040f.27e308",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 350,
        "y": 1540,
        "wires": []
    },
    {
        "id": "68e3e337.aa886c",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1570,
        "y": 180,
        "wires": []
    },
    {
        "id": "78d0b36c.aa15fc",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1570,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4d8f697c.154208",
        "type": "file",
        "z": "b0648658.d6e708",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 630,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "483b3775.0f0aa8",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Inbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/TAGGING/'+ shortDate + '/inbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "4d8f697c.154208",
                "d5c581a1.0df54"
            ]
        ]
    },
    {
        "id": "d5c581a1.0df54",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 630,
        "y": 140,
        "wires": []
    },
    {
        "id": "c08512f0.f9463",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1150,
        "y": 360,
        "wires": []
    },
    {
        "id": "bd35f4a2.f9ebb8",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1430,
        "y": 740,
        "wires": []
    },
    {
        "id": "64e96b62.b40df4",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1130,
        "y": 1180,
        "wires": []
    },
    {
        "id": "364e8dda.192e92",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "rate",
        "timeout": "45",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "45",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 800,
        "y": 1160,
        "wires": [
            [
                "5075bb36.721b94"
            ]
        ]
    },
    {
        "id": "3ac43680.66c10a",
        "type": "inject",
        "z": "b0648658.d6e708",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1080,
        "wires": [
            [
                "f3c0cdd4.297fd"
            ]
        ]
    },
    {
        "id": "f3c0cdd4.297fd",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "",
        "func": "msg.filename = \"/flows/logs/RAK_tagging_2021-9-8.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 1120,
        "wires": [
            [
                "18da208c.54ce1f"
            ]
        ]
    },
    {
        "id": "c1fce93d.bccb78",
        "type": "join",
        "z": "b0648658.d6e708",
        "name": "join CSV",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 620,
        "y": 1160,
        "wires": [
            [
                "364e8dda.192e92"
            ]
        ]
    },
    {
        "id": "8464bc17.c29de",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "",
        "func": "var message = msg.payload;\nmessage = message.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\nmessage = JSON.parse(message);\n\nif(message[0].udfs.zone.value === \"\" && message[0].udfs.location.value !== \"\"){\n    msg.val = \"process\";\n}else{\n    msg.val = \"skip\";\n}\n\nmsg.payload = message[0];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 1160,
        "wires": [
            [
                "48fbc504.8363fc"
            ]
        ]
    },
    {
        "id": "18da208c.54ce1f",
        "type": "file in",
        "z": "b0648658.d6e708",
        "name": "",
        "filename": "",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "x": 210,
        "y": 1160,
        "wires": [
            [
                "8464bc17.c29de"
            ]
        ]
    },
    {
        "id": "48fbc504.8363fc",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "val",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "process",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 1160,
        "wires": [
            [
                "c1fce93d.bccb78"
            ]
        ]
    },
    {
        "id": "30d8bd4e.987922",
        "type": "comment",
        "z": "b0648658.d6e708",
        "name": "Flow to RE-PROCESS Tagging based on conditions",
        "info": "",
        "x": 290,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f3c1342a.5f6988",
        "type": "subflow:e0bdfd8e.7b0fb",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1070,
        "y": 1040,
        "wires": [
            [
                "4e3d6c7a.bb05f4"
            ]
        ]
    },
    {
        "id": "798f8421.65a10c",
        "type": "subflow:e0bdfd8e.7b0fb",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1170,
        "y": 620,
        "wires": [
            [
                "e18723e5.c4e93"
            ]
        ]
    },
    {
        "id": "31f7731a.1d105c",
        "type": "subflow:e0bdfd8e.7b0fb",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "b87d05d5.389028"
            ]
        ]
    },
    {
        "id": "3e41f7ff.38d6c8",
        "type": "http in",
        "z": "b0648658.d6e708",
        "name": "GET PALLET DATA",
        "url": "/PALLETDATA",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2400,
        "wires": [
            [
                "85453d15.4a14b",
                "76113829.07dca8",
                "9338f55b.c6ab48"
            ]
        ]
    },
    {
        "id": "5610f29b.13cb7c",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 570,
        "y": 2320,
        "wires": []
    },
    {
        "id": "70ede8e8.47cf58",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n        }\n    }\n    msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?RAKPALLET.serialNumber=\"+serialNumber+\"\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2393,
        "wires": [
            [
                "3f0d58c0.77db98"
            ]
        ]
    },
    {
        "id": "3f0d58c0.77db98",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 2393,
        "wires": [
            [
                "ed14ff34.9ec1d"
            ],
            [
                "c535dbca.5c5a78"
            ]
        ]
    },
    {
        "id": "ed14ff34.9ec1d",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1090,
        "y": 2385,
        "wires": []
    },
    {
        "id": "c535dbca.5c5a78",
        "type": "subflow:10d82e1f.f08ab2",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 930,
        "y": 2433,
        "wires": [
            [
                "ed14ff34.9ec1d",
                "4a59f024.bed88"
            ]
        ]
    },
    {
        "id": "85453d15.4a14b",
        "type": "Load Balance",
        "z": "b0648658.d6e708",
        "defaultcapacity": 100,
        "dynamic": "6409711c.8bf87",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 360,
        "y": 2400,
        "wires": [
            [
                "5610f29b.13cb7c"
            ],
            [
                "70ede8e8.47cf58"
            ],
            [
                "13a05a02.d0a536"
            ],
            [
                "5ca7823.952257c"
            ]
        ]
    },
    {
        "id": "76113829.07dca8",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 330,
        "y": 2460,
        "wires": []
    },
    {
        "id": "13a05a02.d0a536",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n        }\n    }\n    msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?RAKPALLET.serialNumber=\"+serialNumber+\"\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2500,
        "wires": [
            [
                "311047fc.b381c8"
            ]
        ]
    },
    {
        "id": "311047fc.b381c8",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 2500,
        "wires": [
            [
                "235d4404.b7340c"
            ],
            [
                "25fad670.49be9a"
            ]
        ]
    },
    {
        "id": "235d4404.b7340c",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1110,
        "y": 2492,
        "wires": []
    },
    {
        "id": "25fad670.49be9a",
        "type": "subflow:10d82e1f.f08ab2",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 940,
        "y": 2520,
        "wires": [
            [
                "235d4404.b7340c",
                "6a53444d.28ca6c"
            ]
        ]
    },
    {
        "id": "5ca7823.952257c",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n        }\n    }\n    msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?RAKPALLET.serialNumber=\"+serialNumber+\"\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2600,
        "wires": [
            [
                "d7d48fc6.eeab1"
            ]
        ]
    },
    {
        "id": "d7d48fc6.eeab1",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 2600,
        "wires": [
            [
                "43b7f124.0f28"
            ],
            [
                "6e3b2bf5.420334"
            ]
        ]
    },
    {
        "id": "43b7f124.0f28",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1090,
        "y": 2592,
        "wires": []
    },
    {
        "id": "6e3b2bf5.420334",
        "type": "subflow:10d82e1f.f08ab2",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 930,
        "y": 2640,
        "wires": [
            [
                "43b7f124.0f28",
                "4711c6ce.efb3a8"
            ]
        ]
    },
    {
        "id": "9cfac107.d4b52",
        "type": "http in",
        "z": "b0648658.d6e708",
        "name": "SUMMARY DASHBOARD",
        "url": "/SUMMARYDASHBOARD",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 2840,
        "wires": [
            [
                "91e0cbc.24f6338"
            ]
        ]
    },
    {
        "id": "91e0cbc.24f6338",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Dashboard Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    \n    if(results.Plant){\n        msg.Plant = results.Plant;\n    }\n    \n    msg.filtersALL={};\n    msg.taggedTODAY = \"http://reports:8080/riot-core-reports/api/reportExecution/tableSummary/SUMMARYTAGGED24?DateRelative=TODAY\";//&Process=Tagging\";\n    msg.shippedTODAY = \"http://reports:8080/riot-core-reports/api/reportExecution/tableSummary/SUMMARYSHIPPED24?DateRelative=TODAY\";\n    \n    msg.tagged = \"http://reports:8080/riot-core-reports/api/reportExecution/tableSummary/SUMMARYTAGGED?DateRelative=NOW\";//&Process=Tagging\";\n    msg.shipped = \"http://reports:8080/riot-core-reports/api/reportExecution/tableSummary/SUMMARYSHIPPED?DateRelative=NOW\";\n    \n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 2840,
        "wires": [
            [
                "bff0e84.25b0518"
            ]
        ]
    },
    {
        "id": "b2358c31.0938c",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "TAGGED ALL",
        "func": "var results = msg.payload.result;\nvar headers = msg.payload.headersY;\nvar tagged, totalTagged = 0, totalTaggedPlant = 0, totalTaggedUser = 0, \n    m2cTagged, boxesTagged, totalM2cTagged = 0, totalM2cTaggedPlant = 0, totalBoxesTagged = 0, totalBoxesTaggedPlant = 0, totalM2cTaggedUser = 0, \n    plant, bestPlant = [], user, bestUser = [];\n    \n//Generating accumulated data\nif(results){\n    for(var i=0;i<results.length-1;i++){\n        plant = headers[i].value[1];    \n        user = headers[i].value[2];\n        tagged = results[i].value[0];\n        m2cTagged = results[i].value[1];\n        boxesTagged = results[i].value[2];\n        \n        totalTagged += tagged;\n        totalM2cTagged += m2cTagged;\n        totalBoxesTagged += boxesTagged;\n        \n        bestPlant.push({bestPlant:plant,totalTagged:tagged,totalM2cTagged:m2cTagged,totalBoxesTagged:boxesTagged});\n        bestUser.push({user:user, m2cTagged:m2cTagged, totalTagged:tagged});\n    }\n}\nelse{\n    msg.payload = {Response:\"No data available\"};\n    msg.statusCode = 400;\n    return msg;\n}\n//Reduce based on best Plant\nvar resultPlants = [];\nvar bestPlant2 = bestPlant;\n\n//Getting BEST PLANT results, aggregation by Plant. Adding Total Tagged AND TotalM2cTagged\nbestPlant.reduce(function(res, value) {\n  if (!res[value.bestPlant]) {\n    res[value.bestPlant] = { bestPlant: value.bestPlant, totalTagged: 0, totalM2cTagged: 0, totalBoxesTagged: 0};\n    resultPlants.push(res[value.bestPlant]);\n  }\n  res[value.bestPlant].totalTagged += value.totalTagged;\n  res[value.bestPlant].totalM2cTagged += value.totalM2cTagged;\n  res[value.bestPlant].totalBoxesTagged += value.totalBoxesTagged;\n  return res;\n}, {});\n//node.warn(\"best plant results:\");\n//node.warn(resultPlants);\n\nlet maxPlant = resultPlants.reduce((max, obj) => (max.totalTagged > obj.totalTagged) ? max : obj);\n//node.warn(\"MAX plant results:\");\n//node.warn(maxPlant);\n\n//Getting BEST USER results, aggregation by Plant. Adding Total Tagged AND TotalM2cTagged\nvar resultUsers = [];\nbestUser.reduce(function(res, value) {\n  if (!res[value.user]) {\n    res[value.user] = { user: value.user, m2cTagged: 0, totalTagged: 0 };\n    resultUsers.push(res[value.user])\n  }\n  res[value.user].totalTagged += value.totalTagged;\n  res[value.user].m2cTagged += value.m2cTagged;\n  return res;\n}, {});\n\nlet maxUser = resultUsers.reduce((max, obj) => (max.totalTagged > obj.totalTagged) ? max : obj);\n//node.warn(\"MAX user results:\");\n//node.warn(maxUser);\n\n//GRAPH #1 - Total tagged by Factory or ALL\nvar toResponse = [];\nif(msg.Plant){\n\n    var addTagged = 0;\n\tvar addM2cTagged = 0;\n\tvar addBoxesTagged = 0;\n    for(var j=0;j<bestPlant2.length;j++){\n        if(bestPlant2[j].bestPlant === msg.Plant){\n            addTagged += bestPlant2[j].totalTagged;\n\t\t\taddM2cTagged += bestPlant2[j].totalM2cTagged;\n\t\t\taddBoxesTagged += bestPlant2[j].totalBoxesTagged;\n\t\t\t\n        }\n    }\n    bestPlant2 = {TotalTaggedPlant:msg.Plant,totalTagged:addTagged,totalM2cTagged:addM2cTagged,totalBoxesTagged:addBoxesTagged};\n    toResponse.push(bestPlant2);\n}\nelse{\n    //node.warn(totalTagged);\n    toResponse.push({TotalTaggedPlant:'ALL',totalTagged:totalTagged,totalM2cTagged:totalM2cTagged,totalBoxesTagged:totalBoxesTagged})\n}\n\n//GRAPH #5 - Best Factory Tagging\ntoResponse.push(maxPlant);\n//GRAPH #6 - Best user performance Tagging\ntoResponse.push(maxUser);\n\nmsg.toResponse = toResponse;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 2840,
        "wires": [
            [
                "b9587156.52944"
            ]
        ]
    },
    {
        "id": "f8527009.9574e",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 770,
        "y": 2840,
        "wires": [
            [
                "b2358c31.0938c",
                "adeb0ae5.547d48"
            ]
        ]
    },
    {
        "id": "bff0e84.25b0518",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Tagged",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "tagged",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filtersALL",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 2840,
        "wires": [
            [
                "f8527009.9574e"
            ]
        ]
    },
    {
        "id": "9bb4a5da.e86b98",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "TAGGED TODAY",
        "func": "var results = msg.payload.result;\nvar totalTagged24;\nvar totalM2cTagged24;\n\nif(results.length>0){\n    if(results[results.length-1].isTotal === true){\n        totalTagged24 = results[results.length-1].value[0]\n\t\ttotalM2cTagged24 = results[results.length-1].value[1]\n    }else{\n        totalTagged24 = 0;\n\t\ttotalM2cTagged24 = 0;\n    }\n    \n}\nelse{\n    totalTagged24 = 0;\n\ttotalM2cTagged24 = 0;\n}\n\nvar toResponse = msg.toResponse;\ntoResponse.push({totalTagged24:totalTagged24,totalM2cTagged24:totalM2cTagged24});\n\nmsg.toResponse = toResponse;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 2940,
        "wires": [
            [
                "30feef5e.a7ef1"
            ]
        ]
    },
    {
        "id": "89e92bd9.b39858",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 810,
        "y": 2940,
        "wires": [
            [
                "9bb4a5da.e86b98"
            ]
        ]
    },
    {
        "id": "b9587156.52944",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Tagged TODAY",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "taggedTODAY",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filtersALL",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 2940,
        "wires": [
            [
                "89e92bd9.b39858"
            ]
        ]
    },
    {
        "id": "5316e3ad.0c780c",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1230,
        "y": 3080,
        "wires": []
    },
    {
        "id": "53ade7ba.ecc068",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "SHIPPED ALL",
        "func": "var results = msg.payload.result;\nvar headers = msg.payload.headersY;\nvar shipped, totalShipped = 0, m2cShipped, totalM2cShipped = 0,  \n    plant, bestPlant = [];\n\nfor(var i=0;i<results.length-1;i++){\n    plant = headers[i].value[1];\n    shipped = results[i].value[0];\n    m2cShipped = results[i].value[1];\n    \n    totalShipped += shipped;\n    totalM2cShipped += m2cShipped;\n    \n    bestPlant.push({plant:plant,shipped:shipped,m2cShipped:m2cShipped});\n}\n\nvar toResponse = msg.toResponse;\nif(msg.Plant){\n\n    var addShipped = 0;\n    var addM2cShipped = 0;\n    for(var j=0;j<bestPlant.length;j++){\n        if(bestPlant[j].plant === msg.Plant){\n            addShipped += bestPlant[j].shipped;\n            addM2cShipped += bestPlant[j].m2cShipped;\n        }\n    }\n    bestPlant = {totalShippedPlant:msg.Plant,totalShipped:addShipped,totalM2cShipped:addM2cShipped};\n    toResponse.push(bestPlant);\n}\nelse{\n    toResponse.push({totalShippedPlant:'ALL',totalShipped:totalShipped,totalM2cShipped:totalM2cShipped})\n}\n\nmsg.toResponse = toResponse;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 3040,
        "wires": [
            [
                "58051a88.19d964"
            ]
        ]
    },
    {
        "id": "cdbf30de.ab243",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 770,
        "y": 3040,
        "wires": [
            [
                "53ade7ba.ecc068"
            ]
        ]
    },
    {
        "id": "30feef5e.a7ef1",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Shipped",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "shipped",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filtersALL",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 3040,
        "wires": [
            [
                "cdbf30de.ab243"
            ]
        ]
    },
    {
        "id": "e828d147.63263",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "SHIPPED TODAY",
        "func": "var results = msg.payload.result;\nvar totalShipped24;\nvar totalM2cShipped24;\n\nif(results.length>0){\n    if(results[results.length-1].isTotal === true){\n        totalShipped24 = results[results.length-1].value[0];\n\t\ttotalM2cShipped24 = results[results.length-1].value[0];\n    }else{\n        totalShipped24 = 0;\n\t\ttotalM2cShipped24 = 0;\n    }\n    \n}\nelse{\n    totalShipped24 = 0;\n\ttotalM2cShipped24 = 0;\n}\n\nvar toResponse = msg.toResponse;\ntoResponse.push({totalShipped24:totalShipped24,totalM2cShipped24:totalM2cShipped24});\n\nmsg.payload = toResponse;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 3140,
        "wires": [
            [
                "b51c9c46.576ee"
            ]
        ]
    },
    {
        "id": "f3952966.182548",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 810,
        "y": 3140,
        "wires": [
            [
                "e828d147.63263"
            ]
        ]
    },
    {
        "id": "58051a88.19d964",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Shipped TODAY",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "shippedTODAY",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filtersALL",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 3140,
        "wires": [
            [
                "f3952966.182548"
            ]
        ]
    },
    {
        "id": "b51c9c46.576ee",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1290,
        "y": 2960,
        "wires": []
    },
    {
        "id": "93b177aa.2bdec8",
        "type": "http in",
        "z": "b0648658.d6e708",
        "name": "PLANTS FOR SUMMARY DASHBOARD",
        "url": "/AVAILABLEPLANTS",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 3340,
        "wires": [
            [
                "84eb1fc.a3c56e",
                "9c62929e.915b7"
            ]
        ]
    },
    {
        "id": "84eb1fc.a3c56e",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Dashboard Filters request, proceeding... \");\n    msg.send=1;\n    \n    \n    msg.filters={};\n    msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/tableSummary/AVAILABLEPLANTS\";\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 3340,
        "wires": [
            [
                "a7f3b2ff.c22be"
            ]
        ]
    },
    {
        "id": "b119b456.1b6638",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "PLANT FILTERS ALL",
        "func": "var headers = msg.payload.headersY;\nvar plant, Plant = [];\n\nif(headers){\n    for(var i=0;i<headers.length-1;i++){\n        plant = headers[i].value[0];    \n        Plant.push({Plant:plant});\n    }\n    msg.payload = Plant;\n    return msg;\n}\nelse{\n    msg.payload = {Response:\"No data available\"};\n    msg.statusCode = 400;\n    return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 3380,
        "wires": [
            [
                "fc465f9e.c6618",
                "fccdd21.7322b3"
            ]
        ]
    },
    {
        "id": "aca2502c.3d6fb",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 830,
        "y": 3380,
        "wires": [
            [
                "b119b456.1b6638",
                "72de4e27.e176c"
            ]
        ]
    },
    {
        "id": "383bb44b.c881cc",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Filters",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filters",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 3380,
        "wires": [
            [
                "aca2502c.3d6fb"
            ]
        ]
    },
    {
        "id": "fc465f9e.c6618",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "dashboard filters",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1260,
        "y": 3340,
        "wires": []
    },
    {
        "id": "fccdd21.7322b3",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 3380,
        "wires": []
    },
    {
        "id": "a7f3b2ff.c22be",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 3340,
        "wires": [
            [
                "6eb776ec.ddefb8"
            ],
            [
                "383bb44b.c881cc"
            ]
        ]
    },
    {
        "id": "6eb776ec.ddefb8",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 3320,
        "wires": []
    },
    {
        "id": "9c62929e.915b7",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 460,
        "y": 3300,
        "wires": []
    },
    {
        "id": "72de4e27.e176c",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "dashboard filters",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 980,
        "y": 3320,
        "wires": []
    },
    {
        "id": "29fc5e3f.da86b2",
        "type": "link in",
        "z": "b0648658.d6e708",
        "name": "TMP_in",
        "links": [
            "f445bee4.bd466"
        ],
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "782f5e0c.f3526",
                "dd2a2802.531038"
            ]
        ]
    },
    {
        "id": "adeb0ae5.547d48",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 2780,
        "wires": []
    },
    {
        "id": "2e3b737b.90bfbc",
        "type": "http in",
        "z": "b0648658.d6e708",
        "name": "GET MATERIAL DATA",
        "url": "/api/materialsummary",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 3640,
        "wires": [
            [
                "d2788a70.80d098",
                "dbd9ac43.74fb8"
            ]
        ]
    },
    {
        "id": "ca748eb1.44c29",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 590,
        "y": 3580,
        "wires": []
    },
    {
        "id": "3a380fbd.b4c8b",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n            msg.Material = Material;\n        }\n    }\n    //server=\"https://digitrack.rakceramics.com\";\n    msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?Material_Code=\"+Material+\"\";\n    \n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 3633,
        "wires": [
            [
                "c2586a64.66ce18"
            ]
        ]
    },
    {
        "id": "c2586a64.66ce18",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 3633,
        "wires": [
            [
                "280931a1.aa47be"
            ],
            [
                "ee0b7a4.45cfa88"
            ]
        ]
    },
    {
        "id": "280931a1.aa47be",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1350,
        "y": 3620,
        "wires": []
    },
    {
        "id": "d2788a70.80d098",
        "type": "Load Balance",
        "z": "b0648658.d6e708",
        "defaultcapacity": 100,
        "dynamic": "65b6facc.4769f4",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 3,
        "routes": "2",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 380,
        "y": 3640,
        "wires": [
            [
                "ca748eb1.44c29"
            ],
            [
                "3a380fbd.b4c8b"
            ],
            [
                "fea9dc31.497ba"
            ]
        ]
    },
    {
        "id": "dbd9ac43.74fb8",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 350,
        "y": 3700,
        "wires": []
    },
    {
        "id": "f7d2c0e.a8a084",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Pallet Data",
        "func": "var server = global.get(\"server\");\n\nfunction convertEpochToSpecificTimezone(timeEpoch, offset){\n    var d = new Date(timeEpoch);\n    var utc = d.getTime() + (d.getTimezoneOffset() * 60000);  //This converts to UTC 00:00\n    var nd = new Date(utc + (3600000*offset));\n    return nd.toLocaleString();\n}\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed Pallet Data request ***** \");\n    \n    var results = msg.payload.data;\n    //node.warn(msg.payload.results);\n    var toResponse = [];\n    if(results && !results.length){\n        //node.warn(\"no\")\n        msg.payload={\"response\":\"Invalid Pallet data request. No information found.\"};\n        statusCode = 400;\n        msg.toContinue=0;    \n    }\n    else{\n        //node.warn(\"yes\")\n        //node.warn(results.length)\n        for(i=0;i<results.length;i++){\n            var palletdata = \"{\\\"serialNumber\\\":\\\"\"+results[i].serialPallet+\"\\\"\";\n\n            if(results[i].Material_Code){\n                palletdata+=\",\\\"Material\\\":\\\"\"+results[i].Material_Code+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Material\\\":\\\"\\\"\";\n            }\n\n            if(results[i].Batch){\n                palletdata+=\",\\\"Batch\\\":\\\"\"+results[i].Batch+\"\\\"\";\n                var Batch = results[i].Batch;\n            }else{\n                palletdata+=\",\\\"Batch\\\":\\\"\\\"\";\n            }\n            \n            if(results[i].Qty){\n                palletdata+=\",\\\"Qty\\\":\\\"\"+results[i].Qty+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Qty\\\":\\\"\\\"\";\n            }\n            \n            if(results[i].M2_PC_RM_Available){\n                palletdata+=\",\\\"M2_PC_RM_Available\\\":\\\"\"+results[i].M2_PC_RM_Available+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"M2_PC_RM_Available\\\":\\\"\\\"\";\n            }\n            \n            palletdata+=\"}\";\n        \n            toResponse.push(JSON.parse(palletdata));\n        }\n        //msg.url = server+\"/riot-core-services/api/reportExecution/tableSummary/BACTCHMATERIALSUMMARY\";\n        //msg.payload={\"Batch\":Batch,\"Material_Master\":Material_Master};\n        msg.payload = toResponse;\n        msg.toResponse=toResponse;\n        msg.toContinue=1;\n    }\n\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3660,
        "wires": [
            [
                "9bbe0c8b.37328"
            ]
        ]
    },
    {
        "id": "d037ac09.56547",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1110,
        "y": 3660,
        "wires": [
            [
                "f7d2c0e.a8a084",
                "a0dd0b9f3e9b4693"
            ]
        ]
    },
    {
        "id": "ee0b7a4.45cfa88",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 3660,
        "wires": [
            [
                "d037ac09.56547"
            ]
        ]
    },
    {
        "id": "9bbe0c8b.37328",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "toContinue",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 3740,
        "wires": [
            [
                "6c0af4ae.4fa6dc"
            ],
            [
                "8a074943.4848e8"
            ]
        ]
    },
    {
        "id": "b0d0784b.6c4358",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1290,
        "y": 3780,
        "wires": []
    },
    {
        "id": "8a074943.4848e8",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Response",
        "func": "var results = msg.payload;\n\nvar Batch='', Qty, M2_PC_RM_Available, Material,totalPallets;\nvar response = [], TOTALmaterial=0;\n\nconst unique = [...new Set(results.map(item => item.Batch))];\nnode.warn(unique);\n\nfor(j=0;j<unique.length;j++){\n    Batch = '';\n    Qty=0;\n    M2_PC_RM_Available=0;\n    totalPallets=0;\n    \n    response.push({Batch:Batch,Qty:Qty,totalBatchMaterial:M2_PC_RM_Available,totalPallets:totalPallets});\n\n    for(i=0;i<results.length;i++){\n        Batch = results[i].Batch;\n        Qty = parseFloat(results[i].Qty);\n        M2_PC_RM_Available = parseFloat(results[i].M2_PC_RM_Available);\n\n        if(unique[j] === Batch){\n            response[j].Batch = Batch;\n            response[j].Qty = response[j].Qty + Qty;\n            response[j].totalBatchMaterial = response[j].totalBatchMaterial + M2_PC_RM_Available;\n            TOTALmaterial = TOTALmaterial + M2_PC_RM_Available;\n            totalPallets = totalPallets+1;\n            response[j].totalPallets = totalPallets;\n        }\n    }\n}\n\nif(response.length>0){\n    var Material = msg.Material;\n    msg.payload = {Material:Material, TOTALmaterial:TOTALmaterial, TOTALpallets:results.length, results:response};\n    msg.statusCode = 200;\n}\nelse{\n    msg.payload = {\"response\":\"No results available.\"};\n    msg.statusCode = 200;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 3760,
        "wires": [
            [
                "b0d0784b.6c4358",
                "6c0af4ae.4fa6dc"
            ]
        ]
    },
    {
        "id": "6c0af4ae.4fa6dc",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1310,
        "y": 3720,
        "wires": []
    },
    {
        "id": "fea9dc31.497ba",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n            msg.Material = Material;\n        }\n    }\n    //server=\"https://digitrack.rakceramics.com\";\n      msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?Material_Code=\"+Material+\"\";\n    \n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 3900,
        "wires": [
            [
                "e2b3ace0.3ee67"
            ]
        ]
    },
    {
        "id": "e2b3ace0.3ee67",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 3900,
        "wires": [
            [
                "d7a7ed97.a37ef"
            ],
            [
                "4dc39e14.f1725"
            ]
        ]
    },
    {
        "id": "d7a7ed97.a37ef",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1350,
        "y": 3887,
        "wires": []
    },
    {
        "id": "2b5c0a3d.6547d6",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Pallet Data",
        "func": "var server = global.get(\"server\");\n\nfunction convertEpochToSpecificTimezone(timeEpoch, offset){\n    var d = new Date(timeEpoch);\n    var utc = d.getTime() + (d.getTimezoneOffset() * 60000);  //This converts to UTC 00:00\n    var nd = new Date(utc + (3600000*offset));\n    return nd.toLocaleString();\n}\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ***** Successfully processed Pallet Data request ***** \");\n    \n    var results = msg.payload.data;\n    //node.warn(msg.payload.results);\n    var toResponse = [];\n    if(results && !results.length){\n        //node.warn(\"no\")\n        msg.payload={\"response\":\"Invalid Pallet data request. No information found.\"};\n        statusCode = 400;\n        msg.toContinue=0;    \n    }\n    else{\n        //node.warn(\"yes\")\n        //node.warn(results.length)\n        for(i=0;i<results.length;i++){\n            var palletdata = \"{\\\"serialNumber\\\":\\\"\"+results[i].serialPallet+\"\\\"\";\n\n            if(results[i].Material_Code){\n                palletdata+=\",\\\"Material\\\":\\\"\"+results[i].Material_Code+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Material\\\":\\\"\\\"\";\n            }\n\n            if(results[i].Batch){\n                palletdata+=\",\\\"Batch\\\":\\\"\"+results[i].Batch+\"\\\"\";\n                var Batch = results[i].Batch;\n            }else{\n                palletdata+=\",\\\"Batch\\\":\\\"\\\"\";\n            }\n            \n            if(results[i].Qty){\n                palletdata+=\",\\\"Qty\\\":\\\"\"+results[i].Qty+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Qty\\\":\\\"\\\"\";\n            }\n            \n            if(results[i].M2_PC_RM_Available){\n                palletdata+=\",\\\"M2_PC_RM_Available\\\":\\\"\"+results[i].M2_PC_RM_Available+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"M2_PC_RM_Available\\\":\\\"\\\"\";\n            }\n            \n            palletdata+=\"}\";\n        \n            toResponse.push(JSON.parse(palletdata));\n        }\n        //msg.url = server+\"/riot-core-services/api/reportExecution/tableSummary/BACTCHMATERIALSUMMARY\";\n        //msg.payload={\"Batch\":Batch,\"Material_Master\":Material_Master};\n        msg.payload = toResponse;\n        msg.toResponse=toResponse;\n        msg.toContinue=1;\n    }\n\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 3927,
        "wires": [
            [
                "cea51fdf.fed39"
            ]
        ]
    },
    {
        "id": "6c802d21.8ae9c4",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1110,
        "y": 3927,
        "wires": [
            [
                "2b5c0a3d.6547d6",
                "cc191b445e02dff3"
            ]
        ]
    },
    {
        "id": "4dc39e14.f1725",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 3927,
        "wires": [
            [
                "6c802d21.8ae9c4"
            ]
        ]
    },
    {
        "id": "cea51fdf.fed39",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "toContinue",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 4007,
        "wires": [
            [
                "b1bd7d2b.48b92"
            ],
            [
                "4acd43d5.7f69ec"
            ]
        ]
    },
    {
        "id": "6e0d17db.69a208",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1290,
        "y": 4047,
        "wires": []
    },
    {
        "id": "4acd43d5.7f69ec",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Response",
        "func": "var results = msg.payload;\n\nvar Batch='', Qty, M2_PC_RM_Available, Material,totalPallets;\nvar response = [], TOTALmaterial=0;\n\nconst unique = [...new Set(results.map(item => item.Batch))];\nnode.warn(unique);\n\nfor(j=0;j<unique.length;j++){\n    Batch = '';\n    Qty=0;\n    M2_PC_RM_Available=0;\n    totalPallets=0;\n    \n    response.push({Batch:Batch,Qty:Qty,totalBatchMaterial:M2_PC_RM_Available,totalPallets:totalPallets});\n\n    for(i=0;i<results.length;i++){\n        Batch = results[i].Batch;\n        Qty = parseFloat(results[i].Qty);\n        M2_PC_RM_Available = parseFloat(results[i].M2_PC_RM_Available);\n\n        if(unique[j] === Batch){\n            response[j].Batch = Batch;\n            response[j].Qty = response[j].Qty + Qty;\n            response[j].totalBatchMaterial = response[j].totalBatchMaterial + M2_PC_RM_Available;\n            TOTALmaterial = TOTALmaterial + M2_PC_RM_Available;\n            totalPallets = totalPallets+1;\n            response[j].totalPallets = totalPallets;\n        }\n    }\n}\n\nif(response.length>0){\n    var Material = msg.Material;\n    msg.payload = {Material:Material, TOTALmaterial:TOTALmaterial, TOTALpallets:results.length, results:response};\n    msg.statusCode = 200;\n}\nelse{\n    msg.payload = {\"response\":\"No results available.\"};\n    msg.statusCode = 200;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 4027,
        "wires": [
            [
                "6e0d17db.69a208",
                "b1bd7d2b.48b92"
            ]
        ]
    },
    {
        "id": "b1bd7d2b.48b92",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "x": 1310,
        "y": 3987,
        "wires": []
    },
    {
        "id": "938e6b7c.333218",
        "type": "http in",
        "z": "b0648658.d6e708",
        "name": "GET HANDLING UNITS",
        "url": "/api/handlingunits",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 4320,
        "wires": [
            [
                "f6b60a12.89a1f8",
                "9ad70351.eb46"
            ]
        ]
    },
    {
        "id": "f6b60a12.89a1f8",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.Batch){\n        var Batch = results.Batch;\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Batch\":Batch, \"Material_Code\":Material};\n            msg.Material_Code = Material;\n            msg.statusCode = 200;\n            msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/RAKGETPALLETS\";\n        }\n        else{\n            node.warn(\"SLP - missing Material information. \");\n            msg.payload = {\"response\":\"Provide a valid Material\"};\n            msg.statusCode = 404;\n        }\n    }else{\n        node.warn(\"SLP - missing Batch information. \");\n        msg.payload = {\"response\":\"Provide a valid Batch\"};\n        msg.statusCode = 404;\n    }\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 4320,
        "wires": [
            [
                "ac3bc6d5.c0bbf8"
            ]
        ]
    },
    {
        "id": "1ad66d00.c1a7f3",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "ALL PALLET DETAILS",
        "func": "var response = msg.payload;\nvar results = '';\nif(response || response.length > 0){\n    results = response.results;\n}\nelse{\n    msg.payload = {Response:\"No data available\"};\n    msg.statusCode = 400;\n    return msg;\n}\n\nvar toResponse = [];\nvar forklift = '';\n\nif(results.length>0){\n    for(i=0;i<results.length;i++){\n        var details = results[i];\n        \n        delete details.thingTypeId;\n        delete details[\"thing.headers\"];\n        delete details.id;\n        qr_hu = details;\n        toResponse.push(qr_hu);\n    }\n    node.warn(\"Success SLP get QR Code - Handling Unit request\")\n    msg.payload = {total: response.total, results: toResponse};\n    msg.statusCode = 200;\n    return msg;\n}\nelse{\n    msg.payload = {Response:\"No data available\"};\n    msg.statusCode = 400;\n    return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 4280,
        "wires": [
            [
                "27a86ade.35dc26"
            ]
        ]
    },
    {
        "id": "a8233888.de2d68",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1130,
        "y": 4280,
        "wires": [
            [
                "e3f582fa.a08c6",
                "1ad66d00.c1a7f3"
            ]
        ]
    },
    {
        "id": "e125b4a7.c04d48",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Filters",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 4280,
        "wires": [
            [
                "a8233888.de2d68"
            ]
        ]
    },
    {
        "id": "27a86ade.35dc26",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 4280,
        "wires": []
    },
    {
        "id": "ac3bc6d5.c0bbf8",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 4320,
        "wires": [
            [
                "3661ba24.7bbd56"
            ],
            [
                "9e2fd22b.da47b"
            ]
        ]
    },
    {
        "id": "9e2fd22b.da47b",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 4380,
        "wires": []
    },
    {
        "id": "9ad70351.eb46",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 330,
        "y": 4280,
        "wires": []
    },
    {
        "id": "4608e02.2c59b2",
        "type": "comment",
        "z": "b0648658.d6e708",
        "name": "GET FORKLIFT PALLET DATA FOR SLP",
        "info": "",
        "x": 220,
        "y": 4200,
        "wires": []
    },
    {
        "id": "e3f582fa.a08c6",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1300,
        "y": 4240,
        "wires": []
    },
    {
        "id": "b4e70b9b.1f6f78",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "ALL PALLET DETAILS",
        "func": "var response = msg.payload;\nvar results = '';\nif(response || response.length > 0){\n    results = response.results;\n}\nelse{\n    msg.payload = {Response:\"No data available\"};\n    msg.statusCode = 400;\n    return msg;\n}\n\nvar toResponse = [];\nvar forklift = '';\n\nif(results.length>0){\n    for(i=0;i<results.length;i++){\n        var details = results[i];\n        \n        delete details.thingTypeId;\n        delete details[\"thing.headers\"];\n        delete details.id;\n        qr_hu = details;\n        toResponse.push(qr_hu);\n    }\n    node.warn(\"Success SLP get QR Code - Handling Unit request\")\n    msg.payload = {total: response.total, results: toResponse};\n    msg.statusCode = 200;\n    return msg;\n}\nelse{\n    msg.payload = {Response:\"No data available\"};\n    msg.statusCode = 400;\n    return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 4380,
        "wires": [
            [
                "7a2e243d.f6518c"
            ]
        ]
    },
    {
        "id": "94ba4431.acb938",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1170,
        "y": 4380,
        "wires": [
            [
                "26b1655a.40224a",
                "b4e70b9b.1f6f78"
            ]
        ]
    },
    {
        "id": "f02c6da0.f2379",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Filters",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 4380,
        "wires": [
            [
                "94ba4431.acb938"
            ]
        ]
    },
    {
        "id": "7a2e243d.f6518c",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1590,
        "y": 4380,
        "wires": []
    },
    {
        "id": "26b1655a.40224a",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1340,
        "y": 4340,
        "wires": []
    },
    {
        "id": "d9f55d0a.fa6ef",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "ALL PALLET DETAILS",
        "func": "var response = msg.payload;\nvar results = '';\nif(response || response.length > 0){\n    results = response.results;\n}\nelse{\n    msg.payload = {Response:\"No data available\"};\n    msg.statusCode = 400;\n    return msg;\n}\n\nvar toResponse = [];\nvar forklift = '';\n\nif(results.length>0){\n    for(i=0;i<results.length;i++){\n        var details = results[i];\n        \n        delete details.thingTypeId;\n        delete details[\"thing.headers\"];\n        delete details.id;\n        qr_hu = details;\n        toResponse.push(qr_hu);\n    }\n    node.warn(\"Success SLP get QR Code - Handling Unit request\")\n    msg.payload = {total: response.total, results: toResponse};\n    msg.statusCode = 200;\n    return msg;\n}\nelse{\n    msg.payload = {Response:\"No data available\"};\n    msg.statusCode = 400;\n    return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 4480,
        "wires": [
            [
                "cb4c5a14.8c6198"
            ]
        ]
    },
    {
        "id": "c84f466e.4db408",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1130,
        "y": 4480,
        "wires": [
            [
                "ecf4fc5d.33e5f",
                "d9f55d0a.fa6ef"
            ]
        ]
    },
    {
        "id": "928aa32.1c4ac6",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Filters",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 4480,
        "wires": [
            [
                "c84f466e.4db408"
            ]
        ]
    },
    {
        "id": "cb4c5a14.8c6198",
        "type": "http response",
        "z": "b0648658.d6e708",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 4480,
        "wires": []
    },
    {
        "id": "ecf4fc5d.33e5f",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1300,
        "y": 4440,
        "wires": []
    },
    {
        "id": "3661ba24.7bbd56",
        "type": "Load Balance",
        "z": "b0648658.d6e708",
        "defaultcapacity": 100,
        "dynamic": "8c24dbaa.d75ef8",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 780,
        "y": 4300,
        "wires": [
            [
                "d951de84.2c61b"
            ],
            [
                "e125b4a7.c04d48"
            ],
            [
                "f02c6da0.f2379"
            ],
            [
                "928aa32.1c4ac6"
            ]
        ]
    },
    {
        "id": "d951de84.2c61b",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 970,
        "y": 4200,
        "wires": []
    },
    {
        "id": "9338f55b.c6ab48",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "debug -tmp",
        "func": "node.warn(\"---> How frequent is the Lookup call? ---\")\nnode.warn(msg.payload)",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "4a59f024.bed88",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1110,
        "y": 2420,
        "wires": []
    },
    {
        "id": "6a53444d.28ca6c",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1110,
        "y": 2540,
        "wires": []
    },
    {
        "id": "4711c6ce.efb3a8",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1090,
        "y": 2640,
        "wires": []
    },
    {
        "id": "a56b34026464b3d5",
        "type": "base64",
        "z": "b0648658.d6e708",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 1420,
        "y": 940,
        "wires": [
            [
                "727911ac.6e6e1"
            ]
        ]
    },
    {
        "id": "ddd7f4aec40ea69f",
        "type": "base64",
        "z": "b0648658.d6e708",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 1420,
        "y": 120,
        "wires": [
            [
                "98db8815.9459a8"
            ]
        ]
    },
    {
        "id": "5075bb36.721b94",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 930,
        "y": 1220,
        "wires": []
    },
    {
        "id": "b528c2380832707a",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2890,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7dd71ce5c8e43444",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3155,
        "y": 1088,
        "wires": []
    },
    {
        "id": "a0dd0b9f3e9b4693",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1211,
        "y": 3580,
        "wires": []
    },
    {
        "id": "cc191b445e02dff3",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1230,
        "y": 3860,
        "wires": []
    },
    {
        "id": "1acb7742cc4753a3",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3385,
        "y": 1168,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "781f1849217ea1fd",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare message for HUITEM",
        "func": "let huitemData = msg.payload; // Existing payload\nlet RAKPALLETDataArray = global.get('responseData'); // New RAKPALLET data to be added\nnode.warn(RAKPALLETDataArray);\nnode.warn(huitemData);\n\n// Check if huitemData is an array and has at least one element\nif (Array.isArray(huitemData) && huitemData.length > 0) {\n    // Loop through each object in the array\n    huitemData.forEach(item => {\n        // Find the corresponding RAKPALLET object based on serialNumber\n        let matchingRAKPALLET = RAKPALLETDataArray.data.find(pallet => pallet.serialNumber === item.serialNumber.split('_')[0]);\n\n        // Check if a matching RAKPALLET object was found\n        if (matchingRAKPALLET) {\n            // Assign the matching RAKPALLET object to the item\n            item.RAKPALLET = { ...matchingRAKPALLET };\n\n            // Merge properties from RAKPALLETDataArray into the huitemData item without overwriting existing properties and skipping _id\n            for (let key in matchingRAKPALLET) {\n                if (!item.hasOwnProperty(key) && key !== '_id') {\n                    item[key] = matchingRAKPALLET[key];\n                }\n            }\n        } else {\n            // If no matching RAKPALLET object is found, initialize RAKPALLET as an empty object\n            item.RAKPALLET = {};\n        }\n    });\n}\n\nnode.warn(huitemData);\n\n// Set the updated huitemData to msg.payload\nmsg.payload = huitemData;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2755,
        "y": 1128,
        "wires": [
            [
                "1e9443c7.a2f61c"
            ]
        ]
    },
    {
        "id": "a96aece9.e8162",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2200,
        "y": 1160,
        "wires": [
            [
                "5c2cfb87.2df674"
            ]
        ]
    },
    {
        "id": "ca0432a75f6bc2e2",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare message for master",
        "func": "let Batch = msg.payload[0].udfs.Batch.value;\nlet Material = msg.payload[0].udfs.Material.value;\n\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/MATERIAL_AND_BATCH_MASTER/all?Batch=\"+Batch+\"&Material=\"+Material+\"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1120,
        "wires": [
            [
                "9e6af67f62649a2e"
            ]
        ]
    },
    {
        "id": "67bcbcb26d8358a6",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare message for material",
        "func": "var material = msg.payload[0].udfs.Material.value;\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/MATERIAL_MASTER/all?Material=\" + material + \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 1080,
        "wires": [
            [
                "5224884007cf83b3"
            ]
        ]
    },
    {
        "id": "43bbc81e7ea4b39a",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1770,
        "y": 1080,
        "wires": [
            [
                "ee419e4642527ba3",
                "f17be8ca585094a4"
            ]
        ]
    },
    {
        "id": "32bb29e6e60f87ee",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1770,
        "y": 1120,
        "wires": [
            [
                "eb80a138a774b3bf",
                "60a84ddd91388f5d"
            ]
        ]
    },
    {
        "id": "5224884007cf83b3",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 1080,
        "wires": [
            [
                "43bbc81e7ea4b39a"
            ]
        ]
    },
    {
        "id": "9e6af67f62649a2e",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1610,
        "y": 1120,
        "wires": [
            [
                "32bb29e6e60f87ee"
            ]
        ]
    },
    {
        "id": "ee419e4642527ba3",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item message",
        "func": "/**\n * Created by Nadeem on 16-July-2024.\n */\nvar payloadP = Array.isArray(msg.payloadP) ? msg.payloadP : []; // Initialize payloadP as an empty array if not already defined or not an array\nvar materialData = JSON.parse(msg.payload); // Assuming msg.payload contains JSON data\n\nif (Array.isArray(materialData.data) && materialData.data.length > 0) {\n    materialData.data.forEach((obj, index) => {\n        if (index < payloadP.length) {\n            // Merge each object from materialData into the corresponding object in payloadP without overwriting existing values\n            Object.entries(obj).forEach(([key, value]) => {\n                if (key !== '_id' && !payloadP[index].hasOwnProperty(key)) {\n                    payloadP[index][key] = value;\n                }\n            });\n        // } else {\n        //     // If there's no corresponding object in payloadP, add the new object without _id\n        //     let newObj = {};\n        //     Object.entries(obj).forEach(([key, value]) => {\n        //         if (key !== '_id') {\n        //             newObj[key] = value;\n        //         }\n        //     });\n        //     payloadP.push(newObj);\n         }\n    });\n}\n\nmsg.payload = payloadP;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 1080,
        "wires": [
            [
                "866d944542bc43c5",
                "2e32fd4b.8fcfa2"
            ]
        ]
    },
    {
        "id": "f17be8ca585094a4",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1930,
        "y": 1040,
        "wires": []
    },
    {
        "id": "866d944542bc43c5",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2190,
        "y": 1040,
        "wires": []
    },
    {
        "id": "eb80a138a774b3bf",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item message",
        "func": "/**\n * Created by Nadeem on 16-July-2024.\n */\nvar payloadM = Array.isArray(msg.payloadM) ? msg.payloadM : []; // Initialize payloadM as an empty array if not already defined or not an array\nvar batchData = JSON.parse(msg.payload); // Assuming msg.payload contains JSON data\nnode.warn(batchData)\n// Initialize variables for extracted UDFs\nvar Batch_Date_Stamp, Batch_Month, Batch_Sequence, Batch_Year, Caliber, Carton_Type, Item_Grade, Batch_status,\n    M2_PC_RM_Per_Box, M2_PC_RM_Per_Box_Numeric, M2_PC_RM_Per_Pallet, No_Of_Boxes_Per_Pallet, Pack_Code,\n    Pack_Code_Description, Pallet_Type, Planning_Group, Plant, Shade, Storage_Location, Weight_per_Box_Kg;\n\n// Extract UDFs from batchData.data\nif (Array.isArray(batchData.data) && batchData.data.length > 0) {\n    var udfData = batchData.data[0]; // Assuming you need data from the first object in the array\n    \n    Batch_status = udfData.Status;\n    Batch_Date_Stamp = udfData.Date_Stamp;\n    Batch_Month = udfData.Batch_Month;\n    Batch_Sequence = udfData.Batch_Sequence;\n    Batch_Year = udfData.Batch_Year;\n    Caliber = udfData.Caliber;\n    Carton_Type = udfData.Carton_Type;\n    Item_Grade = udfData.Item_Grade; // Adjusted to match your payload structure\n    M2_PC_RM_Per_Box = udfData.M2_PC_RM_Per_Box;\n    M2_PC_RM_Per_Box_Numeric = udfData.M2_PC_RM_Per_Box_Numeric;\n    M2_PC_RM_Per_Pallet = udfData.M2_PC_RM_Per_Pallet;\n    No_Of_Boxes_Per_Pallet = udfData.No_Of_Boxes_Per_Pallet;\n    Pack_Code = udfData.Pack_Code;\n    Pack_Code_Description = udfData.Pack_Code_Description;\n    Pallet_Type = udfData.Pallet_Type;\n    Planning_Group = udfData.Planning_Group;\n    Plant = udfData.Plant;\n    Shade = udfData.Shade;\n   // UOM = udfData.UOM;\n    Storage_Location = udfData.Storage_Location;\n    Weight_per_Box_Kg = udfData.Weight_per_Box_Kg;\n}\n\n// Helper function to append UDFs to payloadM\nfunction appendUDF(key, value) {\n    payloadM.forEach(item => {\n        if (!item.hasOwnProperty(key)) {\n            item[key] = value;\n        }\n    });\n}\n\n// Check and append StorageLocation to payloadM\npayloadM.forEach(item => {\n    var StorageLocation = item.StorageLocation;\n\n    if (!StorageLocation) {\n        var Storage_location = udfData.Storage_Location;\n        appendUDF('StorageLocation', Storage_location);\n    } else {\n        appendUDF('StorageLocation', StorageLocation);\n    }\n});\n\n// Perform Qty checks and calculations\npayloadM.forEach(item => {\n    var Qty = item.Qty;\n\n    if (Qty !== null && Qty !== \"\") {\n        Qty = parseInt(Qty);\n        if (isNaN(Qty)) {\n            Qty = parseInt(No_Of_Boxes_Per_Pallet);\n            if (isNaN(Qty)) {\n                Qty = 0;\n                No_Of_Boxes_Per_Pallet = 0;\n            }\n            item.No_Of_Boxes_Per_Pallet = No_Of_Boxes_Per_Pallet;\n            item.Qty = Qty;\n        }\n        item.M2_PC_RM_Available = (M2_PC_RM_Per_Box_Numeric * Qty);\n    } else {\n        Qty = \"\";\n    }\n\n    if (Qty === \"\") {\n        Qty = parseInt(No_Of_Boxes_Per_Pallet);\n        if (isNaN(Qty)) {\n            Qty = 0;\n            No_Of_Boxes_Per_Pallet = 0;\n        }\n        item.No_Of_Boxes_Per_Pallet = No_Of_Boxes_Per_Pallet;\n        item.Qty = Qty;\n        item.M2_PC_RM_Available = (M2_PC_RM_Per_Box_Numeric * Qty);\n    }\n});\nnode.warn(\"-------\");\nnode.warn(Plant);\n// Append UDFs to payloadM\nappendUDF('Status', Batch_status);\nappendUDF('Batch_Date_Stamp', Batch_Date_Stamp);\nappendUDF('Batch_Month', Batch_Month);\nappendUDF('Batch_Sequence', Batch_Sequence);\nappendUDF('Batch_Year', Batch_Year);\nappendUDF('Caliber', Caliber);\nappendUDF('Carton_Type', Carton_Type);\nappendUDF('Grade', Item_Grade);\nappendUDF('M2_PC_RM_Per_Box', M2_PC_RM_Per_Box);\nappendUDF('No_Of_Boxes_Per_Pallet', No_Of_Boxes_Per_Pallet);\nappendUDF('M2_PC_RM_Per_Box_Numeric', M2_PC_RM_Per_Box_Numeric);\nappendUDF('M2_PC_RM_Per_Pallet', M2_PC_RM_Per_Pallet);\nappendUDF('Pack_Code', Pack_Code);\nappendUDF('Pack_Code_Description', Pack_Code_Description);\nappendUDF('Pallet_Type', Pallet_Type);\nappendUDF('Planning_Group', Planning_Group);\nappendUDF('Plant', Plant);\nappendUDF('Shade', Shade);\n//appendUDF('UOM', UOM);\nappendUDF('Storage_location', Storage_Location);\nappendUDF('Weight_per_Box_Kg', Weight_per_Box_Kg);\nnode.warn(\"+++++++\");\nnode.warn(payloadM);\nmsg.payload = payloadM;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 1120,
        "wires": [
            [
                "edf8d2baf7172d6e",
                "a96aece9.e8162"
            ]
        ]
    },
    {
        "id": "edf8d2baf7172d6e",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2190,
        "y": 1200,
        "wires": []
    },
    {
        "id": "75c94b1b4a4fa3ee",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "",
        "func": "\nmsg.filename = \"/transfer/\"+msg.image[0][1]+\"/pallet_\"+msg.image[0][1]+\".png\";\nmsg.payload = msg.image[0][0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 560,
        "wires": [
            [
                "a9a8e0fe68b07ed2",
                "6b111ed096043ec4"
            ]
        ]
    },
    {
        "id": "58d65a4525bfae1f",
        "type": "file",
        "z": "b0648658.d6e708",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1670,
        "y": 508,
        "wires": [
            []
        ]
    },
    {
        "id": "876c2528d296a1d8",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "image.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1400,
        "y": 600,
        "wires": [
            [
                "a669efc6a266a121"
            ]
        ]
    },
    {
        "id": "a669efc6a266a121",
        "type": "splitter",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "image",
        "x": 1400,
        "y": 560,
        "wires": [
            [
                "75c94b1b4a4fa3ee"
            ]
        ]
    },
    {
        "id": "a9a8e0fe68b07ed2",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1680,
        "y": 568,
        "wires": []
    },
    {
        "id": "6b111ed096043ec4",
        "type": "base64",
        "z": "b0648658.d6e708",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 1530,
        "y": 508,
        "wires": [
            [
                "58d65a4525bfae1f"
            ]
        ]
    },
    {
        "id": "6f83c31ea68acf10",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare message for master",
        "func": "let Batch = msg.payload[0].udfs.Batch.value;\nlet Material = msg.payload[0].udfs.Material.value;\n\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/MATERIAL_AND_BATCH_MASTER/all?Batch=\"+Batch+\"&Material=\"+Material+\"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 688,
        "wires": [
            [
                "c2f50321567d4912"
            ]
        ]
    },
    {
        "id": "90b89d1f7ff0a6ab",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare message for material",
        "func": "var material = msg.payload[0].udfs.Material.value;\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/MATERIAL_MASTER/all?Material=\" + material + \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 648,
        "wires": [
            [
                "62270f84458fc41c"
            ]
        ]
    },
    {
        "id": "e904b06b28d02d5c",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1880,
        "y": 648,
        "wires": [
            [
                "f2660b5dc69f5de4",
                "4409ab15c997d1d1"
            ]
        ]
    },
    {
        "id": "39bc93e7e663f52b",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1880,
        "y": 688,
        "wires": [
            [
                "610fd6c2240d009a"
            ]
        ]
    },
    {
        "id": "62270f84458fc41c",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 648,
        "wires": [
            [
                "e904b06b28d02d5c"
            ]
        ]
    },
    {
        "id": "c2f50321567d4912",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 688,
        "wires": [
            [
                "39bc93e7e663f52b"
            ]
        ]
    },
    {
        "id": "f2660b5dc69f5de4",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item message",
        "func": "/**\n * Created by Nadeem on 16-July-2024.\n */\nvar payloadP = Array.isArray(msg.payloadP) ? msg.payloadP : []; // Initialize payloadP as an empty array if not already defined or not an array\nvar materialData = JSON.parse(msg.payload); // Assuming msg.payload contains JSON data\n\nif (Array.isArray(materialData.data) && materialData.data.length > 0) {\n    materialData.data.forEach((obj, index) => {\n        if (index < payloadP.length) {\n            // Merge each object from materialData into the corresponding object in payloadP without overwriting existing values\n            Object.entries(obj).forEach(([key, value]) => {\n                if (key !== '_id' && !payloadP[index].hasOwnProperty(key)) {\n                    payloadP[index][key] = value;\n                }\n            });\n        } else {\n            // If there's no corresponding object in payloadP, add the new object without _id\n            let newObj = {};\n            Object.entries(obj).forEach(([key, value]) => {\n                if (key !== '_id') {\n                    newObj[key] = value;\n                }\n            });\n            payloadP.push(newObj);\n        }\n    });\n}\n\nmsg.payload = payloadP;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 648,
        "wires": [
            [
                "ff5d492c35f0c746"
            ]
        ]
    },
    {
        "id": "4409ab15c997d1d1",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2040,
        "y": 608,
        "wires": []
    },
    {
        "id": "610fd6c2240d009a",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item message",
        "func": "/**\n * Created by Nadeem on 16-July-2024.\n */\nvar payloadM = Array.isArray(msg.payloadM) ? msg.payloadM : []; // Initialize payloadM as an empty array if not already defined or not an array\nvar batchData = JSON.parse(msg.payload); // Assuming msg.payload contains JSON data\nnode.warn(batchData)\n// Initialize variables for extracted UDFs\nvar Batch_Date_Stamp, Batch_Month, Batch_Sequence, Batch_Year, Caliber, Carton_Type, Item_Grade,\n    M2_PC_RM_Per_Box, M2_PC_RM_Per_Box_Numeric, M2_PC_RM_Per_Pallet, No_Of_Boxes_Per_Pallet, Pack_Code,\n    Pack_Code_Description, Pallet_Type, Planning_Group, Plant, Shade, Storage_Location, Weight_per_Box_Kg;\n\n// Extract UDFs from batchData.data\nif (Array.isArray(batchData.data) && batchData.data.length > 0) {\n    var udfData = batchData.data[0]; // Assuming you need data from the first object in the array\n    \n    Batch_status = udfData.Status;\n    Batch_Date_Stamp = udfData.Date_Stamp;\n    Batch_Month = udfData.Batch_Month;\n    Batch_Sequence = udfData.Batch_Sequence;\n    Batch_Year = udfData.Batch_Year;\n    Caliber = udfData.Caliber;\n    Carton_Type = udfData.Carton_Type;\n    Item_Grade = udfData.Item_Grade; // Adjusted to match your payload structure\n    M2_PC_RM_Per_Box = udfData.M2_PC_RM_Per_Box;\n    M2_PC_RM_Per_Box_Numeric = udfData.M2_PC_RM_Per_Box_Numeric;\n    M2_PC_RM_Per_Pallet = udfData.M2_PC_RM_Per_Pallet;\n    No_Of_Boxes_Per_Pallet = udfData.No_Of_Boxes_Per_Pallet;\n    Pack_Code = udfData.Pack_Code;\n    Pack_Code_Description = udfData.Pack_Code_Description;\n    Pallet_Type = udfData.Pallet_Type;\n    Planning_Group = udfData.Planning_Group;\n    Plant = udfData.Plant;\n    Shade = udfData.Shade;\n   // UOM = udfData.UOM;\n    Storage_Location = udfData.Storage_Location;\n    Weight_per_Box_Kg = udfData.Weight_per_Box_Kg;\n}\n\n// Helper function to append UDFs to payloadM\nfunction appendUDF(key, value) {\n    payloadM.forEach(item => {\n        if (!item.hasOwnProperty(key)) {\n            item[key] = value;\n        }\n    });\n}\n\n// Check and append StorageLocation to payloadM\npayloadM.forEach(item => {\n    var StorageLocation = item.StorageLocation;\n\n    if (!StorageLocation) {\n        var Storage_location = udfData.Storage_Location;\n        appendUDF('StorageLocation', Storage_location);\n    } else {\n        appendUDF('StorageLocation', StorageLocation);\n    }\n});\n\n// Perform Qty checks and calculations\npayloadM.forEach(item => {\n    var Qty = item.Qty;\n\n    if (Qty !== null && Qty !== \"\") {\n        Qty = parseInt(Qty);\n        if (isNaN(Qty)) {\n            Qty = parseInt(No_Of_Boxes_Per_Pallet);\n            if (isNaN(Qty)) {\n                Qty = 0;\n                No_Of_Boxes_Per_Pallet = 0;\n            }\n            item.No_Of_Boxes_Per_Pallet = No_Of_Boxes_Per_Pallet;\n            item.Qty = Qty;\n        }\n        item.M2_PC_RM_Available = (M2_PC_RM_Per_Box_Numeric * Qty);\n    } else {\n        Qty = \"\";\n    }\n\n    if (Qty === \"\") {\n        Qty = parseInt(No_Of_Boxes_Per_Pallet);\n        if (isNaN(Qty)) {\n            Qty = 0;\n            No_Of_Boxes_Per_Pallet = 0;\n        }\n        item.No_Of_Boxes_Per_Pallet = No_Of_Boxes_Per_Pallet;\n        item.Qty = Qty;\n        item.M2_PC_RM_Available = (M2_PC_RM_Per_Box_Numeric * Qty);\n    }\n});\n\n// Append UDFs to payloadM\nappendUDF('Status', Batch_status);\nappendUDF('Batch_Date_Stamp', Batch_Date_Stamp);\nappendUDF('Batch_Month', Batch_Month);\nappendUDF('Batch_Sequence', Batch_Sequence);\nappendUDF('Batch_Year', Batch_Year);\nappendUDF('Caliber', Caliber);\nappendUDF('Carton_Type', Carton_Type);\nappendUDF('Grade', Item_Grade);\nappendUDF('M2_PC_RM_Per_Box', M2_PC_RM_Per_Box);\nappendUDF('No_Of_Boxes_Per_Pallet', No_Of_Boxes_Per_Pallet);\nappendUDF('M2_PC_RM_Per_Box_Numeric', M2_PC_RM_Per_Box_Numeric);\nappendUDF('M2_PC_RM_Per_Pallet', M2_PC_RM_Per_Pallet);\nappendUDF('Pack_Code', Pack_Code);\nappendUDF('Pack_Code_Description', Pack_Code_Description);\nappendUDF('Pallet_Type', Pallet_Type);\nappendUDF('Planning_Group', Planning_Group);\nappendUDF('Plant', Plant);\nappendUDF('Shade', Shade);\n//appendUDF('UOM', UOM);\nappendUDF('Storage_location', Storage_Location);\nappendUDF('Weight_per_Box_Kg', Weight_per_Box_Kg);\n\nmsg.payload = payloadM;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 688,
        "wires": [
            [
                "ee875bb724f25e60",
                "1ec9aa1d735bf9f3"
            ]
        ]
    },
    {
        "id": "1eee7f823db3aaa2",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2650,
        "y": 640,
        "wires": [
            [
                "5486df432772597a"
            ]
        ]
    },
    {
        "id": "5486df432772597a",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2830,
        "y": 640,
        "wires": [
            [
                "4723f2695d5bdc6c",
                "fe4520060ca7822c"
            ]
        ]
    },
    {
        "id": "fe4520060ca7822c",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3010,
        "y": 600,
        "wires": [
            [
                "e1662c9cab63900a"
            ]
        ]
    },
    {
        "id": "e1662c9cab63900a",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\nvar responsePayload = JSON.parse(msg.payload);\nglobal.set(\"responseData\", responsePayload);\n// delete msg.payload;\n// return msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3160,
        "y": 600,
        "wires": [
            [
                "7ba0c02a1499333a"
            ]
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "f4f4c5f14761bf77",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 2480,
        "y": 640,
        "wires": [
            [
                "1eee7f823db3aaa2"
            ]
        ]
    },
    {
        "id": "7ba0c02a1499333a",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3290,
        "y": 600,
        "wires": []
    },
    {
        "id": "ff5d492c35f0c746",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2310,
        "y": 640,
        "wires": [
            [
                "f4f4c5f14761bf77"
            ]
        ]
    },
    {
        "id": "86229fc9730e3ac5",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "HUITEM",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2300,
        "y": 680,
        "wires": [
            [
                "e0f778a5fdc82181"
            ]
        ]
    },
    {
        "id": "e0f778a5fdc82181",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 2464,
        "y": 680,
        "wires": [
            [
                "4d6a6873eee65927"
            ]
        ]
    },
    {
        "id": "4d6a6873eee65927",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2634,
        "y": 680,
        "wires": [
            [
                "d65092ebb67aa5ce"
            ]
        ]
    },
    {
        "id": "69c1fa307a70eb99",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3095,
        "y": 688,
        "wires": [
            [
                "60a4196c936d174b",
                "7af6265a9e3e5c5c"
            ]
        ]
    },
    {
        "id": "7af6265a9e3e5c5c",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3295,
        "y": 688,
        "wires": [
            [
                "6db480f2b9b9e45b",
                "2eee611dc174bfad"
            ]
        ]
    },
    {
        "id": "4723f2695d5bdc6c",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2990,
        "y": 560,
        "wires": []
    },
    {
        "id": "60a4196c936d174b",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3255,
        "y": 648,
        "wires": []
    },
    {
        "id": "d65092ebb67aa5ce",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare message for HUITEM",
        "func": "let huitemData = msg.payload; // Existing payload\nlet RAKPALLETDataArray = global.get('responseData'); // New RAKPALLET data to be added\nnode.warn(RAKPALLETDataArray);\n\n// Check if huitemData is an array and has at least one element\nif (Array.isArray(huitemData) && huitemData.length > 0) {\n    // Loop through each object in the array\n    huitemData.forEach(item => {\n        // Check if RAKPALLET field exists\n        if (!item.hasOwnProperty('RAKPALLET')) {\n            // Add the RAKPALLET field and assign the first object from RAKPALLETDataArray to it\n            if (Array.isArray(RAKPALLETDataArray.data) && RAKPALLETDataArray.data.length > 0) {\n                item.RAKPALLET = RAKPALLETDataArray.data[0];\n            } else {\n                item.RAKPALLET = {}; // Fallback to an empty object if data is not an array or empty\n            }\n        } else if (Array.isArray(item.RAKPALLET) && item.RAKPALLET.length > 0) {\n            // If RAKPALLET already exists as an array, convert it to the first object\n            item.RAKPALLET = item.RAKPALLET[0];\n        }\n    });\n}\nnode.warn(huitemData);\n\n// Set the updated huitemData to msg.payload\nmsg.payload = huitemData;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2855,
        "y": 688,
        "wires": [
            [
                "69c1fa307a70eb99"
            ]
        ]
    },
    {
        "id": "ee875bb724f25e60",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2300,
        "y": 720,
        "wires": [
            [
                "86229fc9730e3ac5"
            ]
        ]
    },
    {
        "id": "753005173f537ae1",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2290,
        "y": 600,
        "wires": []
    },
    {
        "id": "1ec9aa1d735bf9f3",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2290,
        "y": 760,
        "wires": []
    },
    {
        "id": "6db480f2b9b9e45b",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3470,
        "y": 680,
        "wires": []
    },
    {
        "id": "2eee611dc174bfad",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3480,
        "y": 720,
        "wires": [
            [
                "eb415abab0984a7e"
            ]
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "60a84ddd91388f5d",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1930,
        "y": 1160,
        "wires": []
    },
    {
        "id": "999ce790e6560a64",
        "type": "comment",
        "z": "b0648658.d6e708",
        "name": "SCHEDULE FOR TAGGING PROCESS",
        "info": "",
        "x": 2750,
        "y": 80,
        "wires": []
    },
    {
        "id": "077b929afe812cf6",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?M2_PC_RM_Available=0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2860,
        "y": 180,
        "wires": [
            [
                "ecaef13380363fe8"
            ]
        ]
    },
    {
        "id": "ecaef13380363fe8",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3020,
        "y": 180,
        "wires": [
            [
                "53e1cebc8b7c535c",
                "b22ea7876e26dee2",
                "b95afab05958c887"
            ]
        ]
    },
    {
        "id": "f113f96d51a13bde",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item message",
        "func": "const batch = payload.data[0].Batch;\nconst materialCode = payload.data[0].Material_Code;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3230,
        "y": 180,
        "wires": [
            [
                "d8545f7be754f5ca"
            ]
        ]
    },
    {
        "id": "53e1cebc8b7c535c",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3190,
        "y": 140,
        "wires": []
    },
    {
        "id": "3cf3c0747396fb5e",
        "type": "inject",
        "z": "b0648658.d6e708",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2670,
        "y": 180,
        "wires": [
            [
                "077b929afe812cf6"
            ]
        ]
    },
    {
        "id": "d8545f7be754f5ca",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3450,
        "y": 180,
        "wires": []
    },
    {
        "id": "b22ea7876e26dee2",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare message for master",
        "func": "var batchData = JSON.parse(msg.payload);\nconst batch = batchData.data[0].Batch;\nconst materialCode = batchData.data[0].Material_Code;\n\n// Construct the URL with the extracted parameters\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/MATERIAL_AND_BATCH_MASTER/all?Batch=\" + batch + \"&Material=\" + materialCode;\n\n// Return the modified message object\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 320,
        "wires": [
            [
                "a0b9d88ffdbd5574"
            ]
        ]
    },
    {
        "id": "b95afab05958c887",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare message for material",
        "func": "var materialData = JSON.parse(msg.payload);\nvar materialArray = materialData.data; // Get the array of material data\nvar urls = []; // Array to store the URLs\n\nfor (var i = 0; i < materialArray.length; i++) {\n    var materialCode = materialArray[i].Material_Code;\n    var url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/MATERIAL_MASTER/all?Material=\" + materialCode;\n    urls.push({url: url}); // Create a message for each URL and add it to the array\n}\n\nreturn [urls];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2910,
        "y": 280,
        "wires": [
            [
                "a91a236144efffc3"
            ]
        ]
    },
    {
        "id": "1ed1e290da6239db",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3320,
        "y": 288,
        "wires": [
            [
                "bf46915a3ad71c57"
            ]
        ]
    },
    {
        "id": "1622a622611ec5af",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 3320,
        "y": 328,
        "wires": [
            [
                "aea3174dd0f392a2"
            ]
        ]
    },
    {
        "id": "348807726f401152",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3160,
        "y": 288,
        "wires": [
            [
                "1ed1e290da6239db"
            ]
        ]
    },
    {
        "id": "a0b9d88ffdbd5574",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3160,
        "y": 328,
        "wires": [
            [
                "1622a622611ec5af"
            ]
        ]
    },
    {
        "id": "083ded1215ac7faa",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item message",
        "func": "/**\n * Created by Nadeem on 16-July-2024.\n */\nvar payloadP = Array.isArray(msg.payloadP) ? msg.payloadP : []; // Initialize payloadP as an empty array if not already defined or not an array\nvar materialData = JSON.parse(msg.payload); // Assuming msg.payload contains JSON data\n\nif (Array.isArray(materialData.data) && materialData.data.length > 0) {\n    materialData.data.forEach((obj, index) => {\n        if (index < payloadP.length) {\n            // Merge each object from materialData into the corresponding object in payloadP without overwriting existing values\n            Object.entries(obj).forEach(([key, value]) => {\n                if (key !== '_id' && !payloadP[index].hasOwnProperty(key)) {\n                    payloadP[index][key] = value;\n                }\n            });\n        } else {\n            // If there's no corresponding object in payloadP, add the new object without _id\n            let newObj = {};\n            Object.entries(obj).forEach(([key, value]) => {\n                if (key !== '_id') {\n                    newObj[key] = value;\n                }\n            });\n            payloadP.push(newObj);\n        }\n    });\n}\n\nmsg.payload = payloadP;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 288,
        "wires": [
            [
                "a622f374ca381681"
            ]
        ]
    },
    {
        "id": "dcaa71bd2db2e304",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item message",
        "func": "/**\n * Created by Nadeem on 16-July-2024.\n */\nvar payloadM = Array.isArray(msg.payloadM) ? msg.payloadM : []; // Initialize payloadM as an empty array if not already defined or not an array\nvar batchData = JSON.parse(msg.payload); // Assuming msg.payload contains JSON data\nnode.warn(batchData)\n// Initialize variables for extracted UDFs\nvar Batch_Date_Stamp, Batch_Month, Batch_Sequence, Batch_Year, Caliber, Carton_Type, Item_Grade,\n    M2_PC_RM_Per_Box, M2_PC_RM_Per_Box_Numeric, M2_PC_RM_Per_Pallet, No_Of_Boxes_Per_Pallet, Pack_Code,\n    Pack_Code_Description, Pallet_Type, Planning_Group, Plant, Shade, Storage_Location, Weight_per_Box_Kg;\n\n// Extract UDFs from batchData.data\nif (Array.isArray(batchData.data) && batchData.data.length > 0) {\n    var udfData = batchData.data[0]; // Assuming you need data from the first object in the array\n    \n    Batch_status = udfData.Status;\n    Batch_Date_Stamp = udfData.Date_Stamp;\n    Batch_Month = udfData.Batch_Month;\n    Batch_Sequence = udfData.Batch_Sequence;\n    Batch_Year = udfData.Batch_Year;\n    Caliber = udfData.Caliber;\n    Carton_Type = udfData.Carton_Type;\n    Item_Grade = udfData.Item_Grade; // Adjusted to match your payload structure\n    M2_PC_RM_Per_Box = udfData.M2_PC_RM_Per_Box;\n    M2_PC_RM_Per_Box_Numeric = udfData.M2_PC_RM_Per_Box_Numeric;\n    M2_PC_RM_Per_Pallet = udfData.M2_PC_RM_Per_Pallet;\n    No_Of_Boxes_Per_Pallet = udfData.No_Of_Boxes_Per_Pallet;\n    Pack_Code = udfData.Pack_Code;\n    Pack_Code_Description = udfData.Pack_Code_Description;\n    Pallet_Type = udfData.Pallet_Type;\n    Planning_Group = udfData.Planning_Group;\n    Plant = udfData.Plant;\n    Shade = udfData.Shade;\n    Storage_Location = udfData.Storage_Location;\n    Weight_per_Box_Kg = udfData.Weight_per_Box_Kg;\n}\n\n// Helper function to append UDFs to payloadM\nfunction appendUDF(key, value) {\n    payloadM.forEach(item => {\n        if (!item.hasOwnProperty(key)) {\n            item[key] = value;\n        }\n    });\n}\n\n// Check and append StorageLocation to payloadM\npayloadM.forEach(item => {\n    var StorageLocation = item.StorageLocation;\n\n    if (!StorageLocation) {\n        var Storage_location = udfData.Storage_Location;\n        appendUDF('StorageLocation', Storage_location);\n    } else {\n        appendUDF('StorageLocation', StorageLocation);\n    }\n});\n\n// Perform Qty checks and calculations\npayloadM.forEach(item => {\n    var Qty = item.Qty;\n\n    if (Qty !== null && Qty !== \"\") {\n        Qty = parseInt(Qty);\n        if (isNaN(Qty)) {\n            Qty = parseInt(No_Of_Boxes_Per_Pallet);\n            if (isNaN(Qty)) {\n                Qty = 0;\n                No_Of_Boxes_Per_Pallet = 0;\n            }\n            item.No_Of_Boxes_Per_Pallet = No_Of_Boxes_Per_Pallet;\n            item.Qty = Qty;\n        }\n        item.M2_PC_RM_Available = (M2_PC_RM_Per_Box_Numeric * Qty);\n    } else {\n        Qty = \"\";\n    }\n\n    if (Qty === \"\") {\n        Qty = parseInt(No_Of_Boxes_Per_Pallet);\n        if (isNaN(Qty)) {\n            Qty = 0;\n            No_Of_Boxes_Per_Pallet = 0;\n        }\n        item.No_Of_Boxes_Per_Pallet = No_Of_Boxes_Per_Pallet;\n        item.Qty = Qty;\n        item.M2_PC_RM_Available = (M2_PC_RM_Per_Box_Numeric * Qty);\n    }\n});\n\n// Append UDFs to payloadM\nappendUDF('Status', Batch_status);\nappendUDF('Batch_Date_Stamp', Batch_Date_Stamp);\nappendUDF('Batch_Month', Batch_Month);\nappendUDF('Batch_Sequence', Batch_Sequence);\nappendUDF('Batch_Year', Batch_Year);\nappendUDF('Caliber', Caliber);\nappendUDF('Carton_Type', Carton_Type);\nappendUDF('Grade', Item_Grade);\nappendUDF('M2_PC_RM_Per_Box', M2_PC_RM_Per_Box);\nappendUDF('M2_PC_RM_Per_Box_Numeric', M2_PC_RM_Per_Box_Numeric);\nappendUDF('M2_PC_RM_Per_Pallet', M2_PC_RM_Per_Pallet);\nappendUDF('Pack_Code', Pack_Code);\nappendUDF('Pack_Code_Description', Pack_Code_Description);\nappendUDF('Pallet_Type', Pallet_Type);\nappendUDF('Planning_Group', Planning_Group);\nappendUDF('Shade', Shade);\nappendUDF('Storage_location', Storage_Location);\nappendUDF('Weight_per_Box_Kg', Weight_per_Box_Kg);\n\nmsg.payload = payloadM;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 328,
        "wires": [
            [
                "76d3e4dd38447417",
                "84e4154bd3d70460"
            ]
        ]
    },
    {
        "id": "9daa426f1223f47c",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 4090,
        "y": 280,
        "wires": [
            [
                "d9f448b69047c9bf"
            ]
        ]
    },
    {
        "id": "d9f448b69047c9bf",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4270,
        "y": 280,
        "wires": [
            [
                "590985109de36cb8",
                "42d7ad2ddc767671"
            ]
        ]
    },
    {
        "id": "f72f92ed893da8d1",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 3920,
        "y": 280,
        "wires": [
            [
                "9daa426f1223f47c"
            ]
        ]
    },
    {
        "id": "a622f374ca381681",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3750,
        "y": 280,
        "wires": [
            [
                "f72f92ed893da8d1"
            ]
        ]
    },
    {
        "id": "a831fe9a27b99627",
        "type": "change",
        "z": "b0648658.d6e708",
        "name": "HUITEM",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3740,
        "y": 320,
        "wires": [
            [
                "62d43fa52260797b"
            ]
        ]
    },
    {
        "id": "62d43fa52260797b",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 3904,
        "y": 320,
        "wires": [
            [
                "135295f900af10e9"
            ]
        ]
    },
    {
        "id": "135295f900af10e9",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 4074,
        "y": 320,
        "wires": [
            [
                "876ce689789b8b7d"
            ]
        ]
    },
    {
        "id": "0077d44cb11bf146",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4535,
        "y": 328,
        "wires": [
            [
                "82f37c13b8941db8",
                "0b8b2aed1cc84ae9"
            ]
        ]
    },
    {
        "id": "0b8b2aed1cc84ae9",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 4735,
        "y": 328,
        "wires": [
            [
                "0c42cf701d4e3d8f",
                "0d1605aef7821eaa"
            ]
        ]
    },
    {
        "id": "82f37c13b8941db8",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 4695,
        "y": 288,
        "wires": []
    },
    {
        "id": "876ce689789b8b7d",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare message for HUITEM",
        "func": "let huitemData = msg.payload; // Existing payload\nlet RAKPALLETDataArray = global.get('responseData'); // New RAKPALLET data to be added\nnode.warn(RAKPALLETDataArray);\n\n// Check if huitemData is an array and has at least one element\nif (Array.isArray(huitemData) && huitemData.length > 0) {\n    // Loop through each object in the array\n    huitemData.forEach(item => {\n        // Check if RAKPALLET field exists\n        if (!item.hasOwnProperty('RAKPALLET')) {\n            // Add the RAKPALLET field and assign the first object from RAKPALLETDataArray to it\n            if (Array.isArray(RAKPALLETDataArray.data) && RAKPALLETDataArray.data.length > 0) {\n                item.RAKPALLET = RAKPALLETDataArray.data[0];\n            } else {\n                item.RAKPALLET = {}; // Fallback to an empty object if data is not an array or empty\n            }\n        } else if (Array.isArray(item.RAKPALLET) && item.RAKPALLET.length > 0) {\n            // If RAKPALLET already exists as an array, convert it to the first object\n            item.RAKPALLET = item.RAKPALLET[0];\n        }\n    });\n}\nnode.warn(huitemData);\n\n// Set the updated huitemData to msg.payload\nmsg.payload = huitemData;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4295,
        "y": 328,
        "wires": [
            [
                "0077d44cb11bf146"
            ]
        ]
    },
    {
        "id": "76d3e4dd38447417",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3740,
        "y": 360,
        "wires": [
            [
                "a831fe9a27b99627"
            ]
        ]
    },
    {
        "id": "84e4154bd3d70460",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3730,
        "y": 400,
        "wires": []
    },
    {
        "id": "0c42cf701d4e3d8f",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 4910,
        "y": 320,
        "wires": []
    },
    {
        "id": "0d1605aef7821eaa",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4920,
        "y": 360,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "bf46915a3ad71c57",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3480,
        "y": 248,
        "wires": []
    },
    {
        "id": "57b16c9cb7bd8121",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3730,
        "y": 240,
        "wires": []
    },
    {
        "id": "42d7ad2ddc767671",
        "type": "http request",
        "z": "b0648658.d6e708",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 4450,
        "y": 240,
        "wires": [
            [
                "2d70e0b073770ca4"
            ]
        ]
    },
    {
        "id": "590985109de36cb8",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 4430,
        "y": 200,
        "wires": []
    },
    {
        "id": "2d70e0b073770ca4",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Response",
        "func": "var counter = global.get('counter');\nvar tmp = global.get('tmp');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmp\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocess')+ \" ITEMS ***** \");\n    }\n}\nvar responsePayload = JSON.parse(msg.payload);\nglobal.set(\"responseData\", responsePayload);\n// delete msg.payload;\n// return msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4600,
        "y": 240,
        "wires": [
            [
                "83990be1c3428a4c"
            ]
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "83990be1c3428a4c",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 4730,
        "y": 240,
        "wires": []
    },
    {
        "id": "aea3174dd0f392a2",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3490,
        "y": 380,
        "wires": []
    },
    {
        "id": "a91a236144efffc3",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3160,
        "y": 240,
        "wires": [
            [
                "348807726f401152"
            ]
        ]
    },
    {
        "id": "108c66696325aab4",
        "type": "delay",
        "z": "b0648658.d6e708",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1280,
        "y": 1160,
        "wires": [
            [
                "ca0432a75f6bc2e2"
            ]
        ]
    },
    {
        "id": "e4370cae8759bb2e",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Backoffice Logs",
        "func": "var fs = require('fs');\nvar path = require('path');\n\n// Get logs folder and current date\n//var logsFolder = global.get('logsFolder');\nvar currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\n\n// Construct the directory path and filename\nvar directoryPath = path.join('/data/logs/TAGGING/', shortDate, 'out_bound');\nvar baseFilename = path.join(directoryPath, initialTime + '_failedToPost-Vizix');\nvar fileExtension = '.txt';\nvar sequenceNumber = 0;\n\n// Create the directory if it doesn't exist\nif (!fs.existsSync(directoryPath)) {\n    fs.mkdirSync(directoryPath, { recursive: true });\n}\n\n// Function to generate filename with sequence\nfunction generateFilename(baseFilename, sequenceNumber, fileExtension) {\n    return baseFilename + (sequenceNumber > 0 ? sequenceNumber : '') + fileExtension;\n}\n\n// Check file size and generate a new file if needed\nvar filename = generateFilename(baseFilename, sequenceNumber, fileExtension);\nwhile (fs.existsSync(filename) && fs.statSync(filename).size > 20 * 1024 * 1024) { // 20 MB size check\n    sequenceNumber++;\n    filename = generateFilename(baseFilename, sequenceNumber, fileExtension);\n}\n\nmsg.filename = filename;\n\n// Get the number of records\nvar results = msg.payload.length;\n\n// Log a warning message\nnode.warn(\"Tagging - Publishing \"+ results +\" records at Vizix\");\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 80,
        "wires": [
            [
                "d16989d484300775"
            ]
        ]
    },
    {
        "id": "d16989d484300775",
        "type": "file",
        "z": "b0648658.d6e708",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 2230,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "8fcfeb77166083ab",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "200",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1890,
        "y": 80,
        "wires": [
            [
                "e4370cae8759bb2e"
            ]
        ]
    },
    {
        "id": "26365409581edac8",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nvar zone = \"\";\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",message.length);\nglobal.set(\"tmp\",0);\nvar IMserver = global.get(\"IMserver\");\n\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar serialArrKeyHolder = [];\nvar palletArr = [];\nmessage.forEach(function(item){\n    var arrKey = \"{\\\"serialNumber\\\":\\\"\"+item.serialNumber+\"\\\",\"+\n                \"\\\"User\\\":\\\"\"+item.udfs.User.value+\"\\\",\"+\n                \"\\\"PalletType\\\":\\\"\"+item.type+\"\\\",\"+\n                \"\\\"UUIDMobile\\\":\\\"\"+item.udfs.UUIDMobile.value+\"\\\"\";\n    if(item.image){\n        arrKey+=\",\\\"Image\\\":\\\"\"+item.image+\"\\\"\";\n    }\n    if(item.udfs.location || item.udfs.zone){\n        if(item.udfs.location && (!item.udfs.zone || item.udfs.zone.value === \"\" )){\n            arrKey+=\",\\\"location\\\":\\\"\"+item.udfs.location.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the LOCATION value: \"+item.udfs.location.value);\n        }\n        if(item.udfs.zone && item.udfs.zone.value !== \"\" ){\n            arrKey+=\",\\\"zone\\\":\\\"\"+item.udfs.zone.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the ZONE value: \"+item.udfs.zone.value);\n        }\n    }\n    if(item.udfs.LocationDetails){\n        arrKey+=\",\\\"LocationDetails\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n        arrKey+=\",\\\"Plant\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(item.udfs.StorageLocation){\n        arrKey+=\",\\\"StorageLocation\\\":\\\"\"+item.udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(item.udfs.BinLocation){\n        arrKey+=\",\\\"BinLocation\\\":\\\"\"+item.udfs.BinLocation.value+\"\\\"\";\n    }\n    if(item.udfs.Lane){\n        arrKey+=\",\\\"Lane\\\":\\\"\"+item.udfs.Lane.value+\"\\\"\";\n    }\n    if(item.udfs.L5Location){\n        arrKey+=\",\\\"L5Location\\\":\\\"\"+item.udfs.L5Location.value+\"\\\"\";\n    }\n    arrKey+=\"}\";\n\n    var key = [arrKey];\n    //node.warn(key)\n    serialArrKeyHolder[key] = serialArrKeyHolder[key]||{};\n    var obj = serialArrKeyHolder[key];\n    if(Object.keys(obj).length === 0){\n        palletArr.push({obj});\n    }\n    obj.key = JSON.parse(key);\n    obj.materials  = obj.materials || [];\n        var arrMaterials = \"{\"+\n        \"\\\"Material\\\":\\\"\"+item.udfs.Material.value+\"\\\", \"+\n        \"\\\"Batch\\\":\\\"\"+item.udfs.Batch.value+\"\\\"\";\n    if(item.udfs.Qty){\n        arrMaterials+=\", \\\"Qty\\\":\\\"\"+item.udfs.Qty.value+\"\\\"\";\n    }\n    arrMaterials+=\"}\";\n    obj.materials.push(JSON.parse(arrMaterials));\n\n});\n\nfor(var i=0;i < palletArr.length;i++){\n    palletArr[i] = palletArr[i].obj\n}\n\nvar toUpdateP = [];\nvar toUpdateM = [];\nvar toStore = [];\nvar image = [];\nvar results = palletArr;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n//node.warn(results);\nfor(var j=0;j < results.length;j++){\n    msg.Process = \"Tagging\";\n    //SETTING UP HUITEM INFORMATION\n    for(var k=0;k < results[j].materials.length;k++){\n        var Material = results[j].materials[k].Material;\n        var Material_Master = Material;\n        \n        Material_Master = Material_Master.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n        Material_Master = Material_Master.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n        Material_Master = Material_Master.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n        Material_Master = Material_Master.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n        Material_Master = Material_Master.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n        Material_Master = Material_Master.latinize(); //Removing diacritics\n        Material_Master = Material_Master.replace(/\\s/g, ''); //Removing spaces\n        \n        var hu = k+1;\n        \n        var bodyM = \"{\"+\n            \"\\\"thingTypeCode\\\":\\\"HUITEM\\\",\"+\n             \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"_\" +  results[j].materials[k].Batch + \"_\" + Material_Master + \"\\\",\"+\n            \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n            \"\\\"Production_Date\\\":\"+ currentTime + \",\"+\n            \"\\\"source\\\":\\\"FLOW_Tagging\\\",\"+\n            \"\\\"Material_Code\\\":\\\"\"+ Material + \"\\\",\"+\n            \"\\\"Material_Master\\\":\\\"\"+ Material_Master + \"\\\",\"+\n            \"\\\"name\\\":\\\"\"+ results[j].key.serialNumber + \"_\" +  results[j].materials[k].Batch + \"_\" + Material_Master + \"\\\",\"+\n            \"\\\"Batch\\\":\\\"\"+ results[j].materials[k].Batch + \"\\\",\"+\n            \"\\\"huitem\\\":\\\"\"+ pad(hu,6) + \"\\\"\";\n        if(results[j].materials[k].Qty){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            bodyM+=\"\\\"Qty\\\":\\\"\"+results[j].materials[k].Qty+\"\\\",\";\n            //****************** TEMPORARILY REMOVING THE RETAGGING PROCESS - 30/06/2021\n            //msg.Process = \"reTagging\";\n        }\n        if (results[j].key.location) {\n        var locationArray = results[j].key.location.split(';').map(Number).slice(0, 2);\n        bodyM[\"location\"] = {\n            \"type\": \"Point\",\n            \"coordinates\": locationArray\n        };\n        }\n        if(results[j].key.zone && results[j].key.zone !== \"\"){\n                zone = results[j].key.zone;\n                zone = zone.replace(/[&]/g, \"\");\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n            }\n        if(results[j].key.LocationDetails){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            //node.warn(\"setting LocationDetails: \"+results[j].key.LocationDetails)\n            bodyM+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n            bodyM+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n        }\n        if(results[j].key.StorageLocation){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n           }\n           //node.warn(\"setting StorageLocation: \"+results[j].key.StorageLocation)\n            bodyM+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n        }\n        if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n        }\n        bodyM+=\"\\\"Process\\\":\\\"\"+msg.Process+\"\\\"}\";\n        node.warn(bodyM);\n        toUpdateM.push(JSON.parse(bodyM));\n    }\n    \n    if(results[j].key.Image){\n        toStore[0] = results[j].key.Image;\n        toStore[1] = results[j].key.serialNumber;\n        image.push(toStore);\n    }\n    \n    //SETTING UP PALLET INFORMATION\n    var bodyP = \"{\"+\n        \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\"+\n        \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n        \"\\\"TaggingDate\\\":\"+ currentTime + \",\"+\n        \"\\\"ProcessTime\\\":\"+ currentTime + \",\"+\n        \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n        \"\\\"PalletType\\\":\\\"\"+ results[j].key.PalletType + \"\\\",\"+\n        \"\\\"source\\\":\\\"MOBILE_Tagging\\\",\"+\n        \"\\\"name\\\":\\\"\"+results[j].key.serialNumber+ \"\\\",\"+\n        \"\\\"facility\\\":\\\"RAKHQ\\\",\"+\n        \"\\\"Status\\\":\\\"Active\\\",\"+\n        \"\\\"User\\\":\\\"\"+ results[j].key.User + \"\\\",\"+\n        \"\\\"UUIDMobile\\\":\\\"\"+ results[j].key.UUIDMobile + \"\\\",\"+\n        \"\\\"Process\\\":\\\"\"+msg.Process+\"\\\"\";\n    if(results[j].key.Image){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"Image\\\":\\\"\"+IMserver+\"/\"+results[j].key.serialNumber+\"/pallet_\"+results[j].key.serialNumber+\".png\\\"\";\n    }\n    if(results[j].key.location){\n            var locationArray = results[j].key.location.split(';').map(Number).slice(0, 2);\n     bodyP[\"location\"] = {\n         \"type\": \"Point\",\n         \"coordinates\": locationArray\n     };\n    }\n    if(results[j].key.zone && results[j].key.zone !== \"\"){\n            zone = results[j].key.zone;\n            zone = zone.replace(/[&]/g, \"\");\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n        }\n    if(results[j].key.LocationDetails){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n        bodyP+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n    }\n    if(results[j].key.StorageLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n    }\n    if(results[j].key.BinLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"BinLocation\\\":\\\"\"+results[j].key.BinLocation+\"\\\"\";\n    }\n    if(results[j].key.Lane){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"Lane\\\":\\\"\"+results[j].key.Lane+\"\\\"\";\n    }\n    if(results[j].key.L5Location){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"L5Location\\\":\\\"\"+results[j].key.L5Location+\"\\\"\";\n    }\n    bodyP+=\"}\";\n    \n    toUpdateP.push(JSON.parse(bodyP));\n\n}\n\n//node.warn(\"String of messages To Update: \" + toUpdateP);\nmsg.image=image;\nnode.warn(toUpdateP)\nmsg.payloadP=toUpdateP;\nmsg.payloadM=toUpdateM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "6216b9658759fa35",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Vizix_Failed Logs",
        "func": "var fs = require('fs');\nvar path = require('path');\n\n// Get logs folder and current date\n//var logsFolder = global.get('logsFolder');\nvar currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\n\n// Construct the directory path and filename\nvar directoryPath = path.join('/data/logs/TAGGING/', shortDate, 'out_bound');\nvar baseFilename = path.join(directoryPath, initialTime + '_failedToPost-Vizix');\nvar fileExtension = '.txt';\nvar sequenceNumber = 0;\n\n// Create the directory if it doesn't exist\nif (!fs.existsSync(directoryPath)) {\n    fs.mkdirSync(directoryPath, { recursive: true });\n}\n\n// Function to generate filename with sequence\nfunction generateFilename(baseFilename, sequenceNumber, fileExtension) {\n    return baseFilename + (sequenceNumber > 0 ? sequenceNumber : '') + fileExtension;\n}\n\n// Check file size and generate a new file if needed\nvar filename = generateFilename(baseFilename, sequenceNumber, fileExtension);\nwhile (fs.existsSync(filename) && fs.statSync(filename).size > 20 * 1024 * 1024) { // 20 MB size check\n    sequenceNumber++;\n    filename = generateFilename(baseFilename, sequenceNumber, fileExtension);\n}\n\nmsg.filename = filename;\n\n// Get the number of records\nvar results = msg.payload.length;\n\n// Log a warning message\nnode.warn(\"Tagging - Publishing \"+ results +\" records at Vizix\");\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3630,
        "y": 780,
        "wires": [
            [
                "3efdc3e053703211"
            ]
        ]
    },
    {
        "id": "3efdc3e053703211",
        "type": "file",
        "z": "b0648658.d6e708",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 3810,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "eb415abab0984a7e",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "201",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3470,
        "y": 780,
        "wires": [
            [
                "6216b9658759fa35"
            ]
        ]
    },
    {
        "id": "888109cf393a145f",
        "type": "function",
        "z": "b0648658.d6e708",
        "name": "Backoffice Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar basePath = '/data/logs/TAGGING/'+ shortDate + '/inbound/';\nvar baseFilename = initialTime + '.txt';\n\nvar maxFileSize = 1024 * 1024; // 1MB in bytes\nvar sequence = flow.get('sequence') || 1; // Get the current sequence number, default to 1\nvar currentSize = flow.get('currentSize') || 0; // Get the current file size tracked, default to 0\n\n// Generate the filename based on the current sequence\nvar filename = basePath + initialTime + '_' + sequence + '.txt';\n\n// Assuming msg.payload contains the data to write, update the currentSize\nvar dataSize = Buffer.byteLength(msg.payload, 'utf8');\ncurrentSize += dataSize;\n\n// Check if the currentSize exceeds 1MB\nif (currentSize > maxFileSize) {\n    sequence++; // Increment the sequence number\n    filename = basePath + initialTime + '_' + sequence + '.txt'; // Generate new filename\n    currentSize = dataSize; // Reset the size for the new file\n}\n\n// Store the updated sequence and size in flow context\nflow.set('sequence', sequence);\nflow.set('currentSize', currentSize);\n\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1240,
        "wires": [
            [
                "5f7d6fb22819eff8",
                "70a2b1ae615f9bea"
            ]
        ]
    },
    {
        "id": "5f7d6fb22819eff8",
        "type": "file",
        "z": "b0648658.d6e708",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 3710,
        "y": 1240,
        "wires": [
            [
                "68e3945f534e0ec0"
            ]
        ]
    },
    {
        "id": "5cb9c890481ac2e9",
        "type": "switch",
        "z": "b0648658.d6e708",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3370,
        "y": 1240,
        "wires": [
            [
                "888109cf393a145f"
            ]
        ]
    },
    {
        "id": "70a2b1ae615f9bea",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3690,
        "y": 1300,
        "wires": []
    },
    {
        "id": "68e3945f534e0ec0",
        "type": "debug",
        "z": "b0648658.d6e708",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 3890,
        "y": 1220,
        "wires": []
    },
    {
        "id": "fe6cdb09.f4b208",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Validator",
        "func": "// PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n// var fields = msg.req.files;\n// msg.fields = Object.keys(fields);\n\n\nvar results;\ntry {\n    results = JSON.parse(msg.payload.body);\n} catch (error) {\n    node.warn(\"Invalid JSON in payload body\");\n    msg.payload = {\"response\": \"Bad request. Invalid JSON\"};\n    msg.statusCode = 400;\n    return [msg, null];\n}\n\nif (!Array.isArray(results)) {\n    node.warn(\"Payload body should be an array\");\n    msg.payload = {\"response\": \"Bad request. Payload body should be an array\"};\n    msg.statusCode = 400;\n    return [msg, null];\n}\n\n// Checking if the api_key is correct, otherwise response is Unauthorized\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials.\");\n    msg.payload = {\"response\": \"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg, null];\n} else {\n    node.warn(\"Authorized Tagging transaction, proceeding...\");\n    \n    node.warn(results);\n\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    for (var j = 0; j < results.length; j++) {\n        var serialNumber = results[j].serialNumber;\n        var material = results[j]?.udfs?.Material?.value;\n\n        if (!serialNumber || typeof serialNumber !== 'string') {\n            msg.payload = {\"response\": \"Invalid QR code\"};\n            msg.statusCode = 400;\n            return [msg, null];\n        }\n\n        for (var i = 0; i < serialNumber.length; i++) {\n            if (splChars.indexOf(serialNumber.charAt(i)) !== -1) {\n                msg.payload = {\"response\": \"Invalid QR code\"};\n                msg.statusCode = 400;\n                return [msg, null];\n            }\n        }\n\n        if (serialNumber.length < 18) {\n            msg.payload = {\"response\": \"Invalid QR code\"};\n            msg.statusCode = 400;\n            return [msg, null];\n        }\n\n        if (!material || material.length > 18) {\n            msg.payload = {\"response\": \"Bad request. Invalid MATERIAL code.\"};\n            msg.statusCode = 400;\n            return [msg, null];\n        }\n    }\n\n    msg.payloadOriginal = results;\n    msg.payload = results;\n    msg.destinationFilename = results[0].serialNumber + \"/pallet_\" + results[0].serialNumber + \".png\";\n    msg.newDirectory = \"/transfer/\" + results[0].serialNumber;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 200,
        "wires": [
            [
                "56b6a930.b225a8"
            ]
        ]
    },
    {
        "id": "d1719e61.eaa5b",
        "type": "httpInMultipart",
        "z": "e35f4854.7d04a8",
        "name": "TAGGINGM",
        "url": "/TAGGINGM",
        "method": "post",
        "fields": "[{ \"name\":\"image\"}]",
        "swaggerDoc": "",
        "x": 170,
        "y": 206,
        "wires": [
            [
                "5f1f0954.ab9fa8",
                "b45ed575.fb4058"
            ]
        ]
    },
    {
        "id": "56b6a930.b225a8",
        "type": "switch",
        "z": "e35f4854.7d04a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "710f2dee.1fa364"
            ],
            [
                "710f2dee.1fa364"
            ],
            [
                "3ceee9dc.af35d6",
                "94b4080f.95d0f8"
            ]
        ]
    },
    {
        "id": "710f2dee.1fa364",
        "type": "http response",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 1190,
        "y": 120,
        "wires": []
    },
    {
        "id": "679dc280.e10d6c",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nvar zone = \"\";\nglobal.set(\"countertm1\",counterg);\nglobal.set(\"toprocesstm1\",message.length);\nglobal.set(\"tmptm1\",0);\nvar IMserver = global.get(\"IMserver\");\n\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar serialArrKeyHolder = [];\nvar palletArr = [];\nmessage.forEach(function(item){\n    var arrKey = \"{\\\"serialNumber\\\":\\\"\"+item.serialNumber+\"\\\",\"+\n                \"\\\"User\\\":\\\"\"+item.udfs.User.value+\"\\\",\"+\n                \"\\\"PalletType\\\":\\\"\"+item.type+\"\\\",\"+\n                \"\\\"UUIDMobile\\\":\\\"\"+item.udfs.UUIDMobile.value+\"\\\"\";\n    //if(item.image){\n    //    arrKey+=\",\\\"Image\\\":\\\"\"+item.image+\"\\\"\";\n    //}\n    if(item.udfs.location || item.udfs.zone){\n        if(item.udfs.location && (!item.udfs.zone || item.udfs.zone.value === \"\" )){\n            arrKey+=\",\\\"location\\\":\\\"\"+item.udfs.location.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the LOCATION value: \"+item.udfs.location.value);\n        }\n        if(item.udfs.zone && item.udfs.zone.value !== \"\" ){\n            arrKey+=\",\\\"zone\\\":\\\"\"+item.udfs.zone.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the ZONE value: \"+item.udfs.zone.value);\n        }\n    }\n    if(item.udfs.LocationDetails){\n        arrKey+=\",\\\"LocationDetails\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n        arrKey+=\",\\\"Plant\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(item.udfs.StorageLocation){\n        arrKey+=\",\\\"StorageLocation\\\":\\\"\"+item.udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(item.udfs.BinLocation){\n        arrKey+=\",\\\"BinLocation\\\":\\\"\"+item.udfs.BinLocation.value+\"\\\"\";\n    }\n    if(item.udfs.Lane){\n        arrKey+=\",\\\"Lane\\\":\\\"\"+item.udfs.Lane.value+\"\\\"\";\n    }\n    if(item.udfs.L5Location){\n        arrKey+=\",\\\"L5Location\\\":\\\"\"+item.udfs.L5Location.value+\"\\\"\";\n    }\n    arrKey+=\"}\";\n\n    var key = [arrKey];\n    //node.warn(key)\n    serialArrKeyHolder[key] = serialArrKeyHolder[key]||{};\n    var obj = serialArrKeyHolder[key];\n    if(Object.keys(obj).length === 0){\n        palletArr.push({obj});\n    }\n    obj.key = JSON.parse(key);\n    obj.materials  = obj.materials || [];\n        var arrMaterials = \"{\"+\n        \"\\\"Material\\\":\\\"\"+item.udfs.Material.value+\"\\\", \"+\n        \"\\\"Batch\\\":\\\"\"+item.udfs.Batch.value+\"\\\"\";\n    if(item.udfs.Qty){\n        arrMaterials+=\", \\\"Qty\\\":\\\"\"+item.udfs.Qty.value+\"\\\"\";\n    }\n    arrMaterials+=\"}\";\n    obj.materials.push(JSON.parse(arrMaterials));\n\n});\n\nfor(var i=0;i < palletArr.length;i++){\n    palletArr[i] = palletArr[i].obj\n}\n\nvar toUpdateP = [];\nvar toUpdateM = [];\nvar toStore = [];\nvar image = [];\nvar results = palletArr;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n//node.warn(results);\nfor(var j=0;j < results.length;j++){\n    msg.Process = \"Tagging\";\n    //SETTING UP HUITEM INFORMATION\n    for(var k=0;k < results[j].materials.length;k++){\n        var Material = results[j].materials[k].Material;\n        var Material_Master = Material;\n        \n        Material_Master = Material_Master.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n        Material_Master = Material_Master.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n        Material_Master = Material_Master.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n        Material_Master = Material_Master.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n        Material_Master = Material_Master.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n        Material_Master = Material_Master.latinize(); //Removing diacritics\n        Material_Master = Material_Master.replace(/\\s/g, ''); //Removing spaces\n        \n        var hu = k+1;\n        \n        var bodyM = \"{\"+\n            \"\\\"thingTypeCode\\\":\\\"HUITEM\\\",\"+\n            \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"_\" +  results[j].materials[k].Batch + \"_\" + Material_Master + \"\\\",\"+\n            \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n            \"\\\"Production_Date\\\":\"+ currentTime + \",\"+\n            \"\\\"source\\\":\\\"FLOW_Tagging\\\",\"+\n            // \"\\\"RAKPALLET\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n            \"\\\"Material_Code\\\":\\\"\"+ Material + \"\\\",\"+\n            \"\\\"Material_Master\\\":\\\"\"+ Material_Master + \"\\\",\"+\n            \"\\\"Batch\\\":\\\"\"+ results[j].materials[k].Batch + \"\\\",\"+\n            \"\\\"huitem\\\":\\\"\"+ pad(hu,6) + \"\\\"\";\n        if(results[j].materials[k].Qty){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            bodyM+=\"\\\"Qty\\\":\\\"\"+results[j].materials[k].Qty+\"\\\",\";\n            //****************** TEMPORARILY REMOVING THE RETAGGING PROCESS - 30/06/2021\n            //msg.Process = \"reTagging\";\n        }\n        if(results[j].key.location || results[j].key.zone){\n            if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n            }\n            if(results[j].key.zone && results[j].key.zone !== \"\"){\n                zone = results[j].key.zone;\n                zone = zone.replace(/[&]/g, \"\");\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n            }\n        }\n        if(results[j].key.LocationDetails){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            //node.warn(\"setting LocationDetails: \"+results[j].key.LocationDetails)\n            bodyM+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n            bodyM+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n        }\n        if(results[j].key.StorageLocation){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n           }\n           //node.warn(\"setting StorageLocation: \"+results[j].key.StorageLocation)\n            bodyM+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n        }\n        if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n        }\n        bodyM+=\"\\\"Process\\\":\\\"\"+msg.Process+\"\\\"}\";\n        toUpdateM.push(JSON.parse(bodyM));\n    }\n    \n    //if(results[j].key.Image){\n    //    toStore[0] = results[j].key.Image;\n    //    toStore[1] = results[j].key.serialNumber;\n    //    image.push(toStore);\n    //}\n    \n    //SETTING UP PALLET INFORMATION\n    var bodyP = \"{\"+\n        \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\"+\n        \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n        \"\\\"TaggingDate\\\":\"+ currentTime + \",\"+\n        \"\\\"ProcessTime\\\":\"+ currentTime + \",\"+\n        \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n        \"\\\"PalletType\\\":\\\"\"+ results[j].key.PalletType + \"\\\",\"+\n        \"\\\"source\\\":\\\"MOBILE_Tagging\\\",\"+\n        \"\\\"facility\\\":\\\"RAKHQ\\\",\"+\n        \"\\\"Status\\\":\\\"Active\\\",\"+\n        \"\\\"User\\\":\\\"\"+ results[j].key.User + \"\\\",\"+\n        \"\\\"UUIDMobile\\\":\\\"\"+ results[j].key.UUIDMobile + \"\\\",\"+\n        \"\\\"Process\\\":\\\"\"+msg.Process+\"\\\",\"+\n        \"\\\"Image\\\":\\\"\"+IMserver+\"/\"+results[j].key.serialNumber+\"/pallet_\"+results[j].key.serialNumber+\".png\\\"\";\n\n    if(results[j].key.location || results[j].key.zone){\n        if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n        }\n        if(results[j].key.zone && results[j].key.zone !== \"\"){\n            zone = results[j].key.zone;\n            zone = zone.replace(/[&]/g, \"\");\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n        }\n    }\n    if(results[j].key.LocationDetails){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n        bodyP+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n    }\n    if(results[j].key.StorageLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n    }\n    if(results[j].key.BinLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"BinLocation\\\":\\\"\"+results[j].key.BinLocation+\"\\\"\";\n    }\n    if(results[j].key.Lane){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"Lane\\\":\\\"\"+results[j].key.Lane+\"\\\"\";\n    }\n    if(results[j].key.L5Location){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"L5Location\\\":\\\"\"+results[j].key.L5Location+\"\\\"\";\n    }\n    bodyP+=\"}\";\n    \n    toUpdateP.push(JSON.parse(bodyP));\n\n}\n//node.warn(toUpdateP);\n\n//node.warn(\"String of messages To Update: \" + toUpdateP);\n//msg.image=image;\nmsg.payloadP=toUpdateP;\nmsg.payloadM=toUpdateM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 220,
        "wires": [
            [
                "ad97be0.fee534",
                "59404430.eb560c"
            ]
        ]
    },
    {
        "id": "e22b9fe9.90cc",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2110,
        "y": 180,
        "wires": [
            [
                "cd22e091.5cdb5"
            ]
        ]
    },
    {
        "id": "cd22e091.5cdb5",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://64.227.150.106:5008/core/thing-type/RAKPALLET/bulk/serial\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 180,
        "wires": [
            [
                "ea8e1fea.aad88"
            ]
        ]
    },
    {
        "id": "ea8e1fea.aad88",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 2310,
        "y": 100,
        "wires": [
            [
                "1481c73.3f70b39",
                "1ffddf8.2971721"
            ]
        ]
    },
    {
        "id": "1481c73.3f70b39",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Response",
        "func": "var counter = global.get('countertm1');\nvar tmp = global.get('tmptm1');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmptm1\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocesstm1')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 60,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "fb220421.cdc2a8",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1940,
        "y": 180,
        "wires": [
            [
                "e22b9fe9.90cc"
            ]
        ]
    },
    {
        "id": "1ffddf8.2971721",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2450,
        "y": 100,
        "wires": []
    },
    {
        "id": "ad97be0.fee534",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadP",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 180,
        "wires": [
            [
                "fb220421.cdc2a8"
            ]
        ]
    },
    {
        "id": "e390856b.460ba8",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "HUITEM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadM",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1775,
        "y": 220,
        "wires": [
            [
                "ff94ec1c.7dae1"
            ]
        ]
    },
    {
        "id": "ff94ec1c.7dae1",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1939,
        "y": 220,
        "wires": [
            [
                "e71407f6.39ad68"
            ]
        ]
    },
    {
        "id": "e71407f6.39ad68",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "2s",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2089,
        "y": 220,
        "wires": [
            [
                "4e2382ad.f8a6ec"
            ]
        ]
    },
    {
        "id": "4e2382ad.f8a6ec",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://64.227.150.106:5008/core/thing-type/HUITEM/bulk/serial\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2292,
        "y": 220,
        "wires": [
            [
                "c93af899.b39508"
            ]
        ]
    },
    {
        "id": "c93af899.b39508",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 2310,
        "y": 300,
        "wires": [
            [
                "8858d716.02a388"
            ]
        ]
    },
    {
        "id": "8858d716.02a388",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2450,
        "y": 300,
        "wires": []
    },
    {
        "id": "59404430.eb560c",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1760,
        "y": 260,
        "wires": [
            [
                "e390856b.460ba8"
            ]
        ]
    },
    {
        "id": "3ceee9dc.af35d6",
        "type": "subflow:ee8909d.0fb5ef8",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 1240,
        "y": 220,
        "wires": [
            [
                "679dc280.e10d6c",
                "e8e307f.735f9f8"
            ]
        ]
    },
    {
        "id": "bfba57b4.69d6a8",
        "type": "link in",
        "z": "e35f4854.7d04a8",
        "name": "TMP_in",
        "links": [
            "f445bee4.bd466"
        ],
        "x": 1615,
        "y": 140,
        "wires": [
            [
                "ad97be0.fee534",
                "59404430.eb560c"
            ]
        ]
    },
    {
        "id": "365bd56a.e7f92a",
        "type": "fs-ops-move",
        "z": "e35f4854.7d04a8",
        "name": "move",
        "sourcePath": "/tmp",
        "sourcePathType": "str",
        "sourceFilename": "localFilename",
        "sourceFilenameType": "msg",
        "destPath": "/transfer",
        "destPathType": "str",
        "destFilename": "destinationFilename",
        "destFilenameType": "msg",
        "link": false,
        "x": 1370,
        "y": 280,
        "wires": [
            [
                "a57ad659.90a618"
            ]
        ]
    },
    {
        "id": "a57ad659.90a618",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1490,
        "y": 280,
        "wires": []
    },
    {
        "id": "94b4080f.95d0f8",
        "type": "fs-ops-mkdir",
        "z": "e35f4854.7d04a8",
        "name": "",
        "path": "",
        "pathType": "str",
        "dirname": "newDirectory",
        "dirnameType": "msg",
        "recursive": false,
        "mode": "777",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 1220,
        "y": 280,
        "wires": [
            [
                "365bd56a.e7f92a"
            ]
        ]
    },
    {
        "id": "e8e307f.735f9f8",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1430,
        "y": 160,
        "wires": []
    },
    {
        "id": "fb941cc3.613f3",
        "type": "file",
        "z": "e35f4854.7d04a8",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 610,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5f1f0954.ab9fa8",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Inbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/RAK/TAGGING-NEW/'+ shortDate + '/inbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 120,
        "wires": [
            [
                "fb941cc3.613f3",
                "e20e156.492c3e8"
            ]
        ]
    },
    {
        "id": "e20e156.492c3e8",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "bd1513d5.9f379",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Validator",
        "func": "// PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n// var fields = msg.req.files;\n// msg.fields = Object.keys(fields);\n\nvar results;\ntry {\n    results = JSON.parse(msg.payload.body);\n} catch (error) {\n    node.warn(\"Invalid JSON in payload body\");\n    msg.payload = {\"response\": \"Bad request. Invalid JSON\"};\n    msg.statusCode = 400;\n    return [msg, null];\n}\n\nif (!Array.isArray(results)) {\n    node.warn(\"Payload body should be an array\");\n    msg.payload = {\"response\": \"Bad request. Payload body should be an array\"};\n    msg.statusCode = 400;\n    return [msg, null];\n}\n\n// Checking if the api_key is correct, otherwise response is Unauthorized\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials.\");\n    msg.payload = {\"response\": \"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg, null];\n} else {\n    node.warn(\"Authorized Tagging transaction, proceeding...\");\n    \n    node.warn(results);\n\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    for (var j = 0; j < results.length; j++) {\n        var serialNumber = results[j].serialNumber;\n        var material = results[j]?.udfs?.Material?.value;\n\n        if (!serialNumber || typeof serialNumber !== 'string') {\n            msg.payload = {\"response\": \"Invalid QR code\"};\n            msg.statusCode = 400;\n            return [msg, null];\n        }\n\n        for (var i = 0; i < serialNumber.length; i++) {\n            if (splChars.indexOf(serialNumber.charAt(i)) !== -1) {\n                msg.payload = {\"response\": \"Invalid QR code\"};\n                msg.statusCode = 400;\n                return [msg, null];\n            }\n        }\n\n        if (serialNumber.length < 18) {\n            msg.payload = {\"response\": \"Invalid QR code\"};\n            msg.statusCode = 400;\n            return [msg, null];\n        }\n\n        if (!material || material.length > 18) {\n            msg.payload = {\"response\": \"Bad request. Invalid MATERIAL code.\"};\n            msg.statusCode = 400;\n            return [msg, null];\n        }\n    }\n\n    msg.payloadOriginal = results;\n    msg.payload = results;\n    msg.destinationFilename = results[0].serialNumber + \"/pallet_\" + results[0].serialNumber + \".png\";\n    msg.newDirectory = \"/transfer/\" + results[0].serialNumber;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 600,
        "wires": [
            [
                "8313b0a7.0f002"
            ]
        ]
    },
    {
        "id": "8313b0a7.0f002",
        "type": "switch",
        "z": "e35f4854.7d04a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1030,
        "y": 600,
        "wires": [
            [
                "cbeeb1ec.042cc"
            ],
            [
                "cbeeb1ec.042cc"
            ],
            [
                "959ac964.a94228",
                "d9a3e401.f21b28"
            ]
        ]
    },
    {
        "id": "cbeeb1ec.042cc",
        "type": "http response",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 1190,
        "y": 520,
        "wires": []
    },
    {
        "id": "d812f722.079148",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nvar zone = \"\";\nglobal.set(\"countertm2\",counterg);\nglobal.set(\"toprocesstm2\",message.length);\nglobal.set(\"tmptm2\",0);\nvar IMserver = global.get(\"IMserver\");\n\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar serialArrKeyHolder = [];\nvar palletArr = [];\nmessage.forEach(function(item){\n    var arrKey = \"{\\\"serialNumber\\\":\\\"\"+item.serialNumber+\"\\\",\"+\n                \"\\\"User\\\":\\\"\"+item.udfs.User.value+\"\\\",\"+\n                \"\\\"PalletType\\\":\\\"\"+item.type+\"\\\",\"+\n                \"\\\"UUIDMobile\\\":\\\"\"+item.udfs.UUIDMobile.value+\"\\\"\";\n    //if(item.image){\n    //    arrKey+=\",\\\"Image\\\":\\\"\"+item.image+\"\\\"\";\n    //}\n    if(item.udfs.location || item.udfs.zone){\n        if(item.udfs.location && (!item.udfs.zone || item.udfs.zone.value === \"\" )){\n            arrKey+=\",\\\"location\\\":\\\"\"+item.udfs.location.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the LOCATION value: \"+item.udfs.location.value);\n        }\n        if(item.udfs.zone && item.udfs.zone.value !== \"\" ){\n            arrKey+=\",\\\"zone\\\":\\\"\"+item.udfs.zone.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the ZONE value: \"+item.udfs.zone.value);\n        }\n    }\n    if(item.udfs.LocationDetails){\n        arrKey+=\",\\\"LocationDetails\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n        arrKey+=\",\\\"Plant\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(item.udfs.StorageLocation){\n        arrKey+=\",\\\"StorageLocation\\\":\\\"\"+item.udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(item.udfs.BinLocation){\n        arrKey+=\",\\\"BinLocation\\\":\\\"\"+item.udfs.BinLocation.value+\"\\\"\";\n    }\n    if(item.udfs.Lane){\n        arrKey+=\",\\\"Lane\\\":\\\"\"+item.udfs.Lane.value+\"\\\"\";\n    }\n    if(item.udfs.L5Location){\n        arrKey+=\",\\\"L5Location\\\":\\\"\"+item.udfs.L5Location.value+\"\\\"\";\n    }\n    arrKey+=\"}\";\n\n    var key = [arrKey];\n    //node.warn(key)\n    serialArrKeyHolder[key] = serialArrKeyHolder[key]||{};\n    var obj = serialArrKeyHolder[key];\n    if(Object.keys(obj).length === 0){\n        palletArr.push({obj});\n    }\n    obj.key = JSON.parse(key);\n    obj.materials  = obj.materials || [];\n        var arrMaterials = \"{\"+\n        \"\\\"Material\\\":\\\"\"+item.udfs.Material.value+\"\\\", \"+\n        \"\\\"Batch\\\":\\\"\"+item.udfs.Batch.value+\"\\\"\";\n    if(item.udfs.Qty){\n        arrMaterials+=\", \\\"Qty\\\":\\\"\"+item.udfs.Qty.value+\"\\\"\";\n    }\n    arrMaterials+=\"}\";\n    obj.materials.push(JSON.parse(arrMaterials));\n\n});\n\nfor(var i=0;i < palletArr.length;i++){\n    palletArr[i] = palletArr[i].obj\n}\n\nvar toUpdateP = [];\nvar toUpdateM = [];\nvar toStore = [];\nvar image = [];\nvar results = palletArr;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n//node.warn(results);\nfor(var j=0;j < results.length;j++){\n    msg.Process = \"Tagging\";\n    //SETTING UP HUITEM INFORMATION\n    for(var k=0;k < results[j].materials.length;k++){\n        var Material = results[j].materials[k].Material;\n        var Material_Master = Material;\n        \n        Material_Master = Material_Master.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n        Material_Master = Material_Master.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n        Material_Master = Material_Master.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n        Material_Master = Material_Master.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n        Material_Master = Material_Master.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n        Material_Master = Material_Master.latinize(); //Removing diacritics\n        Material_Master = Material_Master.replace(/\\s/g, ''); //Removing spaces\n        \n        var hu = k+1;\n        \n        var bodyM = \"{\"+\n            \"\\\"thingTypeCode\\\":\\\"HUITEM\\\",\"+\n            \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"_\" +  results[j].materials[k].Batch + \"_\" + Material_Master + \"\\\",\"+\n            \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n            \"\\\"Production_Date\\\":\"+ currentTime + \",\"+\n            \"\\\"source\\\":\\\"FLOW_Tagging\\\",\"+\n            // \"\\\"RAKPALLET\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n            \"\\\"Material_Code\\\":\\\"\"+ Material + \"\\\",\"+\n            \"\\\"Material_Master\\\":\\\"\"+ Material_Master + \"\\\",\"+\n            \"\\\"Batch\\\":\\\"\"+ results[j].materials[k].Batch + \"\\\",\"+\n            \"\\\"huitem\\\":\\\"\"+ pad(hu,6) + \"\\\"\";\n        if(results[j].materials[k].Qty){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            bodyM+=\"\\\"Qty\\\":\\\"\"+results[j].materials[k].Qty+\"\\\",\";\n            //****************** TEMPORARILY REMOVING THE RETAGGING PROCESS - 30/06/2021\n            //msg.Process = \"reTagging\";\n        }\n        if(results[j].key.location || results[j].key.zone){\n            if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n            }\n            if(results[j].key.zone && results[j].key.zone !== \"\"){\n                zone = results[j].key.zone;\n                zone = zone.replace(/[&]/g, \"\");\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n            }\n        }\n        if(results[j].key.LocationDetails){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            //node.warn(\"setting LocationDetails: \"+results[j].key.LocationDetails)\n            bodyM+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n            bodyM+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n        }\n        if(results[j].key.StorageLocation){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n           }\n           //node.warn(\"setting StorageLocation: \"+results[j].key.StorageLocation)\n            bodyM+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n        }\n        if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n        }\n        bodyM+=\"\\\"Process\\\":\\\"\"+msg.Process+\"\\\"}\";\n        toUpdateM.push(JSON.parse(bodyM));\n    }\n    \n    //if(results[j].key.Image){\n    //    toStore[0] = results[j].key.Image;\n    //    toStore[1] = results[j].key.serialNumber;\n    //    image.push(toStore);\n    //}\n    \n    //SETTING UP PALLET INFORMATION\n    var bodyP = \"{\"+\n        \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\"+\n        \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n        \"\\\"TaggingDate\\\":\"+ currentTime + \",\"+\n        \"\\\"ProcessTime\\\":\"+ currentTime + \",\"+\n        \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n        \"\\\"PalletType\\\":\\\"\"+ results[j].key.PalletType + \"\\\",\"+\n        \"\\\"source\\\":\\\"MOBILE_Tagging\\\",\"+\n        \"\\\"facility\\\":\\\"RAKHQ\\\",\"+\n        \"\\\"Status\\\":\\\"Active\\\",\"+\n        \"\\\"User\\\":\\\"\"+ results[j].key.User + \"\\\",\"+\n        \"\\\"UUIDMobile\\\":\\\"\"+ results[j].key.UUIDMobile + \"\\\",\"+\n        \"\\\"Process\\\":\\\"\"+msg.Process+\"\\\",\"+\n        \"\\\"Image\\\":\\\"\"+IMserver+\"/\"+results[j].key.serialNumber+\"/pallet_\"+results[j].key.serialNumber+\".png\\\"\";\n\n    if(results[j].key.location || results[j].key.zone){\n        if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n        }\n        if(results[j].key.zone && results[j].key.zone !== \"\"){\n            zone = results[j].key.zone;\n            zone = zone.replace(/[&]/g, \"\");\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n        }\n    }\n    if(results[j].key.LocationDetails){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n        bodyP+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n    }\n    if(results[j].key.StorageLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n    }\n    if(results[j].key.BinLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"BinLocation\\\":\\\"\"+results[j].key.BinLocation+\"\\\"\";\n    }\n    if(results[j].key.Lane){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"Lane\\\":\\\"\"+results[j].key.Lane+\"\\\"\";\n    }\n    if(results[j].key.L5Location){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"L5Location\\\":\\\"\"+results[j].key.L5Location+\"\\\"\";\n    }\n    bodyP+=\"}\";\n    \n    toUpdateP.push(JSON.parse(bodyP));\n\n}\n//node.warn(toUpdateP);\n\n//node.warn(\"String of messages To Update: \" + toUpdateP);\n//msg.image=image;\nmsg.payloadP=toUpdateP;\nmsg.payloadM=toUpdateM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 620,
        "wires": [
            [
                "e7d3c932.be3ed8",
                "f3a6830f.6d978"
            ]
        ]
    },
    {
        "id": "68df8ef6.dea45",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2110,
        "y": 580,
        "wires": [
            [
                "79b296f.a476568"
            ]
        ]
    },
    {
        "id": "79b296f.a476568",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://64.227.150.106:5008/core/thing-type/RAKPALLET/bulk/serial\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 580,
        "wires": [
            [
                "839ca921.3c5a08"
            ]
        ]
    },
    {
        "id": "839ca921.3c5a08",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 2310,
        "y": 500,
        "wires": [
            [
                "420d59ac.518618",
                "116f627a.09f15e"
            ]
        ]
    },
    {
        "id": "420d59ac.518618",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Response",
        "func": "var counter = global.get('countertm2');\nvar tmp = global.get('tmptm2');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmptm2\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocesstm2')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 460,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "6fef9d5d.8c2a74",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1940,
        "y": 580,
        "wires": [
            [
                "68df8ef6.dea45"
            ]
        ]
    },
    {
        "id": "116f627a.09f15e",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2450,
        "y": 500,
        "wires": []
    },
    {
        "id": "e7d3c932.be3ed8",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadP",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 580,
        "wires": [
            [
                "6fef9d5d.8c2a74"
            ]
        ]
    },
    {
        "id": "6c7adb36.1f9b54",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "HUITEM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadM",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1775,
        "y": 620,
        "wires": [
            [
                "ea3f7cc3.42169"
            ]
        ]
    },
    {
        "id": "ea3f7cc3.42169",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1939,
        "y": 620,
        "wires": [
            [
                "efab90d3.ed3ce"
            ]
        ]
    },
    {
        "id": "efab90d3.ed3ce",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "2s",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2089,
        "y": 620,
        "wires": [
            [
                "cee3fb97.1f46e8"
            ]
        ]
    },
    {
        "id": "cee3fb97.1f46e8",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://64.227.150.106:5008/core/thing-type/HUITEM/bulk/serial\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2292,
        "y": 620,
        "wires": [
            [
                "a03511d8.80056"
            ]
        ]
    },
    {
        "id": "a03511d8.80056",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 2310,
        "y": 700,
        "wires": [
            [
                "d42337ed.cda908"
            ]
        ]
    },
    {
        "id": "d42337ed.cda908",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2450,
        "y": 700,
        "wires": []
    },
    {
        "id": "f3a6830f.6d978",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1760,
        "y": 660,
        "wires": [
            [
                "6c7adb36.1f9b54"
            ]
        ]
    },
    {
        "id": "959ac964.a94228",
        "type": "subflow:ee8909d.0fb5ef8",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 1240,
        "y": 620,
        "wires": [
            [
                "d812f722.079148",
                "6a278761.b52968"
            ]
        ]
    },
    {
        "id": "e6d34501.f7a558",
        "type": "link in",
        "z": "e35f4854.7d04a8",
        "name": "TMP_in",
        "links": [
            "f445bee4.bd466"
        ],
        "x": 1615,
        "y": 540,
        "wires": [
            [
                "e7d3c932.be3ed8",
                "f3a6830f.6d978"
            ]
        ]
    },
    {
        "id": "da4df152.2e3b6",
        "type": "fs-ops-move",
        "z": "e35f4854.7d04a8",
        "name": "move",
        "sourcePath": "/tmp",
        "sourcePathType": "str",
        "sourceFilename": "localFilename",
        "sourceFilenameType": "msg",
        "destPath": "/transfer",
        "destPathType": "str",
        "destFilename": "destinationFilename",
        "destFilenameType": "msg",
        "link": false,
        "x": 1370,
        "y": 680,
        "wires": [
            [
                "30ba680.270cf98"
            ]
        ]
    },
    {
        "id": "30ba680.270cf98",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1490,
        "y": 680,
        "wires": []
    },
    {
        "id": "d9a3e401.f21b28",
        "type": "fs-ops-mkdir",
        "z": "e35f4854.7d04a8",
        "name": "",
        "path": "",
        "pathType": "str",
        "dirname": "newDirectory",
        "dirnameType": "msg",
        "recursive": false,
        "mode": "777",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 1220,
        "y": 680,
        "wires": [
            [
                "da4df152.2e3b6"
            ]
        ]
    },
    {
        "id": "6a278761.b52968",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1430,
        "y": 560,
        "wires": []
    },
    {
        "id": "b45ed575.fb4058",
        "type": "Load Balance",
        "z": "e35f4854.7d04a8",
        "defaultcapacity": 100,
        "dynamic": "6409711c.8bf87",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 420,
        "y": 206,
        "wires": [
            [
                "e20e156.492c3e8"
            ],
            [
                "fe6cdb09.f4b208"
            ],
            [
                "bd1513d5.9f379"
            ],
            [
                "cdeef304.ab4c"
            ]
        ]
    },
    {
        "id": "8b78ad94.6e332",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "",
        "func": "var toUpdateM = []\nvar bodyM  = \"{\"+\n            \"\\\"thingTypeCode\\\":\\\"HUITEM\\\",\"+\n            \"\\\"serialNumber\\\":\\\"32192200000000300654_R0BO13E3EE_AW27JOYF-TOR-46-G0R\\\",\"+\n            \"\\\"source\\\":\\\"FLOW_Tagging\\\",\"+\n            \"\\\"RAKPALLET\\\":\\\"32192200000000300654\\\"}\"\ntoUpdateM.push(JSON.parse(bodyM));\nmsg.payloadM = toUpdateM\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1620,
        "y": 380,
        "wires": [
            [
                "e390856b.460ba8"
            ]
        ]
    },
    {
        "id": "77d5e703.0d6578",
        "type": "inject",
        "z": "e35f4854.7d04a8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1480,
        "y": 400,
        "wires": [
            [
                "8b78ad94.6e332"
            ]
        ]
    },
    {
        "id": "cdeef304.ab4c",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Validator",
        "func": "// PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n// var fields = msg.req.files;\n// msg.fields = Object.keys(fields);\n\nvar results;\ntry {\n    results = JSON.parse(msg.payload.body);\n} catch (error) {\n    node.warn(\"Invalid JSON in payload body\");\n    msg.payload = {\"response\": \"Bad request. Invalid JSON\"};\n    msg.statusCode = 400;\n    return [msg, null];\n}\n\nif (!Array.isArray(results)) {\n    node.warn(\"Payload body should be an array\");\n    msg.payload = {\"response\": \"Bad request. Payload body should be an array\"};\n    msg.statusCode = 400;\n    return [msg, null];\n}\n\n// Checking if the api_key is correct, otherwise response is Unauthorized\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials.\");\n    msg.payload = {\"response\": \"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg, null];\n} else {\n    node.warn(\"Authorized Tagging transaction, proceeding...\");\n    \n    node.warn(results);\n\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    for (var j = 0; j < results.length; j++) {\n        var serialNumber = results[j].serialNumber;\n        var material = results[j]?.udfs?.Material?.value;\n\n        if (!serialNumber || typeof serialNumber !== 'string') {\n            msg.payload = {\"response\": \"Invalid QR code\"};\n            msg.statusCode = 400;\n            return [msg, null];\n        }\n\n        for (var i = 0; i < serialNumber.length; i++) {\n            if (splChars.indexOf(serialNumber.charAt(i)) !== -1) {\n                msg.payload = {\"response\": \"Invalid QR code\"};\n                msg.statusCode = 400;\n                return [msg, null];\n            }\n        }\n\n        if (serialNumber.length < 18) {\n            msg.payload = {\"response\": \"Invalid QR code\"};\n            msg.statusCode = 400;\n            return [msg, null];\n        }\n\n        if (!material || material.length > 18) {\n            msg.payload = {\"response\": \"Bad request. Invalid MATERIAL code.\"};\n            msg.statusCode = 400;\n            return [msg, null];\n        }\n    }\n\n    msg.payloadOriginal = results;\n    msg.payload = results;\n    msg.destinationFilename = results[0].serialNumber + \"/pallet_\" + results[0].serialNumber + \".png\";\n    msg.newDirectory = \"/transfer/\" + results[0].serialNumber;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 980,
        "wires": [
            [
                "5f50793f.bad6b8"
            ]
        ]
    },
    {
        "id": "5f50793f.bad6b8",
        "type": "switch",
        "z": "e35f4854.7d04a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1030,
        "y": 980,
        "wires": [
            [
                "b0bede44.4f7b8"
            ],
            [
                "b0bede44.4f7b8"
            ],
            [
                "aba96e3b.b96de",
                "41897028.ac25f"
            ]
        ]
    },
    {
        "id": "b0bede44.4f7b8",
        "type": "http response",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 1190,
        "y": 900,
        "wires": []
    },
    {
        "id": "4e6add7.0c14324",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nvar zone = \"\";\nglobal.set(\"countertm2\",counterg);\nglobal.set(\"toprocesstm2\",message.length);\nglobal.set(\"tmptm2\",0);\nvar IMserver = global.get(\"IMserver\");\n\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar serialArrKeyHolder = [];\nvar palletArr = [];\nmessage.forEach(function(item){\n    var arrKey = \"{\\\"serialNumber\\\":\\\"\"+item.serialNumber+\"\\\",\"+\n                \"\\\"User\\\":\\\"\"+item.udfs.User.value+\"\\\",\"+\n                \"\\\"PalletType\\\":\\\"\"+item.type+\"\\\",\"+\n                \"\\\"UUIDMobile\\\":\\\"\"+item.udfs.UUIDMobile.value+\"\\\"\";\n    //if(item.image){\n    //    arrKey+=\",\\\"Image\\\":\\\"\"+item.image+\"\\\"\";\n    //}\n    if(item.udfs.location || item.udfs.zone){\n        if(item.udfs.location && (!item.udfs.zone || item.udfs.zone.value === \"\" )){\n            arrKey+=\",\\\"location\\\":\\\"\"+item.udfs.location.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the LOCATION value: \"+item.udfs.location.value);\n        }\n        if(item.udfs.zone && item.udfs.zone.value !== \"\" ){\n            arrKey+=\",\\\"zone\\\":\\\"\"+item.udfs.zone.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the ZONE value: \"+item.udfs.zone.value);\n        }\n    }\n    if(item.udfs.LocationDetails){\n        arrKey+=\",\\\"LocationDetails\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n        arrKey+=\",\\\"Plant\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(item.udfs.StorageLocation){\n        arrKey+=\",\\\"StorageLocation\\\":\\\"\"+item.udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(item.udfs.BinLocation){\n        arrKey+=\",\\\"BinLocation\\\":\\\"\"+item.udfs.BinLocation.value+\"\\\"\";\n    }\n    if(item.udfs.Lane){\n        arrKey+=\",\\\"Lane\\\":\\\"\"+item.udfs.Lane.value+\"\\\"\";\n    }\n    if(item.udfs.L5Location){\n        arrKey+=\",\\\"L5Location\\\":\\\"\"+item.udfs.L5Location.value+\"\\\"\";\n    }\n    arrKey+=\"}\";\n\n    var key = [arrKey];\n    //node.warn(key)\n    serialArrKeyHolder[key] = serialArrKeyHolder[key]||{};\n    var obj = serialArrKeyHolder[key];\n    if(Object.keys(obj).length === 0){\n        palletArr.push({obj});\n    }\n    obj.key = JSON.parse(key);\n    obj.materials  = obj.materials || [];\n        var arrMaterials = \"{\"+\n        \"\\\"Material\\\":\\\"\"+item.udfs.Material.value+\"\\\", \"+\n        \"\\\"Batch\\\":\\\"\"+item.udfs.Batch.value+\"\\\"\";\n    if(item.udfs.Qty){\n        arrMaterials+=\", \\\"Qty\\\":\\\"\"+item.udfs.Qty.value+\"\\\"\";\n    }\n    arrMaterials+=\"}\";\n    obj.materials.push(JSON.parse(arrMaterials));\n\n});\n\nfor(var i=0;i < palletArr.length;i++){\n    palletArr[i] = palletArr[i].obj\n}\n\nvar toUpdateP = [];\nvar toUpdateM = [];\nvar toStore = [];\nvar image = [];\nvar results = palletArr;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n//node.warn(results);\nfor(var j=0;j < results.length;j++){\n    msg.Process = \"Tagging\";\n    //SETTING UP HUITEM INFORMATION\n    for(var k=0;k < results[j].materials.length;k++){\n        var Material = results[j].materials[k].Material;\n        var Material_Master = Material;\n        \n        Material_Master = Material_Master.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n        Material_Master = Material_Master.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n        Material_Master = Material_Master.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n        Material_Master = Material_Master.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n        Material_Master = Material_Master.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n        Material_Master = Material_Master.latinize(); //Removing diacritics\n        Material_Master = Material_Master.replace(/\\s/g, ''); //Removing spaces\n        \n        var hu = k+1;\n        \n        var bodyM = \"{\"+\n            \"\\\"thingTypeCode\\\":\\\"HUITEM\\\",\"+\n            \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"_\" +  results[j].materials[k].Batch + \"_\" + Material_Master + \"\\\",\"+\n            \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n            \"\\\"Production_Date\\\":\"+ currentTime + \",\"+\n            \"\\\"source\\\":\\\"FLOW_Tagging\\\",\"+\n            // \"\\\"RAKPALLET\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n            \"\\\"Material_Code\\\":\\\"\"+ Material + \"\\\",\"+\n            \"\\\"Material_Master\\\":\\\"\"+ Material_Master + \"\\\",\"+\n            \"\\\"Batch\\\":\\\"\"+ results[j].materials[k].Batch + \"\\\",\"+\n            \"\\\"huitem\\\":\\\"\"+ pad(hu,6) + \"\\\"\";\n        if(results[j].materials[k].Qty){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            bodyM+=\"\\\"Qty\\\":\\\"\"+results[j].materials[k].Qty+\"\\\",\";\n            //****************** TEMPORARILY REMOVING THE RETAGGING PROCESS - 30/06/2021\n            //msg.Process = \"reTagging\";\n        }\n        if(results[j].key.location || results[j].key.zone){\n            if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n            }\n            if(results[j].key.zone && results[j].key.zone !== \"\"){\n                zone = results[j].key.zone;\n                zone = zone.replace(/[&]/g, \"\");\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n            }\n        }\n        if(results[j].key.LocationDetails){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            //node.warn(\"setting LocationDetails: \"+results[j].key.LocationDetails)\n            bodyM+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n            bodyM+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n        }\n        if(results[j].key.StorageLocation){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n           }\n           //node.warn(\"setting StorageLocation: \"+results[j].key.StorageLocation)\n            bodyM+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n        }\n        if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n        }\n        bodyM+=\"\\\"Process\\\":\\\"\"+msg.Process+\"\\\"}\";\n        toUpdateM.push(JSON.parse(bodyM));\n    }\n    \n    //if(results[j].key.Image){\n    //    toStore[0] = results[j].key.Image;\n    //    toStore[1] = results[j].key.serialNumber;\n    //    image.push(toStore);\n    //}\n    \n    //SETTING UP PALLET INFORMATION\n    var bodyP = \"{\"+\n        \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\"+\n        \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n        \"\\\"TaggingDate\\\":\"+ currentTime + \",\"+\n        \"\\\"ProcessTime\\\":\"+ currentTime + \",\"+\n        \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n        \"\\\"PalletType\\\":\\\"\"+ results[j].key.PalletType + \"\\\",\"+\n        \"\\\"source\\\":\\\"MOBILE_Tagging\\\",\"+\n        \"\\\"facility\\\":\\\"RAKHQ\\\",\"+\n        \"\\\"Status\\\":\\\"Active\\\",\"+\n        \"\\\"User\\\":\\\"\"+ results[j].key.User + \"\\\",\"+\n        \"\\\"UUIDMobile\\\":\\\"\"+ results[j].key.UUIDMobile + \"\\\",\"+\n        \"\\\"Process\\\":\\\"\"+msg.Process+\"\\\",\"+\n        \"\\\"Image\\\":\\\"\"+IMserver+\"/\"+results[j].key.serialNumber+\"/pallet_\"+results[j].key.serialNumber+\".png\\\"\";\n\n    if(results[j].key.location || results[j].key.zone){\n        if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n        }\n        if(results[j].key.zone && results[j].key.zone !== \"\"){\n            zone = results[j].key.zone;\n            zone = zone.replace(/[&]/g, \"\");\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n        }\n    }\n    if(results[j].key.LocationDetails){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n        bodyP+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n    }\n    if(results[j].key.StorageLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n    }\n    if(results[j].key.BinLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"BinLocation\\\":\\\"\"+results[j].key.BinLocation+\"\\\"\";\n    }\n    if(results[j].key.Lane){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"Lane\\\":\\\"\"+results[j].key.Lane+\"\\\"\";\n    }\n    if(results[j].key.L5Location){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"L5Location\\\":\\\"\"+results[j].key.L5Location+\"\\\"\";\n    }\n    bodyP+=\"}\";\n    \n    toUpdateP.push(JSON.parse(bodyP));\n\n}\n//node.warn(toUpdateP);\n\n//node.warn(\"String of messages To Update: \" + toUpdateP);\n//msg.image=image;\nmsg.payloadP=toUpdateP;\nmsg.payloadM=toUpdateM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1000,
        "wires": [
            [
                "f789e5eb.bc8668",
                "50a3697f.612f78"
            ]
        ]
    },
    {
        "id": "71dcb38b.9757ac",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2110,
        "y": 960,
        "wires": [
            [
                "d19a2f1.39f2ad"
            ]
        ]
    },
    {
        "id": "d19a2f1.39f2ad",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://64.227.150.106:5008/core/thing-type/RAKPALLET/bulk/serial\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 960,
        "wires": [
            [
                "a294da5e.5ce9a8"
            ]
        ]
    },
    {
        "id": "a294da5e.5ce9a8",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 2310,
        "y": 900,
        "wires": [
            [
                "cbd01fd0.a0db3",
                "cc573393.3b8c7"
            ]
        ]
    },
    {
        "id": "cbd01fd0.a0db3",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Response",
        "func": "var counter = global.get('countertm2');\nvar tmp = global.get('tmptm2');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 201){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmptm2\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocesstm2')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 840,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "ce04df4e.b257c",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1940,
        "y": 960,
        "wires": [
            [
                "71dcb38b.9757ac"
            ]
        ]
    },
    {
        "id": "cc573393.3b8c7",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2450,
        "y": 880,
        "wires": []
    },
    {
        "id": "f789e5eb.bc8668",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadP",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 960,
        "wires": [
            [
                "ce04df4e.b257c"
            ]
        ]
    },
    {
        "id": "a99a463.8445eb8",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "HUITEM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadM",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"364503bf-1622-468e-abf1-262bdb7895e3\",\"Content-Type\":\"application/json\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1775,
        "y": 1000,
        "wires": [
            [
                "b8a8ac8b.b87e6"
            ]
        ]
    },
    {
        "id": "b8a8ac8b.b87e6",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1939,
        "y": 1000,
        "wires": [
            [
                "5abb0fd1.ba01"
            ]
        ]
    },
    {
        "id": "5abb0fd1.ba01",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "2s",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2089,
        "y": 1000,
        "wires": [
            [
                "5a912f71.ab693"
            ]
        ]
    },
    {
        "id": "5a912f71.ab693",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://64.227.150.106:5008/core/thing-type/HUITEM/bulk/serial\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2292,
        "y": 1000,
        "wires": [
            [
                "943203b.80f11"
            ]
        ]
    },
    {
        "id": "943203b.80f11",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 2310,
        "y": 1060,
        "wires": [
            [
                "e6b8d7f0.c49b28"
            ]
        ]
    },
    {
        "id": "e6b8d7f0.c49b28",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2450,
        "y": 1080,
        "wires": []
    },
    {
        "id": "50a3697f.612f78",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1760,
        "y": 1040,
        "wires": [
            [
                "a99a463.8445eb8"
            ]
        ]
    },
    {
        "id": "aba96e3b.b96de",
        "type": "subflow:ee8909d.0fb5ef8",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 1240,
        "y": 1000,
        "wires": [
            [
                "4e6add7.0c14324",
                "72ffb1a5.9e976"
            ]
        ]
    },
    {
        "id": "43ed0f72.8afe2",
        "type": "link in",
        "z": "e35f4854.7d04a8",
        "name": "TMP_in",
        "links": [
            "f445bee4.bd466"
        ],
        "x": 1615,
        "y": 920,
        "wires": [
            [
                "f789e5eb.bc8668",
                "50a3697f.612f78"
            ]
        ]
    },
    {
        "id": "b381d4b7.d801b8",
        "type": "fs-ops-move",
        "z": "e35f4854.7d04a8",
        "name": "move",
        "sourcePath": "/tmp",
        "sourcePathType": "str",
        "sourceFilename": "localFilename",
        "sourceFilenameType": "msg",
        "destPath": "/transfer",
        "destPathType": "str",
        "destFilename": "destinationFilename",
        "destFilenameType": "msg",
        "link": false,
        "x": 1370,
        "y": 1060,
        "wires": [
            [
                "e1fe5a23.43f598"
            ]
        ]
    },
    {
        "id": "e1fe5a23.43f598",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1490,
        "y": 1060,
        "wires": []
    },
    {
        "id": "41897028.ac25f",
        "type": "fs-ops-mkdir",
        "z": "e35f4854.7d04a8",
        "name": "",
        "path": "",
        "pathType": "str",
        "dirname": "newDirectory",
        "dirnameType": "msg",
        "recursive": false,
        "mode": "777",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 1220,
        "y": 1060,
        "wires": [
            [
                "b381d4b7.d801b8"
            ]
        ]
    },
    {
        "id": "72ffb1a5.9e976",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1430,
        "y": 940,
        "wires": []
    },
    {
        "id": "4074df97.6598e",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Validator",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\nvar results = msg.payload;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized Tagging transaction, proceeding... \");\n    \n    \n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    for(var j=0;j < results.length;j++){\n        for(var i=0;i < results[j].serialNumber.length;i++){\n            if(splChars.indexOf(results[j].serialNumber.charAt(i)) != -1){\n                msg.payload = {\"response\":\"Invalid QR code\"};\n                msg.statusCode = 400;\n            }\n        }\n        var Material = results[j].udfs.Material.value;\n        if(Material.length > 18){\n            msg.payload = {\"response\":\"Bad request. Invalid MATERIAL code.\"};\n            msg.statusCode = 400;\n        }\n    }\n    msg.payloadOriginal=results;\n    msg.payload=results;\n\tmsg.destinationFilename = results[0].serialNumber+\"/pallet_\"+results[0].serialNumber+\".png\";\n    msg.newDirectory = \"/transfer/\"+results[0].serialNumber;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 1580,
        "wires": [
            [
                "ea6c5944.dfcd38"
            ]
        ]
    },
    {
        "id": "ea6c5944.dfcd38",
        "type": "switch",
        "z": "e35f4854.7d04a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1030,
        "y": 1580,
        "wires": [
            [
                "48cd3bc6.630304"
            ],
            [
                "48cd3bc6.630304"
            ],
            [
                "f2c350a0.d2037",
                "48cd3bc6.630304"
            ]
        ]
    },
    {
        "id": "48cd3bc6.630304",
        "type": "http response",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 1190,
        "y": 1500,
        "wires": []
    },
    {
        "id": "f2c350a0.d2037",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nvar zone = \"\";\nglobal.set(\"countertm2\",counterg);\nglobal.set(\"toprocesstm2\",message.length);\nglobal.set(\"tmptm2\",0);\nvar IMserver = global.get(\"IMserver\");\n\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar serialArrKeyHolder = [];\nvar palletArr = [];\nmessage.forEach(function(item){\n    var arrKey = \"{\\\"serialNumber\\\":\\\"\"+item.serialNumber+\"\\\",\"+\n                \"\\\"User\\\":\\\"\"+item.udfs.User.value+\"\\\",\"+\n                \"\\\"PalletType\\\":\\\"\"+item.type+\"\\\",\"+\n                \"\\\"UUIDMobile\\\":\\\"\"+item.udfs.UUIDMobile.value+\"\\\"\";\n    //if(item.image){\n    //    arrKey+=\",\\\"Image\\\":\\\"\"+item.image+\"\\\"\";\n    //}\n    if(item.udfs.location || item.udfs.zone){\n        if(item.udfs.location && (!item.udfs.zone || item.udfs.zone.value === \"\" )){\n            arrKey+=\",\\\"location\\\":\\\"\"+item.udfs.location.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the LOCATION value: \"+item.udfs.location.value);\n        }\n        if(item.udfs.zone && item.udfs.zone.value !== \"\" ){\n            arrKey+=\",\\\"zone\\\":\\\"\"+item.udfs.zone.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the ZONE value: \"+item.udfs.zone.value);\n        }\n    }\n    if(item.udfs.LocationDetails){\n        arrKey+=\",\\\"LocationDetails\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n        arrKey+=\",\\\"Plant\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(item.udfs.StorageLocation){\n        arrKey+=\",\\\"StorageLocation\\\":\\\"\"+item.udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(item.udfs.BinLocation){\n        arrKey+=\",\\\"BinLocation\\\":\\\"\"+item.udfs.BinLocation.value+\"\\\"\";\n    }\n    if(item.udfs.Lane){\n        arrKey+=\",\\\"Lane\\\":\\\"\"+item.udfs.Lane.value+\"\\\"\";\n    }\n    if(item.udfs.L5Location){\n        arrKey+=\",\\\"L5Location\\\":\\\"\"+item.udfs.L5Location.value+\"\\\"\";\n    }\n    arrKey+=\"}\";\n\n    var key = [arrKey];\n    //node.warn(key)\n    serialArrKeyHolder[key] = serialArrKeyHolder[key]||{};\n    var obj = serialArrKeyHolder[key];\n    if(Object.keys(obj).length === 0){\n        palletArr.push({obj});\n    }\n    obj.key = JSON.parse(key);\n    obj.materials  = obj.materials || [];\n        var arrMaterials = \"{\"+\n        \"\\\"Material\\\":\\\"\"+item.udfs.Material.value+\"\\\", \"+\n        \"\\\"Batch\\\":\\\"\"+item.udfs.Batch.value+\"\\\"\";\n    if(item.udfs.Qty){\n        arrMaterials+=\", \\\"Qty\\\":\\\"\"+item.udfs.Qty.value+\"\\\"\";\n    }\n    arrMaterials+=\"}\";\n    obj.materials.push(JSON.parse(arrMaterials));\n\n});\n\nfor(var i=0;i < palletArr.length;i++){\n    palletArr[i] = palletArr[i].obj\n}\n\nvar toUpdateP = [];\nvar toUpdateM = [];\nvar toStore = [];\nvar image = [];\nvar results = palletArr;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n//node.warn(results);\nfor(var j=0;j < results.length;j++){\n    msg.Process = \"Tagging\";\n    //SETTING UP HUITEM INFORMATION\n    for(var k=0;k < results[j].materials.length;k++){\n        var Material = results[j].materials[k].Material;\n        var Material_Master = Material;\n        \n        Material_Master = Material_Master.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n        Material_Master = Material_Master.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n        Material_Master = Material_Master.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n        Material_Master = Material_Master.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n        Material_Master = Material_Master.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n        Material_Master = Material_Master.latinize(); //Removing diacritics\n        Material_Master = Material_Master.replace(/\\s/g, ''); //Removing spaces\n        \n        var hu = k+1;\n        \n        var bodyM = \"{\"+\n            \"\\\"thingTypeCode\\\":\\\"HUITEM\\\",\"+\n            \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"_\" +  results[j].materials[k].Batch + \"_\" + Material_Master + \"\\\",\"+\n            \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n            \"\\\"Production_Date\\\":\"+ currentTime + \",\"+\n            \"\\\"source\\\":\\\"FLOW_Tagging\\\",\"+\n            \"\\\"RAKPALLET\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n            \"\\\"Material_Code\\\":\\\"\"+ Material + \"\\\",\"+\n            \"\\\"Material_Master\\\":\\\"\"+ Material_Master + \"\\\",\"+\n            \"\\\"Batch\\\":\\\"\"+ results[j].materials[k].Batch + \"\\\",\"+\n            \"\\\"huitem\\\":\\\"\"+ pad(hu,6) + \"\\\"\";\n        if(results[j].materials[k].Qty){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            bodyM+=\"\\\"Qty\\\":\\\"\"+results[j].materials[k].Qty+\"\\\",\";\n            //****************** TEMPORARILY REMOVING THE RETAGGING PROCESS - 30/06/2021\n            //msg.Process = \"reTagging\";\n        }\n        if(results[j].key.location || results[j].key.zone){\n            if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n            }\n            if(results[j].key.zone && results[j].key.zone !== \"\"){\n                zone = results[j].key.zone;\n                zone = zone.replace(/[&]/g, \"\");\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n            }\n        }\n        if(results[j].key.LocationDetails){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            //node.warn(\"setting LocationDetails: \"+results[j].key.LocationDetails)\n            bodyM+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n            bodyM+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n        }\n        if(results[j].key.StorageLocation){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n           }\n           //node.warn(\"setting StorageLocation: \"+results[j].key.StorageLocation)\n            bodyM+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n        }\n        if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n        }\n        bodyM+=\"\\\"Process\\\":\\\"\"+msg.Process+\"\\\"}\";\n        toUpdateM.push(JSON.parse(bodyM));\n    }\n    \n    //if(results[j].key.Image){\n    //    toStore[0] = results[j].key.Image;\n    //    toStore[1] = results[j].key.serialNumber;\n    //    image.push(toStore);\n    //}\n    \n    //SETTING UP PALLET INFORMATION\n    var bodyP = \"{\"+\n        \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\"+\n        \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n        \"\\\"TaggingDate\\\":\"+ currentTime + \",\"+\n        \"\\\"ProcessTime\\\":\"+ currentTime + \",\"+\n        \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n        \"\\\"PalletType\\\":\\\"\"+ results[j].key.PalletType + \"\\\",\"+\n        \"\\\"source\\\":\\\"MOBILE_Tagging\\\",\"+\n        \"\\\"facility\\\":\\\"RAKHQ\\\",\"+\n        \"\\\"Status\\\":\\\"Active\\\",\"+\n        \"\\\"User\\\":\\\"\"+ results[j].key.User + \"\\\",\"+\n        \"\\\"UUIDMobile\\\":\\\"\"+ results[j].key.UUIDMobile + \"\\\",\"+\n        \"\\\"Process\\\":\\\"\"+msg.Process+\"\\\",\"+\n        \"\\\"Image\\\":\\\"\"+IMserver+\"/\"+results[j].key.serialNumber+\"/pallet_\"+results[j].key.serialNumber+\".png\\\"\";\n\n    if(results[j].key.location || results[j].key.zone){\n        if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n        }\n        if(results[j].key.zone && results[j].key.zone !== \"\"){\n            zone = results[j].key.zone;\n            zone = zone.replace(/[&]/g, \"\");\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n        }\n    }\n    if(results[j].key.LocationDetails){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n        bodyP+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n    }\n    if(results[j].key.StorageLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n    }\n    if(results[j].key.BinLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"BinLocation\\\":\\\"\"+results[j].key.BinLocation+\"\\\"\";\n    }\n    if(results[j].key.Lane){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"Lane\\\":\\\"\"+results[j].key.Lane+\"\\\"\";\n    }\n    if(results[j].key.L5Location){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"L5Location\\\":\\\"\"+results[j].key.L5Location+\"\\\"\";\n    }\n    bodyP+=\"}\";\n    \n    toUpdateP.push(JSON.parse(bodyP));\n\n}\n//node.warn(toUpdateP);\n\n//node.warn(\"String of messages To Update: \" + toUpdateP);\n//msg.image=image;\nmsg.payloadP=toUpdateP;\nmsg.payloadM=toUpdateM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1310,
        "y": 1600,
        "wires": [
            [
                "8182565e.9cca18",
                "856bd9bf.555398"
            ]
        ]
    },
    {
        "id": "e6e0c0b9.f70d",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2120,
        "y": 1560,
        "wires": [
            [
                "e8835bf9.590038"
            ]
        ]
    },
    {
        "id": "e8835bf9.590038",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/MOBILE&thingTypeCode=/RAKCERAMICS/RAKPALLET\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2330,
        "y": 1560,
        "wires": [
            [
                "6d8712c8.5b95fc"
            ]
        ]
    },
    {
        "id": "6d8712c8.5b95fc",
        "type": "half-bridge",
        "z": "e35f4854.7d04a8",
        "name": "",
        "bridgeCode": "FLOW",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 2350,
        "y": 1520,
        "wires": [
            [
                "2554cf41.7c34f"
            ]
        ]
    },
    {
        "id": "2554cf41.7c34f",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 2350,
        "y": 1480,
        "wires": [
            [
                "82e89394.f3ec5",
                "a263de59.29835"
            ]
        ]
    },
    {
        "id": "82e89394.f3ec5",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Response",
        "func": "var counter = global.get('countertm2');\nvar tmp = global.get('tmptm2');\n\n//node.warn(\"COUNTER: \"+ counter);\n//node.warn(\"INCREASED COUNTER: \"+ tmp);\n\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\nif (tmp<=counter){\n    \n    tmp=tmp+1;\n    global.set(\"tmptm2\",tmp);\n    //node.warn(\"TMP: \"+ global.get('tmp'));\n    \n    if (tmp === counter){\n        //node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING TAGGING ---- \");\n        node.warn(\" ***** Successfully processed: \" +global.get('toprocesstm2')+ \" ITEMS ***** \");\n    }\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 2360,
        "y": 1440,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "ceef957.98fdf68",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1940,
        "y": 1560,
        "wires": [
            [
                "e6e0c0b9.f70d"
            ]
        ]
    },
    {
        "id": "a263de59.29835",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2490,
        "y": 1480,
        "wires": []
    },
    {
        "id": "8182565e.9cca18",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 1560,
        "wires": [
            [
                "ceef957.98fdf68"
            ]
        ]
    },
    {
        "id": "b034b327.fa213",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "HUITEM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadM",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1775,
        "y": 1600,
        "wires": [
            [
                "7b904494.d1e1ec"
            ]
        ]
    },
    {
        "id": "7b904494.d1e1ec",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "x": 1939,
        "y": 1600,
        "wires": [
            [
                "a1a8d6d4.76e078"
            ]
        ]
    },
    {
        "id": "a1a8d6d4.76e078",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "3s",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 2089,
        "y": 1600,
        "wires": [
            [
                "5dbbc50f.a8b92c"
            ]
        ]
    },
    {
        "id": "5dbbc50f.a8b92c",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/FLOW&thingTypeCode=/RAKCERAMICS/HUITEM\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2332,
        "y": 1600,
        "wires": [
            [
                "9ed7dac5.ea9628"
            ]
        ]
    },
    {
        "id": "9ed7dac5.ea9628",
        "type": "half-bridge",
        "z": "e35f4854.7d04a8",
        "name": "",
        "bridgeCode": "FLOW",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 2350,
        "y": 1640,
        "wires": [
            [
                "9f8adeba.2db6e"
            ]
        ]
    },
    {
        "id": "9f8adeba.2db6e",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 2350,
        "y": 1680,
        "wires": [
            [
                "c58c7589.dd5678"
            ]
        ]
    },
    {
        "id": "c58c7589.dd5678",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2490,
        "y": 1680,
        "wires": []
    },
    {
        "id": "856bd9bf.555398",
        "type": "delay",
        "z": "e35f4854.7d04a8",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1760,
        "y": 1640,
        "wires": [
            [
                "b034b327.fa213"
            ]
        ]
    },
    {
        "id": "740ae09c.8ab9",
        "type": "fs-ops-move",
        "z": "e35f4854.7d04a8",
        "name": "move",
        "sourcePath": "/tmp",
        "sourcePathType": "str",
        "sourceFilename": "localFilename",
        "sourceFilenameType": "msg",
        "destPath": "/transfer",
        "destPathType": "str",
        "destFilename": "destinationFilename",
        "destFilenameType": "msg",
        "link": false,
        "x": 1370,
        "y": 1660,
        "wires": [
            [
                "632dcc37.fd6d34"
            ]
        ]
    },
    {
        "id": "632dcc37.fd6d34",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1490,
        "y": 1660,
        "wires": []
    },
    {
        "id": "8443fb27.457408",
        "type": "fs-ops-mkdir",
        "z": "e35f4854.7d04a8",
        "name": "",
        "path": "",
        "pathType": "str",
        "dirname": "newDirectory",
        "dirnameType": "msg",
        "recursive": false,
        "mode": "777",
        "fullpath": "directory",
        "fullpathType": "msg",
        "x": 1220,
        "y": 1660,
        "wires": [
            [
                "740ae09c.8ab9"
            ]
        ]
    },
    {
        "id": "260b4b83.a412b4",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 890,
        "y": 1660,
        "wires": []
    },
    {
        "id": "41bd251a.748ffc",
        "type": "http in",
        "z": "e35f4854.7d04a8",
        "name": "TAGGINGMULTIPLE",
        "url": "/TAGGINGMULTIPLE",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 640,
        "y": 1640,
        "wires": [
            [
                "260b4b83.a412b4"
            ]
        ]
    },
    {
        "id": "bc41a6db.2b7678",
        "type": "comment",
        "z": "e35f4854.7d04a8",
        "name": "FOR RE-PUSHING TAGGING LOGS",
        "info": "",
        "x": 670,
        "y": 1580,
        "wires": []
    },
    {
        "id": "7d55d46a.96b60c",
        "type": "http in",
        "z": "e35f4854.7d04a8",
        "name": "SAVE RETAGGED ITEMS",
        "url": "/RETAGGING",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 2140,
        "wires": [
            [
                "ce9f5796.8a9028",
                "c0627731.dd4508",
                "b738432.315ffc"
            ]
        ]
    },
    {
        "id": "4279280b.a4c6b8",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Validate Request",
        "func": "// Function to check for special characters\nfunction containsSpecialChars(str) {\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    for (var i = 0; i < str.length; i++) {\n        if (splChars.indexOf(str.charAt(i)) !== -1) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Function to check if a value is non-empty and not null\nfunction isValidValue(value) {\n    return typeof value === 'string' && value.trim() !== '';\n}\n\n// Function to validate UDFs fields\nfunction validateUDFs(udfs) {\n    const udfsFields = ['Batch', 'Material', 'Qty', 'User'];\n    for (let field of udfsFields) {\n        const fieldValue = udfs[field] ? udfs[field].value : undefined;\n        if (!fieldValue || !isValidValue(fieldValue)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Validate the received request\nvar headers = msg.req.headers;\n\n// Check if the API key is correct\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials.\");\n    msg.payload = { \"response\": \"Unauthorized\" };\n    msg.statusCode = 401;\n    return [msg, null];\n} else {\n    node.warn(\"Authorized reTagging transaction, proceeding...\");\n    let results = msg.payload;\n\n    // Validate that all serialNumbers are the same\n    const allSameSerialNumbers = results.every(item => item.serialNumber === results[0].serialNumber);\n    if (!allSameSerialNumbers) {\n        msg.payload = { \"response\": \"Different QR codes are not accepted.\" };\n        msg.statusCode = 400;\n        return msg;\n    }\n    \n    for (let result of results) {\n        // Check for special characters in serialNumber\n        if (containsSpecialChars(result.serialNumber) || result.serialNumber.length < 18) {\n            msg.payload = { \"response\": \"Invalid QR code\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n\n        // Validate Material code length\n        if (result.udfs.Material && (result.udfs.Material.value.length > 18 || result.udfs.Material.value.length < 4)) {\n            msg.payload = { \"response\": \"Invalid MATERIAL code. Please review.\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n\n        // Validate UDFs\n        if (!validateUDFs(result.udfs)) {\n            msg.payload = { \"response\": \"Invalid UDFs. Missing or empty values detected.\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n    }\n    \n    msg.payloadOriginal = msg.payload;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2134,
        "wires": [
            [
                "9e5696a5.e3a4a8"
            ]
        ]
    },
    {
        "id": "8eef2563.f89dd8",
        "type": "http response",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 1110,
        "y": 2120,
        "wires": []
    },
    {
        "id": "9e5696a5.e3a4a8",
        "type": "switch",
        "z": "e35f4854.7d04a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 891,
        "y": 2134,
        "wires": [
            [
                "8eef2563.f89dd8"
            ],
            [
                "8eef2563.f89dd8"
            ],
            [
                "9d7d3d1b.eb9"
            ]
        ]
    },
    {
        "id": "9d7d3d1b.eb9",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nmsg.serialNumber = message[0].serialNumber;\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",message.length);\nglobal.set(\"tmp\",0);\n\nvar currentTime = new Date().getTime();\nvar IMserver = global.get(\"IMserver\");\n\n// Utility functions\nvar latinise = {};\nlatinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\n\n\n// Extend String prototype to include latinise method\nString.prototype.latinise = function() {\n    return this.replace(/[^A-Za-z0-9\\[\\] ]/g, function(a) {\n        return latinise.latin_map[a] || a;\n    });\n};\n\nfunction replaceSpecialCharsAndLatinize(str) {\n    str = String(str);\n    // Maps special characters to ASCII codes and removes spaces\n    let replacements = {\n        '#': '-35-', '.': '-46-', '/': '-47-', '(': '-40-', ')': '-41-'\n    };\n    return str.replace(/[#./()]/g, match => replacements[match])\n              .replace(/\\s/g, '')\n              .latinise();\n}\n\n// Processing\nvar toUpdateP = [], toUpdateM = [];\nmessage.forEach((item, index) => {\n    if (item.process !== 'reTagging') {\n        msg.payload = { \"response\": \"Invalid process declared for endpoint\" };\n        msg.statusCode = 400;\n        return msg;\n    }\n    \n    let serialNumber = item.serialNumber;\n    let process = item.process;\n    let userValue = item.udfs.User.value;\n    let batchValue = item.udfs.Batch.value;\n    //let location = item.udfs.location.value;\n    let materialValue = item.udfs.Material.value;\n    let qtyValue = item.udfs.Qty.value ? item.udfs.Qty.value : \"0\";\n    let materialMaster = replaceSpecialCharsAndLatinize(materialValue);\n    \n    let materialObj = {\n        Material: materialValue,\n        Material_Master: materialMaster,\n        Batch: batchValue,\n        Qty: qtyValue\n    };\n    \n    // Construct materials array\n    let bodyM = {\n        \"thingTypeCode\": \"HUITEM\",\n        \"serialNumber\": `${serialNumber}_${materialObj.Batch}_${materialObj.Material_Master}`,\n        \"source\": \"FLOW\",\n        \"RAKPALLET\": `${serialNumber}_${materialObj.Batch}_${materialObj.Material_Master}`,\n         \"name\": `${serialNumber}_${materialObj.Batch}_${materialObj.Material_Master}`,\n        \"Material_Code\": materialObj.Material,\n        \"Material_Master\": materialObj.Material_Master,\n        \"Batch\": materialObj.Batch,\n        \"huitem\": pad(index + 1, 6),\n        \"lastDetectTime\": new Date().getTime(),\n        \"timestamp\": new Date().getTime(),\n        //\"location\": location,\n        \"Process\": process\n    };\n    if (materialObj.Qty) bodyM[\"Qty\"] = materialObj.Qty;\n    toUpdateM.push(bodyM);\n    \n\n    // Pallet information\n    var bodyP = {\n        \"thingTypeCode\": \"RAKPALLET\",\n        \"timestamp\": currentTime,\n        \"TaggingDate\": currentTime,\n        \"ProcessTime\": currentTime,\n        \"serialNumber\": serialNumber,\n        \"name\": serialNumber,\n        \"source\": \"MOBILE_reTagging\",\n        \"facility\": \"RAKHQ\",\n        \"Status\": \"Active\",\n        \"User\": userValue,\n        \"Process\": process\n    };\n    toUpdateP = [bodyP]\n});\n\n// Return the updated message\nmsg.payloadP = toUpdateP;\nmsg.payloadM = toUpdateM;\nreturn msg;\n\n// Helper function for padding\nfunction pad(n, width, z = '0') {\n    n = n + '';\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2200,
        "wires": [
            [
                "8de62a95.79d618"
            ]
        ]
    },
    {
        "id": "c5d1b58e.2e6d48",
        "type": "comment",
        "z": "e35f4854.7d04a8",
        "name": "FLOW FOR THE RETAGGING PROCESS - without images",
        "info": "",
        "x": 300,
        "y": 1980,
        "wires": []
    },
    {
        "id": "c0627731.dd4508",
        "type": "Load Balance",
        "z": "e35f4854.7d04a8",
        "defaultcapacity": 100,
        "dynamic": "fe6cdb09.f4b208",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 480,
        "y": 2140,
        "wires": [
            [
                "930fb48a.8ac078"
            ],
            [
                "4279280b.a4c6b8"
            ],
            [
                "5977a0dffe1db664"
            ],
            [
                "54feeed42c200f93"
            ]
        ]
    },
    {
        "id": "ce9f5796.8a9028",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 450,
        "y": 2213,
        "wires": []
    },
    {
        "id": "dd72b3a7.41b5e",
        "type": "file",
        "z": "e35f4854.7d04a8",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 670,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "b738432.315ffc",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Inbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/RETAGGING/'+ shortDate + '/inbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "dd72b3a7.41b5e",
                "930fb48a.8ac078"
            ]
        ]
    },
    {
        "id": "930fb48a.8ac078",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 670,
        "y": 2080,
        "wires": []
    },
    {
        "id": "546a2398.d8544c",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1110,
        "y": 2260,
        "wires": []
    },
    {
        "id": "8de62a95.79d618",
        "type": "switch",
        "z": "e35f4854.7d04a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 2200,
        "wires": [
            [
                "8eef2563.f89dd8"
            ],
            [
                "546a2398.d8544c",
                "4709bbc.f58c044"
            ]
        ]
    },
    {
        "id": "4709bbc.f58c044",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Find previous HUITEM",
        "func": "var server = global.get(\"server\");\n\nif(msg.serialNumber){\n    var serialNumber = msg.serialNumber;\n    msg.payload={\"serial\":serialNumber};\n}\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?serialNumber=\"+serialNumber+\"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 2220,
        "wires": [
            [
                "6ad07fc7.2243c"
            ]
        ]
    },
    {
        "id": "6ad07fc7.2243c",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 2220,
        "wires": [
            [
                "c4f72554.eaf598",
                "1095b97e.54d3d7"
            ]
        ]
    },
    {
        "id": "c4f72554.eaf598",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1550,
        "y": 2220,
        "wires": [
            [
                "ef6d9a28.1a4fe8",
                "4e1f75c9.d98c0c"
            ]
        ]
    },
    {
        "id": "1095b97e.54d3d7",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 2260,
        "wires": []
    },
    {
        "id": "ef6d9a28.1a4fe8",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1710,
        "y": 2260,
        "wires": []
    },
    {
        "id": "4e1f75c9.d98c0c",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Deactivate PREV HUITEM",
        "func": "const results = msg.payload;\nvar payloadM = msg.payloadM;\nnode.warn(results);\nvar toUpdate = [], toDeactivate = [];\nconst total = msg.payload.total;\n\nmsg.create = false;\nmsg.update = false;\nmsg.deactivate = false;\n\n// Specify fields to exclude\nconst excludeFields = new Set([\n  'id',\n  'serialNumber',\n  'thingTypeId',\n  'thing.headers',\n  'HUserial'\n]);\n\nif (total > 0) {\n    // Iterate over each result item from the vizix report\n    results.data.forEach(resultItem => {\n       \n        // Find a matching item in payloadM\n        var match = payloadM.find(mItem => \n            mItem.Material_Code === resultItem.Material_Code &&\n            mItem.Batch === resultItem.Batch\n        );\n\n        // Form an update message to be sent\n        if (match) {\n            const Qty = match.Qty;\n            match = transformResult(resultItem);\n            // Manually setting up the new Qty and Availability\n            if (match.M2_PC_RM_Per_Box_Numeric) {\n                let M2_PC_RM_Available = parseFloat(match.M2_PC_RM_Per_Box_Numeric) * parseFloat(Qty);\n                match.M2_PC_RM_Available = M2_PC_RM_Available.toString();\n            }\n            match.Qty = Qty;\n            match.Process = \"reTagging\";\n            match.source = \"FLOW\";\n\n            toUpdate.push(match);\n        }\n\n        // Deleting any previously associated HUITEMS\n        node.warn(\"+++++++++\");\n        const HU_id = resultItem._id;\n        node.warn(HU_id);\n        const body = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/\"+HU_id+\"\";\n\n        toDeactivate.push(body);\n    });\n\n    // Iterate and create the message to register a new HUITEM in vizix\n    for (let i = payloadM.length - 1; i >= 0; i--) {\n        const nmatch = toUpdate.find(mItem => \n            mItem.Material_Code === payloadM[i].Material_Code &&\n            mItem.Batch === payloadM[i].Batch\n        );\n\n        // Remove item from creation array if found\n        if (nmatch) {\n            payloadM.splice(i, 1);\n        } else {\n            // Ensure results[0] exists before accessing its properties\n            if (results[0]) {\n                payloadM[i].StorageLocation = results[0].RAKPALLET ? results[0].RAKPALLET.StorageLocation : \"\";\n                payloadM[i].LocationDetails = results[0].LocationDetails ? results[0].LocationDetails : \"\";\n                payloadM[i].Plant = results[0].Plant ? results[0].Plant : \"\";\n            } else {\n                payloadM[i].StorageLocation = \"\";\n                payloadM[i].LocationDetails = \"\";\n                payloadM[i].Plant = \"\";\n            }\n            payloadM[i].timestamp = new Date().getTime();\n            payloadM[i].Production_Date = new Date().getTime();\n            payloadM[i].lastDetectTime = new Date().getTime();\n            payloadM[i].Process = \"reTagging\";\n        }\n    }\n\n    if (payloadM.length > 0) {\n        node.warn(payloadM);\n        msg.payloadM = payloadM;\n        msg.create = true;\n    }\n    if (toUpdate.length > 0) {\n        node.warn(\"toUpdate:\");\n        msg.payloadU = toUpdate;\n        msg.update = true;\n    }\n    if (toDeactivate.length > 0) {\n        msg.payloadD = toDeactivate;\n        msg.deactivate = true;\n        msg.counterD = toDeactivate.length;\n    }\n\n    msg.payloadRES = {\"response\":\"Authorized. Processing reTagging for RAKPALLET: \" + msg.serialNumber, \"process\": \"reTagging\"};\n    msg.statusCode = 200;\n} else {\n    msg.payloadRES = {\"response\":\"No HUITEMS associated found, proceeding without deactivation\"};\n    msg.statusCode = 202;\n    msg.create = true;\n}\n\nreturn msg;\n\n// Function to transform a single result object\nfunction transformResult(result) {\n    const transformed = {\n        group: \">RAKCERAMICS\",\n        thingTypeCode: \"HUITEM\",\n        serialNumber: result.serialNumber,\n        name: result.serialNumber\n    };\n\n    node.warn(\"result\");\n    node.warn(result);\n\n    // Iterate through the properties of the result\n    for (const key in result) {\n        if (result.hasOwnProperty(key) && result[key] !== null && !excludeFields.has(key)) {\n            transformed[key] = result[key];\n        }\n    }\n\n    // Additional fixed property assignments\n    transformed.Process = \"reTagging\";\n    transformed.source = \"FLOW\";\n\n    return transformed;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 2220,
        "wires": [
            [
                "c9b679de.fbba98",
                "13540df3.5bb532",
                "5068ea54d6272251"
            ]
        ]
    },
    {
        "id": "c9b679de.fbba98",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1990,
        "y": 2260,
        "wires": []
    },
    {
        "id": "a1378413.d3d9e8",
        "type": "http response",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 2130,
        "y": 2160,
        "wires": []
    },
    {
        "id": "13540df3.5bb532",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "Response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadRES",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 2160,
        "wires": [
            [
                "a1378413.d3d9e8"
            ]
        ]
    },
    {
        "id": "5068ea54d6272251",
        "type": "subflow:6e0e5f0d2401051f",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 2000,
        "y": 2220,
        "wires": []
    },
    {
        "id": "5977a0dffe1db664",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Validate Request",
        "func": "// Function to check for special characters\nfunction containsSpecialChars(str) {\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    for (var i = 0; i < str.length; i++) {\n        if (splChars.indexOf(str.charAt(i)) !== -1) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Function to check if a value is non-empty and not null\nfunction isValidValue(value) {\n    return typeof value === 'string' && value.trim() !== '';\n}\n\n// Function to validate UDFs fields\nfunction validateUDFs(udfs) {\n    const udfsFields = ['Batch', 'Material', 'Qty', 'User'];\n    for (let field of udfsFields) {\n        const fieldValue = udfs[field] ? udfs[field].value : undefined;\n        if (!fieldValue || !isValidValue(fieldValue)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Validate the received request\nvar headers = msg.req.headers;\n\n// Check if the API key is correct\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials.\");\n    msg.payload = { \"response\": \"Unauthorized\" };\n    msg.statusCode = 401;\n    return [msg, null];\n} else {\n    node.warn(\"Authorized reTagging transaction, proceeding...\");\n    let results = msg.payload;\n\n    // Validate that all serialNumbers are the same\n    const allSameSerialNumbers = results.every(item => item.serialNumber === results[0].serialNumber);\n    if (!allSameSerialNumbers) {\n        msg.payload = { \"response\": \"Different QR codes are not accepted.\" };\n        msg.statusCode = 400;\n        return msg;\n    }\n    \n    for (let result of results) {\n        // Check for special characters in serialNumber\n        if (containsSpecialChars(result.serialNumber) || result.serialNumber.length < 18) {\n            msg.payload = { \"response\": \"Invalid QR code\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n\n        // Validate Material code length\n        if (result.udfs.Material && (result.udfs.Material.value.length > 18 || result.udfs.Material.value.length < 4)) {\n            msg.payload = { \"response\": \"Invalid MATERIAL code. Please review.\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n\n        // Validate UDFs\n        if (!validateUDFs(result.udfs)) {\n            msg.payload = { \"response\": \"Invalid UDFs. Missing or empty values detected.\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n    }\n    \n    msg.payloadOriginal = msg.payload;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2380,
        "wires": [
            [
                "6ee37731633e1f32"
            ]
        ]
    },
    {
        "id": "da4ce4489f7e0357",
        "type": "http response",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 1110,
        "y": 2366,
        "wires": []
    },
    {
        "id": "6ee37731633e1f32",
        "type": "switch",
        "z": "e35f4854.7d04a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 891,
        "y": 2380,
        "wires": [
            [
                "da4ce4489f7e0357"
            ],
            [
                "da4ce4489f7e0357"
            ],
            [
                "3949c826fdd5afee"
            ]
        ]
    },
    {
        "id": "3949c826fdd5afee",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nmsg.serialNumber = message[0].serialNumber;\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",message.length);\nglobal.set(\"tmp\",0);\n\nvar currentTime = new Date().getTime();\nvar IMserver = global.get(\"IMserver\");\n\n// Utility functions\nvar latinise = {};\nlatinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\n\n\n// Extend String prototype to include latinise method\nString.prototype.latinise = function() {\n    return this.replace(/[^A-Za-z0-9\\[\\] ]/g, function(a) {\n        return latinise.latin_map[a] || a;\n    });\n};\n\nfunction replaceSpecialCharsAndLatinize(str) {\n    str = String(str);\n    // Maps special characters to ASCII codes and removes spaces\n    let replacements = {\n        '#': '-35-', '.': '-46-', '/': '-47-', '(': '-40-', ')': '-41-'\n    };\n    return str.replace(/[#./()]/g, match => replacements[match])\n              .replace(/\\s/g, '')\n              .latinise();\n}\n\n// Processing\nvar toUpdateP = [], toUpdateM = [];\nmessage.forEach((item, index) => {\n    if (item.process !== 'reTagging') {\n        msg.payload = { \"response\": \"Invalid process declared for endpoint\" };\n        msg.statusCode = 400;\n        return msg;\n    }\n    \n    let serialNumber = item.serialNumber;\n    let process = item.process;\n    let userValue = item.udfs.User.value;\n    let batchValue = item.udfs.Batch.value;\n    //let location = item.udfs.location.value;\n    let materialValue = item.udfs.Material.value;\n    let qtyValue = item.udfs.Qty.value ? item.udfs.Qty.value : \"0\";\n    let materialMaster = replaceSpecialCharsAndLatinize(materialValue);\n    \n    let materialObj = {\n        Material: materialValue,\n        Material_Master: materialMaster,\n        Batch: batchValue,\n        Qty: qtyValue\n    };\n    \n    // Construct materials array\n    let bodyM = {\n        \"thingTypeCode\": \"HUITEM\",\n        \"serialNumber\": `${serialNumber}_${materialObj.Batch}_${materialObj.Material_Master}`,\n        \"source\": \"FLOW\",\n        \"RAKPALLET\": `${serialNumber}_${materialObj.Batch}_${materialObj.Material_Master}`,\n         \"name\": `${serialNumber}_${materialObj.Batch}_${materialObj.Material_Master}`,\n        \"Material_Code\": materialObj.Material,\n        \"Material_Master\": materialObj.Material_Master,\n        \"Batch\": materialObj.Batch,\n        \"huitem\": pad(index + 1, 6),\n        \"lastDetectTime\": new Date().getTime(),\n        \"timestamp\": new Date().getTime(),\n        //\"location\": location,\n        \"Process\": process\n    };\n    if (materialObj.Qty) bodyM[\"Qty\"] = materialObj.Qty;\n    toUpdateM.push(bodyM);\n    \n\n    // Pallet information\n    var bodyP = {\n        \"thingTypeCode\": \"RAKPALLET\",\n        \"timestamp\": currentTime,\n        \"TaggingDate\": currentTime,\n        \"ProcessTime\": currentTime,\n        \"serialNumber\": serialNumber,\n        \"name\": serialNumber,\n        \"source\": \"MOBILE_reTagging\",\n        \"facility\": \"RAKHQ\",\n        \"Status\": \"Active\",\n        \"User\": userValue,\n        \"Process\": process\n    };\n    toUpdateP = [bodyP]\n});\n\n// Return the updated message\nmsg.payloadP = toUpdateP;\nmsg.payloadM = toUpdateM;\nreturn msg;\n\n// Helper function for padding\nfunction pad(n, width, z = '0') {\n    n = n + '';\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2446,
        "wires": [
            [
                "a5d07bf10f90ed77"
            ]
        ]
    },
    {
        "id": "e3eca8cd6fa347bf",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1110,
        "y": 2506,
        "wires": []
    },
    {
        "id": "a5d07bf10f90ed77",
        "type": "switch",
        "z": "e35f4854.7d04a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 2446,
        "wires": [
            [
                "da4ce4489f7e0357"
            ],
            [
                "e3eca8cd6fa347bf",
                "3672bd043b5ef40c"
            ]
        ]
    },
    {
        "id": "3672bd043b5ef40c",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Find previous HUITEM",
        "func": "var server = global.get(\"server\");\n\nif(msg.serialNumber){\n    var serialNumber = msg.serialNumber;\n    msg.payload={\"serial\":serialNumber};\n}\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?serialNumber=\"+serialNumber+\"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 2466,
        "wires": [
            [
                "2824159b4998b80d"
            ]
        ]
    },
    {
        "id": "2824159b4998b80d",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 2466,
        "wires": [
            [
                "dd25bfb6a0ed8476",
                "2f3a32cad1130ed8"
            ]
        ]
    },
    {
        "id": "dd25bfb6a0ed8476",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1550,
        "y": 2466,
        "wires": [
            [
                "5d89ab5be03acb10",
                "6a82bc8518c60444"
            ]
        ]
    },
    {
        "id": "2f3a32cad1130ed8",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 2506,
        "wires": []
    },
    {
        "id": "5d89ab5be03acb10",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1710,
        "y": 2506,
        "wires": []
    },
    {
        "id": "6a82bc8518c60444",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Deactivate PREV HUITEM",
        "func": "const results = msg.payload;\nvar payloadM = msg.payloadM;\nnode.warn(results);\nvar toUpdate = [], toDeactivate = [];\nconst total = msg.payload.total;\n\nmsg.create = false;\nmsg.update = false;\nmsg.deactivate = false;\n\n// Specify fields to exclude\nconst excludeFields = new Set([\n  'id',\n  'serialNumber',\n  'thingTypeId',\n  'thing.headers',\n  'HUserial'\n]);\n\nif (total > 0) {\n    // Iterate over each result item from the vizix report\n    results.data.forEach(resultItem => {\n       \n        // Find a matching item in payloadM\n        var match = payloadM.find(mItem => \n            mItem.Material_Code === resultItem.Material_Code &&\n            mItem.Batch === resultItem.Batch\n        );\n\n        // Form an update message to be sent\n        if (match) {\n            const Qty = match.Qty;\n            match = transformResult(resultItem);\n            // Manually setting up the new Qty and Availability\n            if (match.M2_PC_RM_Per_Box_Numeric) {\n                let M2_PC_RM_Available = parseFloat(match.M2_PC_RM_Per_Box_Numeric) * parseFloat(Qty);\n                match.M2_PC_RM_Available = M2_PC_RM_Available.toString();\n            }\n            match.Qty = Qty;\n            match.Process = \"reTagging\";\n            match.source = \"FLOW\";\n\n            toUpdate.push(match);\n        }\n\n        // Deleting any previously associated HUITEMS\n        node.warn(\"+++++++++\");\n        const HU_id = resultItem._id;\n        node.warn(HU_id);\n        const body = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/\"+HU_id+\"\";\n\n        toDeactivate.push(body);\n    });\n\n    // Iterate and create the message to register a new HUITEM in vizix\n    for (let i = payloadM.length - 1; i >= 0; i--) {\n        const nmatch = toUpdate.find(mItem => \n            mItem.Material_Code === payloadM[i].Material_Code &&\n            mItem.Batch === payloadM[i].Batch\n        );\n\n        // Remove item from creation array if found\n        if (nmatch) {\n            payloadM.splice(i, 1);\n        } else {\n            // Ensure results[0] exists before accessing its properties\n            if (results[0]) {\n                payloadM[i].StorageLocation = results[0].RAKPALLET ? results[0].RAKPALLET.StorageLocation : \"\";\n                payloadM[i].LocationDetails = results[0].LocationDetails ? results[0].LocationDetails : \"\";\n                payloadM[i].Plant = results[0].Plant ? results[0].Plant : \"\";\n            } else {\n                payloadM[i].StorageLocation = \"\";\n                payloadM[i].LocationDetails = \"\";\n                payloadM[i].Plant = \"\";\n            }\n            payloadM[i].timestamp = new Date().getTime();\n            payloadM[i].Production_Date = new Date().getTime();\n            payloadM[i].lastDetectTime = new Date().getTime();\n            payloadM[i].Process = \"reTagging\";\n        }\n    }\n\n    if (payloadM.length > 0) {\n        node.warn(payloadM);\n        msg.payloadM = payloadM;\n        msg.create = true;\n    }\n    if (toUpdate.length > 0) {\n        node.warn(\"toUpdate:\");\n        msg.payloadU = toUpdate;\n        msg.update = true;\n    }\n    if (toDeactivate.length > 0) {\n        msg.payloadD = toDeactivate;\n        msg.deactivate = true;\n        msg.counterD = toDeactivate.length;\n    }\n\n    msg.payloadRES = {\"response\":\"Authorized. Processing reTagging for RAKPALLET: \" + msg.serialNumber, \"process\": \"reTagging\"};\n    msg.statusCode = 200;\n} else {\n    msg.payloadRES = {\"response\":\"No HUITEMS associated found, proceeding without deactivation\"};\n    msg.statusCode = 202;\n    msg.create = true;\n}\n\nreturn msg;\n\n// Function to transform a single result object\nfunction transformResult(result) {\n    const transformed = {\n        group: \">RAKCERAMICS\",\n        thingTypeCode: \"HUITEM\",\n        serialNumber: result.serialNumber,\n        name: result.serialNumber\n    };\n\n    node.warn(\"result\");\n    node.warn(result);\n\n    // Iterate through the properties of the result\n    for (const key in result) {\n        if (result.hasOwnProperty(key) && result[key] !== null && !excludeFields.has(key)) {\n            transformed[key] = result[key];\n        }\n    }\n\n    // Additional fixed property assignments\n    transformed.Process = \"reTagging\";\n    transformed.source = \"FLOW\";\n\n    return transformed;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 2466,
        "wires": [
            [
                "f3a7510dab5e51a2",
                "3abf0d6fc8030f79",
                "e668ab82e213d415"
            ]
        ]
    },
    {
        "id": "f3a7510dab5e51a2",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1990,
        "y": 2506,
        "wires": []
    },
    {
        "id": "1c320805fb295cd1",
        "type": "http response",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 2130,
        "y": 2406,
        "wires": []
    },
    {
        "id": "3abf0d6fc8030f79",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "Response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadRES",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 2406,
        "wires": [
            [
                "1c320805fb295cd1"
            ]
        ]
    },
    {
        "id": "e668ab82e213d415",
        "type": "subflow:6e0e5f0d2401051f",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 2020,
        "y": 2466,
        "wires": []
    },
    {
        "id": "54feeed42c200f93",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Validate Request",
        "func": "// Function to check for special characters\nfunction containsSpecialChars(str) {\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    for (var i = 0; i < str.length; i++) {\n        if (splChars.indexOf(str.charAt(i)) !== -1) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Function to check if a value is non-empty and not null\nfunction isValidValue(value) {\n    return typeof value === 'string' && value.trim() !== '';\n}\n\n// Function to validate UDFs fields\nfunction validateUDFs(udfs) {\n    const udfsFields = ['Batch', 'Material', 'Qty', 'User'];\n    for (let field of udfsFields) {\n        const fieldValue = udfs[field] ? udfs[field].value : undefined;\n        if (!fieldValue || !isValidValue(fieldValue)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Validate the received request\nvar headers = msg.req.headers;\n\n// Check if the API key is correct\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials.\");\n    msg.payload = { \"response\": \"Unauthorized\" };\n    msg.statusCode = 401;\n    return [msg, null];\n} else {\n    node.warn(\"Authorized reTagging transaction, proceeding...\");\n    let results = msg.payload;\n\n    // Validate that all serialNumbers are the same\n    const allSameSerialNumbers = results.every(item => item.serialNumber === results[0].serialNumber);\n    if (!allSameSerialNumbers) {\n        msg.payload = { \"response\": \"Different QR codes are not accepted.\" };\n        msg.statusCode = 400;\n        return msg;\n    }\n    \n    for (let result of results) {\n        // Check for special characters in serialNumber\n        if (containsSpecialChars(result.serialNumber) || result.serialNumber.length < 18) {\n            msg.payload = { \"response\": \"Invalid QR code\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n\n        // Validate Material code length\n        if (result.udfs.Material && (result.udfs.Material.value.length > 18 || result.udfs.Material.value.length < 4)) {\n            msg.payload = { \"response\": \"Invalid MATERIAL code. Please review.\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n\n        // Validate UDFs\n        if (!validateUDFs(result.udfs)) {\n            msg.payload = { \"response\": \"Invalid UDFs. Missing or empty values detected.\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n    }\n    \n    msg.payloadOriginal = msg.payload;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 2660,
        "wires": [
            [
                "e6958cc9e171b712"
            ]
        ]
    },
    {
        "id": "9c2bcff51bdd6928",
        "type": "http response",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 1110,
        "y": 2646,
        "wires": []
    },
    {
        "id": "e6958cc9e171b712",
        "type": "switch",
        "z": "e35f4854.7d04a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 891,
        "y": 2660,
        "wires": [
            [
                "9c2bcff51bdd6928"
            ],
            [
                "9c2bcff51bdd6928"
            ],
            [
                "c556db81b92c1dac"
            ]
        ]
    },
    {
        "id": "c556db81b92c1dac",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nmsg.serialNumber = message[0].serialNumber;\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",message.length);\nglobal.set(\"tmp\",0);\n\nvar currentTime = new Date().getTime();\nvar IMserver = global.get(\"IMserver\");\n\n// Utility functions\nvar latinise = {};\nlatinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\n\n\n// Extend String prototype to include latinise method\nString.prototype.latinise = function() {\n    return this.replace(/[^A-Za-z0-9\\[\\] ]/g, function(a) {\n        return latinise.latin_map[a] || a;\n    });\n};\n\nfunction replaceSpecialCharsAndLatinize(str) {\n    str = String(str);\n    // Maps special characters to ASCII codes and removes spaces\n    let replacements = {\n        '#': '-35-', '.': '-46-', '/': '-47-', '(': '-40-', ')': '-41-'\n    };\n    return str.replace(/[#./()]/g, match => replacements[match])\n              .replace(/\\s/g, '')\n              .latinise();\n}\n\n// Processing\nvar toUpdateP = [], toUpdateM = [];\nmessage.forEach((item, index) => {\n    if (item.process !== 'reTagging') {\n        msg.payload = { \"response\": \"Invalid process declared for endpoint\" };\n        msg.statusCode = 400;\n        return msg;\n    }\n    \n    let serialNumber = item.serialNumber;\n    let process = item.process;\n    let userValue = item.udfs.User.value;\n    let batchValue = item.udfs.Batch.value;\n    //let location = item.udfs.location.value;\n    let materialValue = item.udfs.Material.value;\n    let qtyValue = item.udfs.Qty.value ? item.udfs.Qty.value : \"0\";\n    let materialMaster = replaceSpecialCharsAndLatinize(materialValue);\n    \n    let materialObj = {\n        Material: materialValue,\n        Material_Master: materialMaster,\n        Batch: batchValue,\n        Qty: qtyValue\n    };\n    \n    // Construct materials array\n    let bodyM = {\n        \"thingTypeCode\": \"HUITEM\",\n        \"serialNumber\": `${serialNumber}_${materialObj.Batch}_${materialObj.Material_Master}`,\n        \"source\": \"FLOW\",\n        \"RAKPALLET\": `${serialNumber}_${materialObj.Batch}_${materialObj.Material_Master}`,\n         \"name\": `${serialNumber}_${materialObj.Batch}_${materialObj.Material_Master}`,\n        \"Material_Code\": materialObj.Material,\n        \"Material_Master\": materialObj.Material_Master,\n        \"Batch\": materialObj.Batch,\n        \"huitem\": pad(index + 1, 6),\n        \"lastDetectTime\": new Date().getTime(),\n        \"timestamp\": new Date().getTime(),\n        //\"location\": location,\n        \"Process\": process\n    };\n    if (materialObj.Qty) bodyM[\"Qty\"] = materialObj.Qty;\n    toUpdateM.push(bodyM);\n    \n\n    // Pallet information\n    var bodyP = {\n        \"thingTypeCode\": \"RAKPALLET\",\n        \"timestamp\": currentTime,\n        \"TaggingDate\": currentTime,\n        \"ProcessTime\": currentTime,\n        \"serialNumber\": serialNumber,\n        \"name\": serialNumber,\n        \"source\": \"MOBILE_reTagging\",\n        \"facility\": \"RAKHQ\",\n        \"Status\": \"Active\",\n        \"User\": userValue,\n        \"Process\": process\n    };\n    toUpdateP = [bodyP]\n});\n\n// Return the updated message\nmsg.payloadP = toUpdateP;\nmsg.payloadM = toUpdateM;\nreturn msg;\n\n// Helper function for padding\nfunction pad(n, width, z = '0') {\n    n = n + '';\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2726,
        "wires": [
            [
                "600701e6bb912725"
            ]
        ]
    },
    {
        "id": "348619700ee0df20",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1110,
        "y": 2786,
        "wires": []
    },
    {
        "id": "600701e6bb912725",
        "type": "switch",
        "z": "e35f4854.7d04a8",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 2726,
        "wires": [
            [
                "9c2bcff51bdd6928"
            ],
            [
                "348619700ee0df20",
                "e049fd7ef2a5dcc6"
            ]
        ]
    },
    {
        "id": "e049fd7ef2a5dcc6",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Find previous HUITEM",
        "func": "var server = global.get(\"server\");\n\nif(msg.serialNumber){\n    var serialNumber = msg.serialNumber;\n    msg.payload={\"serial\":serialNumber};\n}\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?serialNumber=\"+serialNumber+\"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 2746,
        "wires": [
            [
                "33331352fd3476cc"
            ]
        ]
    },
    {
        "id": "33331352fd3476cc",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 2746,
        "wires": [
            [
                "1ed30a3ca4fa0c7e",
                "5ce464a388050901"
            ]
        ]
    },
    {
        "id": "1ed30a3ca4fa0c7e",
        "type": "http request",
        "z": "e35f4854.7d04a8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1550,
        "y": 2746,
        "wires": [
            [
                "a4c6a902ac5f2839",
                "8bafcc689e536911"
            ]
        ]
    },
    {
        "id": "5ce464a388050901",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1530,
        "y": 2786,
        "wires": []
    },
    {
        "id": "a4c6a902ac5f2839",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1710,
        "y": 2786,
        "wires": []
    },
    {
        "id": "8bafcc689e536911",
        "type": "function",
        "z": "e35f4854.7d04a8",
        "name": "Deactivate PREV HUITEM",
        "func": "const results = msg.payload;\nvar payloadM = msg.payloadM;\nnode.warn(results);\nvar toUpdate = [], toDeactivate = [];\nconst total = msg.payload.total;\n\nmsg.create = false;\nmsg.update = false;\nmsg.deactivate = false;\n\n// Specify fields to exclude\nconst excludeFields = new Set([\n  'id',\n  'serialNumber',\n  'thingTypeId',\n  'thing.headers',\n  'HUserial'\n]);\n\nif (total > 0) {\n    // Iterate over each result item from the vizix report\n    results.data.forEach(resultItem => {\n       \n        // Find a matching item in payloadM\n        var match = payloadM.find(mItem => \n            mItem.Material_Code === resultItem.Material_Code &&\n            mItem.Batch === resultItem.Batch\n        );\n\n        // Form an update message to be sent\n        if (match) {\n            const Qty = match.Qty;\n            match = transformResult(resultItem);\n            // Manually setting up the new Qty and Availability\n            if (match.M2_PC_RM_Per_Box_Numeric) {\n                let M2_PC_RM_Available = parseFloat(match.M2_PC_RM_Per_Box_Numeric) * parseFloat(Qty);\n                match.M2_PC_RM_Available = M2_PC_RM_Available.toString();\n            }\n            match.Qty = Qty;\n            match.Process = \"reTagging\";\n            match.source = \"FLOW\";\n\n            toUpdate.push(match);\n        }\n\n        // Deleting any previously associated HUITEMS\n        node.warn(\"+++++++++\");\n        const HU_id = resultItem._id;\n        node.warn(HU_id);\n        const body = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/\"+HU_id+\"\";\n\n        toDeactivate.push(body);\n    });\n\n    // Iterate and create the message to register a new HUITEM in vizix\n    for (let i = payloadM.length - 1; i >= 0; i--) {\n        const nmatch = toUpdate.find(mItem => \n            mItem.Material_Code === payloadM[i].Material_Code &&\n            mItem.Batch === payloadM[i].Batch\n        );\n\n        // Remove item from creation array if found\n        if (nmatch) {\n            payloadM.splice(i, 1);\n        } else {\n            // Ensure results[0] exists before accessing its properties\n            if (results[0]) {\n                payloadM[i].StorageLocation = results[0].RAKPALLET ? results[0].RAKPALLET.StorageLocation : \"\";\n                payloadM[i].LocationDetails = results[0].LocationDetails ? results[0].LocationDetails : \"\";\n                payloadM[i].Plant = results[0].Plant ? results[0].Plant : \"\";\n            } else {\n                payloadM[i].StorageLocation = \"\";\n                payloadM[i].LocationDetails = \"\";\n                payloadM[i].Plant = \"\";\n            }\n            payloadM[i].timestamp = new Date().getTime();\n            payloadM[i].Production_Date = new Date().getTime();\n            payloadM[i].lastDetectTime = new Date().getTime();\n            payloadM[i].Process = \"reTagging\";\n        }\n    }\n\n    if (payloadM.length > 0) {\n        node.warn(payloadM);\n        msg.payloadM = payloadM;\n        msg.create = true;\n    }\n    if (toUpdate.length > 0) {\n        node.warn(\"toUpdate:\");\n        msg.payloadU = toUpdate;\n        msg.update = true;\n    }\n    if (toDeactivate.length > 0) {\n        msg.payloadD = toDeactivate;\n        msg.deactivate = true;\n        msg.counterD = toDeactivate.length;\n    }\n\n    msg.payloadRES = {\"response\":\"Authorized. Processing reTagging for RAKPALLET: \" + msg.serialNumber, \"process\": \"reTagging\"};\n    msg.statusCode = 200;\n} else {\n    msg.payloadRES = {\"response\":\"No HUITEMS associated found, proceeding without deactivation\"};\n    msg.statusCode = 202;\n    msg.create = true;\n}\n\nreturn msg;\n\n// Function to transform a single result object\nfunction transformResult(result) {\n    const transformed = {\n        group: \">RAKCERAMICS\",\n        thingTypeCode: \"HUITEM\",\n        serialNumber: result.serialNumber,\n        name: result.serialNumber\n    };\n\n    node.warn(\"result\");\n    node.warn(result);\n\n    // Iterate through the properties of the result\n    for (const key in result) {\n        if (result.hasOwnProperty(key) && result[key] !== null && !excludeFields.has(key)) {\n            transformed[key] = result[key];\n        }\n    }\n\n    // Additional fixed property assignments\n    transformed.Process = \"reTagging\";\n    transformed.source = \"FLOW\";\n\n    return transformed;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 2740,
        "wires": [
            [
                "516ef9065143f6d8",
                "78bc4c87df819b55",
                "a821c56fb4f80e33"
            ]
        ]
    },
    {
        "id": "516ef9065143f6d8",
        "type": "debug",
        "z": "e35f4854.7d04a8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1990,
        "y": 2786,
        "wires": []
    },
    {
        "id": "3f4d8ca355708243",
        "type": "http response",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 2130,
        "y": 2686,
        "wires": []
    },
    {
        "id": "78bc4c87df819b55",
        "type": "change",
        "z": "e35f4854.7d04a8",
        "name": "Response",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadRES",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 2686,
        "wires": [
            [
                "3f4d8ca355708243"
            ]
        ]
    },
    {
        "id": "a821c56fb4f80e33",
        "type": "subflow:6e0e5f0d2401051f",
        "z": "e35f4854.7d04a8",
        "name": "",
        "x": 2020,
        "y": 2746,
        "wires": []
    },
    {
        "id": "64cb0478.61d5cc",
        "type": "function",
        "z": "8bef0c82.c29b9",
        "name": "",
        "func": "\nmsg.filename = \"/transfer/\"+msg.image[0][1]+\"/pallet_\"+msg.image[0][1]+\".png\";\nmsg.payload2={response:\"Image found. Stored.\",updateURL:\"https://iotimages.rakceramics.com/\"+msg.image[0][1]+\"/pallet_\"+msg.image[0][1]+\".png\"};\nmsg.payload = msg.image[0][0];\n//msg.payload2 = \"Image found. Stored.\";\nmsg.statusCode = 200;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 420,
        "wires": [
            [
                "69cba2bb.e73c8c",
                "69436d9b1da6d899"
            ]
        ]
    },
    {
        "id": "5aab556b.c3a8cc",
        "type": "file",
        "z": "8bef0c82.c29b9",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "x": 1020,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b9d07e.b282af8",
        "type": "switch",
        "z": "8bef0c82.c29b9",
        "name": "",
        "property": "image.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 480,
        "wires": [
            [
                "81fee1b8.56947"
            ],
            [
                "3b9a2ace.72bdb6"
            ]
        ]
    },
    {
        "id": "81fee1b8.56947",
        "type": "splitter",
        "z": "8bef0c82.c29b9",
        "name": "",
        "property": "image",
        "x": 730,
        "y": 420,
        "wires": [
            [
                "64cb0478.61d5cc"
            ]
        ]
    },
    {
        "id": "fcbb56f0.4d1d48",
        "type": "http response",
        "z": "8bef0c82.c29b9",
        "name": "",
        "x": 770,
        "y": 100,
        "wires": []
    },
    {
        "id": "73a481ee.a8e67",
        "type": "function",
        "z": "8bef0c82.c29b9",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nvar zone = \"\";\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",message.length);\nglobal.set(\"tmp\",0);\nvar IMserver = global.get(\"IMserver\");\n\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar serialArrKeyHolder = [];\nvar palletArr = [];\nmessage.forEach(function(item){\n    var arrKey = \"{\\\"serialNumber\\\":\\\"\"+item.serialNumber+\"\\\",\"+\n                \"\\\"User\\\":\\\"\"+item.udfs.User.value+\"\\\",\"+\n                \"\\\"UUIDMobile\\\":\\\"\"+item.udfs.UUIDMobile.value+\"\\\"\";\n    if(item.image){\n        arrKey+=\",\\\"Image\\\":\\\"\"+item.image+\"\\\"\";\n    }\n    if(item.udfs.location || item.udfs.zone){\n        if(item.udfs.location && (!item.udfs.zone || item.udfs.zone.value === \"\" )){\n            arrKey+=\",\\\"location\\\":\\\"\"+item.udfs.location.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the LOCATION value: \"+item.udfs.location.value);\n        }\n        if(item.udfs.zone && item.udfs.zone.value !== \"\" ){\n            arrKey+=\",\\\"zone\\\":\\\"\"+item.udfs.zone.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the ZONE value: \"+item.udfs.zone.value);\n        }\n    }\n    if(item.udfs.LocationDetails){\n        arrKey+=\",\\\"LocationDetails\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n        arrKey+=\",\\\"Plant\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(item.udfs.StorageLocation){\n        arrKey+=\",\\\"StorageLocation\\\":\\\"\"+item.udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(item.udfs.BinLocation){\n        arrKey+=\",\\\"BinLocation\\\":\\\"\"+item.udfs.BinLocation.value+\"\\\"\";\n    }\n    if(item.udfs.Lane){\n        arrKey+=\",\\\"Lane\\\":\\\"\"+item.udfs.Lane.value+\"\\\"\";\n    }\n    if(item.udfs.L5Location){\n        arrKey+=\",\\\"L5Location\\\":\\\"\"+item.udfs.L5Location.value+\"\\\"\";\n    }\n    arrKey+=\"}\";\n\n    var key = [arrKey];\n    //node.warn(key)\n    serialArrKeyHolder[key] = serialArrKeyHolder[key]||{};\n    var obj = serialArrKeyHolder[key];\n    if(Object.keys(obj).length === 0){\n        palletArr.push({obj});\n    }\n    obj.key = JSON.parse(key);\n    obj.materials  = obj.materials || [];\n        var arrMaterials = \"{\"+\n        \"\\\"Material\\\":\\\"\"+item.udfs.Material.value+\"\\\", \"+\n        \"\\\"Batch\\\":\\\"\"+item.udfs.Batch.value+\"\\\"\";\n    if(item.udfs.Qty){\n        arrMaterials+=\", \\\"Qty\\\":\\\"\"+item.udfs.Qty.value+\"\\\"\";\n    }\n    arrMaterials+=\"}\";\n    obj.materials.push(JSON.parse(arrMaterials));\n\n});\n\nfor(var i=0;i < palletArr.length;i++){\n    palletArr[i] = palletArr[i].obj\n}\n\nvar toUpdateP = [];\nvar toUpdateM = [];\nvar toStore = [];\nvar image = [];\nvar results = palletArr;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n//node.warn(results);\nfor(var j=0;j < results.length;j++){\n    msg.Process = \"Tagging\";\n    //SETTING UP HUITEM INFORMATION\n    for(var k=0;k < results[j].materials.length;k++){\n        var Material = results[j].materials[k].Material;\n        var Material_Master = Material;\n        \n        Material_Master = Material_Master.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n        Material_Master = Material_Master.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n        Material_Master = Material_Master.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n        Material_Master = Material_Master.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n        Material_Master = Material_Master.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n        Material_Master = Material_Master.latinize(); //Removing diacritics\n        Material_Master = Material_Master.replace(/\\s/g, ''); //Removing spaces\n        \n        var hu = k+1;\n        \n        var bodyM = \"{\"+\n            \"\\\"thingTypeCode\\\":\\\"HUITEM\\\",\"+\n            \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"_\" +  results[j].materials[k].Batch + \"_\" + Material_Master + \"\\\",\"+\n            \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n            \"\\\"Production_Date\\\":\"+ currentTime + \",\"+\n            \"\\\"source\\\":\\\"FLOW_Tagging\\\",\"+\n            \"\\\"RAKPALLET\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n            \"\\\"Material_Code\\\":\\\"\"+ Material + \"\\\",\"+\n            \"\\\"Material_Master\\\":\\\"\"+ Material_Master + \"\\\",\"+\n            \"\\\"Batch\\\":\\\"\"+ results[j].materials[k].Batch + \"\\\",\"+\n            \"\\\"huitem\\\":\\\"\"+ pad(hu,6) + \"\\\"\";\n        if(results[j].materials[k].Qty){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            bodyM+=\"\\\"Qty\\\":\\\"\"+results[j].materials[k].Qty+\"\\\",\";\n            //****************** TEMPORARILY REMOVING THE RETAGGING PROCESS - 30/06/2021\n            //msg.Process = \"reTagging\";\n        }\n        if(results[j].key.location || results[j].key.zone){\n            if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n            }\n            if(results[j].key.zone && results[j].key.zone !== \"\"){\n                zone = results[j].key.zone;\n                zone = zone.replace(/[&]/g, \"\");\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n            }\n        }\n        if(results[j].key.LocationDetails){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            //node.warn(\"setting LocationDetails: \"+results[j].key.LocationDetails)\n            bodyM+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n            bodyM+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n        }\n        if(results[j].key.StorageLocation){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n           }\n           //node.warn(\"setting StorageLocation: \"+results[j].key.StorageLocation)\n            bodyM+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n        }\n        if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n        }\n        bodyM+=\"\\\"Process\\\":\\\"\"+msg.Process+\"\\\"}\";\n        toUpdateM.push(JSON.parse(bodyM));\n    }\n    \n    if(results[j].key.Image){\n        toStore[0] = results[j].key.Image;\n        toStore[1] = results[j].key.serialNumber;\n        image.push(toStore);\n    }\n    \n    //SETTING UP PALLET INFORMATION\n    var bodyP = \"{\"+\n        \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\"+\n        \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n        \"\\\"TaggingDate\\\":\"+ currentTime + \",\"+\n        \"\\\"ProcessTime\\\":\"+ currentTime + \",\"+\n        \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n        \"\\\"source\\\":\\\"MOBILE_Tagging\\\",\"+\n        \"\\\"facility\\\":\\\"RAKHQ\\\",\"+\n        \"\\\"Status\\\":\\\"Active\\\",\"+\n        \"\\\"User\\\":\\\"\"+ results[j].key.User + \"\\\",\"+\n        \"\\\"UUIDMobile\\\":\\\"\"+ results[j].key.UUIDMobile + \"\\\",\"+\n        \"\\\"Process\\\":\\\"\"+msg.Process+\"\\\"\";\n    if(results[j].key.Image){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"Image\\\":\\\"\"+IMserver+\"/\"+results[j].key.serialNumber+\"/pallet_\"+results[j].key.serialNumber+\".png\\\"\";\n    }\n    if(results[j].key.location || results[j].key.zone){\n        if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n        }\n        if(results[j].key.zone && results[j].key.zone !== \"\"){\n            zone = results[j].key.zone;\n            zone = zone.replace(/[&]/g, \"\");\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n        }\n    }\n    if(results[j].key.LocationDetails){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n        bodyP+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n    }\n    if(results[j].key.StorageLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n    }\n    if(results[j].key.BinLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"BinLocation\\\":\\\"\"+results[j].key.BinLocation+\"\\\"\";\n    }\n    if(results[j].key.Lane){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"Lane\\\":\\\"\"+results[j].key.Lane+\"\\\"\";\n    }\n    if(results[j].key.L5Location){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"L5Location\\\":\\\"\"+results[j].key.L5Location+\"\\\"\";\n    }\n    bodyP+=\"}\";\n    \n    toUpdateP.push(JSON.parse(bodyP));\n\n}\n\n//node.warn(\"String of messages To Update: \" + toUpdateP);\nmsg.image=image;\nmsg.payloadP=toUpdateP;\nmsg.payloadM=toUpdateM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 480,
        "wires": [
            [
                "61ce3cfc.4e1084",
                "b9d07e.b282af8"
            ]
        ]
    },
    {
        "id": "5355331.b7f7ccc",
        "type": "http in",
        "z": "8bef0c82.c29b9",
        "name": "SAVE EMPTY IMAGE",
        "url": "/UPDATEIMAGE",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "59794965.ad5188"
            ]
        ]
    },
    {
        "id": "59794965.ad5188",
        "type": "function",
        "z": "8bef0c82.c29b9",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar message = msg.payload;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Image search in progress, proceeding... \");\n    var shortDate = message.shortDate;\n    var location = shortDate.substr(0, shortDate.indexOf('-'));\n    location = location+\"-2021\";\n    var filename = \"2021-\"+shortDate;\n    msg.filename = '/flows/logs/TAGGING/'+ location + '/inbound/' + filename + '.txt';\n    var serial = msg.payload;\n    serial = serial.serialNumber;\n    global.set(\"serial\", serial);\n    global.set(\"req\", msg.req);\n    global.set(\"res\", msg.res);\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "bb9b77cf.f2ebd8",
                "79fb265e.46d308",
                "32342205.761f0e"
            ]
        ]
    },
    {
        "id": "bb9b77cf.f2ebd8",
        "type": "switch",
        "z": "8bef0c82.c29b9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 591,
        "y": 140,
        "wires": [
            [
                "fcbb56f0.4d1d48"
            ],
            [
                "fcbb56f0.4d1d48"
            ],
            []
        ]
    },
    {
        "id": "59ead7e.58a3a28",
        "type": "function",
        "z": "8bef0c82.c29b9",
        "name": "Categorize",
        "func": "var serial = global.get('serial');\nvar results = msg.payload;\nvar response = [];\nmsg.req = global.get('req');\nmsg.res = global.get('res');\n                \nif(results){\n    for(i=0;i<results.length;i++){\n            \n        if(serial === results[i].serialNumber){\n            node.warn(\"found it\");\n            response.push(results[i])\n            msg.payload=response;\n            msg.toProcess = 1;\n            return msg;\n        }\n        else{\n            msg.payload2 = serial+\" - NOT found\";\n            msg.statusCode = 204;\n            msg.toProcess = 0;\n        }\n    }\n}\nelse{\n    msg.payload2 = \"Source file NOT found\";\n    msg.statusCode = 204;\n    msg.toProcess = 0;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 240,
        "wires": [
            [
                "18970716.8c5ba9"
            ]
        ]
    },
    {
        "id": "18970716.8c5ba9",
        "type": "switch",
        "z": "8bef0c82.c29b9",
        "name": "",
        "property": "toProcess",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 320,
        "wires": [
            [
                "ad82a34d.6de9b"
            ],
            [
                "73a481ee.a8e67"
            ]
        ]
    },
    {
        "id": "ad82a34d.6de9b",
        "type": "http response",
        "z": "8bef0c82.c29b9",
        "name": "",
        "x": 670,
        "y": 300,
        "wires": []
    },
    {
        "id": "8698f896.e651a8",
        "type": "http response",
        "z": "8bef0c82.c29b9",
        "name": "",
        "x": 1150,
        "y": 420,
        "wires": []
    },
    {
        "id": "69cba2bb.e73c8c",
        "type": "change",
        "z": "8bef0c82.c29b9",
        "name": "topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload2",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 420,
        "wires": [
            [
                "8698f896.e651a8"
            ]
        ]
    },
    {
        "id": "32342205.761f0e",
        "type": "file in",
        "z": "8bef0c82.c29b9",
        "name": "",
        "filename": "",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "x": 170,
        "y": 240,
        "wires": [
            [
                "cbda6fc3.567c9"
            ]
        ]
    },
    {
        "id": "1c02d5c3.d7df3a",
        "type": "debug",
        "z": "8bef0c82.c29b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 270,
        "y": 320,
        "wires": []
    },
    {
        "id": "79fb265e.46d308",
        "type": "debug",
        "z": "8bef0c82.c29b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "cbda6fc3.567c9",
        "type": "json",
        "z": "8bef0c82.c29b9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 240,
        "wires": [
            [
                "59ead7e.58a3a28",
                "1c02d5c3.d7df3a"
            ]
        ]
    },
    {
        "id": "61ce3cfc.4e1084",
        "type": "debug",
        "z": "8bef0c82.c29b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "3b9a2ace.72bdb6",
        "type": "function",
        "z": "8bef0c82.c29b9",
        "name": "Categorize",
        "func": "var serial = global.get('serial');\nmsg.payload = {response:serial+\" has NO image! \"};\nmsg.statusCode = 202;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 520,
        "wires": [
            [
                "f77017cc.f17e98"
            ]
        ]
    },
    {
        "id": "f77017cc.f17e98",
        "type": "http response",
        "z": "8bef0c82.c29b9",
        "name": "",
        "x": 1070,
        "y": 520,
        "wires": []
    },
    {
        "id": "f445bee4.bd466",
        "type": "link out",
        "z": "8bef0c82.c29b9",
        "name": "TMP_out",
        "links": [
            "29fc5e3f.da86b2",
            "bfba57b4.69d6a8",
            "e6d34501.f7a558",
            "6239b620.499048",
            "43ed0f72.8afe2",
            "c975d7a.2fa0e28",
            "959699dcc1a1e2d4",
            "35105c78a5202368"
        ],
        "x": 995,
        "y": 280,
        "wires": []
    },
    {
        "id": "4b89b37f.d4c5dc",
        "type": "function",
        "z": "8bef0c82.c29b9",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar counterg = Math.ceil((message.length)/50);\nvar zone = \"\";\nglobal.set(\"counter\",counterg);\nglobal.set(\"toprocess\",message.length);\nglobal.set(\"tmp\",0);\nvar IMserver = global.get(\"IMserver\");\n\n//node.warn(\"counter divided by 500: \" + counterg);\n\nvar currentTime = new Date().getTime();\n//node.warn(\"CURRENT TIME FOR TAGGED ITEMS: \"+currentTime);\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar serialArrKeyHolder = [];\nvar palletArr = [];\nmessage.forEach(function(item){\n    var arrKey = \"{\\\"serialNumber\\\":\\\"\"+item.serialNumber+\"\\\",\"+\n                \"\\\"User\\\":\\\"\"+item.udfs.User.value+\"\\\",\"+\n                \"\\\"PalletType\\\":\\\"\"+item.type+\"\\\",\"+\n                \"\\\"UUIDMobile\\\":\\\"\"+item.udfs.UUIDMobile.value+\"\\\"\";\n    if(item.image){\n        arrKey+=\",\\\"Image\\\":\\\"\"+item.image+\"\\\"\";\n    }\n    if(item.udfs.location || item.udfs.zone){\n        if(item.udfs.location && (!item.udfs.zone || item.udfs.zone.value === \"\" )){\n            arrKey+=\",\\\"location\\\":\\\"\"+item.udfs.location.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the LOCATION value: \"+item.udfs.location.value);\n        }\n        if(item.udfs.zone && item.udfs.zone.value !== \"\" ){\n            arrKey+=\",\\\"zone\\\":\\\"\"+item.udfs.zone.value+\"\\\"\";\n\t\t\t//node.warn(\"storing the ZONE value: \"+item.udfs.zone.value);\n        }\n    }\n    if(item.udfs.LocationDetails){\n        arrKey+=\",\\\"LocationDetails\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n        arrKey+=\",\\\"Plant\\\":\\\"\"+item.udfs.LocationDetails.value+\"\\\"\";\n    }\n    if(item.udfs.StorageLocation){\n        arrKey+=\",\\\"StorageLocation\\\":\\\"\"+item.udfs.StorageLocation.value+\"\\\"\";\n    }\n    if(item.udfs.BinLocation){\n        arrKey+=\",\\\"BinLocation\\\":\\\"\"+item.udfs.BinLocation.value+\"\\\"\";\n    }\n    if(item.udfs.Lane){\n        arrKey+=\",\\\"Lane\\\":\\\"\"+item.udfs.Lane.value+\"\\\"\";\n    }\n    if(item.udfs.L5Location){\n        arrKey+=\",\\\"L5Location\\\":\\\"\"+item.udfs.L5Location.value+\"\\\"\";\n    }\n    arrKey+=\"}\";\n\n    var key = [arrKey];\n    //node.warn(key)\n    serialArrKeyHolder[key] = serialArrKeyHolder[key]||{};\n    var obj = serialArrKeyHolder[key];\n    if(Object.keys(obj).length === 0){\n        palletArr.push({obj});\n    }\n    obj.key = JSON.parse(key);\n    obj.materials  = obj.materials || [];\n        var arrMaterials = \"{\"+\n        \"\\\"Material\\\":\\\"\"+item.udfs.Material.value+\"\\\", \"+\n        \"\\\"Batch\\\":\\\"\"+item.udfs.Batch.value+\"\\\"\";\n    if(item.udfs.Qty){\n        arrMaterials+=\", \\\"Qty\\\":\\\"\"+item.udfs.Qty.value+\"\\\"\";\n    }\n    arrMaterials+=\"}\";\n    obj.materials.push(JSON.parse(arrMaterials));\n\n});\n\nfor(var i=0;i < palletArr.length;i++){\n    palletArr[i] = palletArr[i].obj\n}\n\nvar toUpdateP = [];\nvar toUpdateM = [];\nvar toStore = [];\nvar image = [];\nvar results = palletArr;\n\nvar Latinise={};Latinise.latin_map={\"Á\":\"A\",\"Ă\":\"A\",\"Ắ\":\"A\",\"Ặ\":\"A\",\"Ằ\":\"A\",\"Ẳ\":\"A\",\"Ẵ\":\"A\",\"Ǎ\":\"A\",\"Â\":\"A\",\"Ấ\":\"A\",\"Ậ\":\"A\",\"Ầ\":\"A\",\"Ẩ\":\"A\",\"Ẫ\":\"A\",\"Ä\":\"A\",\"Ǟ\":\"A\",\"Ȧ\":\"A\",\"Ǡ\":\"A\",\"Ạ\":\"A\",\"Ȁ\":\"A\",\"À\":\"A\",\"Ả\":\"A\",\"Ȃ\":\"A\",\"Ā\":\"A\",\"Ą\":\"A\",\"Å\":\"A\",\"Ǻ\":\"A\",\"Ḁ\":\"A\",\"Ⱥ\":\"A\",\"Ã\":\"A\",\"Ꜳ\":\"AA\",\"Æ\":\"AE\",\"Ǽ\":\"AE\",\"Ǣ\":\"AE\",\"Ꜵ\":\"AO\",\"Ꜷ\":\"AU\",\"Ꜹ\":\"AV\",\"Ꜻ\":\"AV\",\"Ꜽ\":\"AY\",\"Ḃ\":\"B\",\"Ḅ\":\"B\",\"Ɓ\":\"B\",\"Ḇ\":\"B\",\"Ƀ\":\"B\",\"Ƃ\":\"B\",\"Ć\":\"C\",\"Č\":\"C\",\"Ç\":\"C\",\"Ḉ\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Ƈ\":\"C\",\"Ȼ\":\"C\",\"Ď\":\"D\",\"Ḑ\":\"D\",\"Ḓ\":\"D\",\"Ḋ\":\"D\",\"Ḍ\":\"D\",\"Ɗ\":\"D\",\"Ḏ\":\"D\",\"ǲ\":\"D\",\"ǅ\":\"D\",\"Đ\":\"D\",\"Ƌ\":\"D\",\"Ǳ\":\"DZ\",\"Ǆ\":\"DZ\",\"É\":\"E\",\"Ĕ\":\"E\",\"Ě\":\"E\",\"Ȩ\":\"E\",\"Ḝ\":\"E\",\"Ê\":\"E\",\"Ế\":\"E\",\"Ệ\":\"E\",\"Ề\":\"E\",\"Ể\":\"E\",\"Ễ\":\"E\",\"Ḙ\":\"E\",\"Ë\":\"E\",\"Ė\":\"E\",\"Ẹ\":\"E\",\"Ȅ\":\"E\",\"È\":\"E\",\"Ẻ\":\"E\",\"Ȇ\":\"E\",\"Ē\":\"E\",\"Ḗ\":\"E\",\"Ḕ\":\"E\",\"Ę\":\"E\",\"Ɇ\":\"E\",\"Ẽ\":\"E\",\"Ḛ\":\"E\",\"Ꝫ\":\"ET\",\"Ḟ\":\"F\",\"Ƒ\":\"F\",\"Ǵ\":\"G\",\"Ğ\":\"G\",\"Ǧ\":\"G\",\"Ģ\":\"G\",\"Ĝ\":\"G\",\"Ġ\":\"G\",\"Ɠ\":\"G\",\"Ḡ\":\"G\",\"Ǥ\":\"G\",\"Ḫ\":\"H\",\"Ȟ\":\"H\",\"Ḩ\":\"H\",\"Ĥ\":\"H\",\"Ⱨ\":\"H\",\"Ḧ\":\"H\",\"Ḣ\":\"H\",\"Ḥ\":\"H\",\"Ħ\":\"H\",\"Í\":\"I\",\"Ĭ\":\"I\",\"Ǐ\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ḯ\":\"I\",\"İ\":\"I\",\"Ị\":\"I\",\"Ȉ\":\"I\",\"Ì\":\"I\",\"Ỉ\":\"I\",\"Ȋ\":\"I\",\"Ī\":\"I\",\"Į\":\"I\",\"Ɨ\":\"I\",\"Ĩ\":\"I\",\"Ḭ\":\"I\",\"Ꝺ\":\"D\",\"Ꝼ\":\"F\",\"Ᵹ\":\"G\",\"Ꞃ\":\"R\",\"Ꞅ\":\"S\",\"Ꞇ\":\"T\",\"Ꝭ\":\"IS\",\"Ĵ\":\"J\",\"Ɉ\":\"J\",\"Ḱ\":\"K\",\"Ǩ\":\"K\",\"Ķ\":\"K\",\"Ⱪ\":\"K\",\"Ꝃ\":\"K\",\"Ḳ\":\"K\",\"Ƙ\":\"K\",\"Ḵ\":\"K\",\"Ꝁ\":\"K\",\"Ꝅ\":\"K\",\"Ĺ\":\"L\",\"Ƚ\":\"L\",\"Ľ\":\"L\",\"Ļ\":\"L\",\"Ḽ\":\"L\",\"Ḷ\":\"L\",\"Ḹ\":\"L\",\"Ⱡ\":\"L\",\"Ꝉ\":\"L\",\"Ḻ\":\"L\",\"Ŀ\":\"L\",\"Ɫ\":\"L\",\"ǈ\":\"L\",\"Ł\":\"L\",\"Ǉ\":\"LJ\",\"Ḿ\":\"M\",\"Ṁ\":\"M\",\"Ṃ\":\"M\",\"Ɱ\":\"M\",\"Ń\":\"N\",\"Ň\":\"N\",\"Ņ\":\"N\",\"Ṋ\":\"N\",\"Ṅ\":\"N\",\"Ṇ\":\"N\",\"Ǹ\":\"N\",\"Ɲ\":\"N\",\"Ṉ\":\"N\",\"Ƞ\":\"N\",\"ǋ\":\"N\",\"Ñ\":\"N\",\"Ǌ\":\"NJ\",\"Ó\":\"O\",\"Ŏ\":\"O\",\"Ǒ\":\"O\",\"Ô\":\"O\",\"Ố\":\"O\",\"Ộ\":\"O\",\"Ồ\":\"O\",\"Ổ\":\"O\",\"Ỗ\":\"O\",\"Ö\":\"O\",\"Ȫ\":\"O\",\"Ȯ\":\"O\",\"Ȱ\":\"O\",\"Ọ\":\"O\",\"Ő\":\"O\",\"Ȍ\":\"O\",\"Ò\":\"O\",\"Ỏ\":\"O\",\"Ơ\":\"O\",\"Ớ\":\"O\",\"Ợ\":\"O\",\"Ờ\":\"O\",\"Ở\":\"O\",\"Ỡ\":\"O\",\"Ȏ\":\"O\",\"Ꝋ\":\"O\",\"Ꝍ\":\"O\",\"Ō\":\"O\",\"Ṓ\":\"O\",\"Ṑ\":\"O\",\"Ɵ\":\"O\",\"Ǫ\":\"O\",\"Ǭ\":\"O\",\"Ø\":\"O\",\"Ǿ\":\"O\",\"Õ\":\"O\",\"Ṍ\":\"O\",\"Ṏ\":\"O\",\"Ȭ\":\"O\",\"Ƣ\":\"OI\",\"Ꝏ\":\"OO\",\"Ɛ\":\"E\",\"Ɔ\":\"O\",\"Ȣ\":\"OU\",\"Ṕ\":\"P\",\"Ṗ\":\"P\",\"Ꝓ\":\"P\",\"Ƥ\":\"P\",\"Ꝕ\":\"P\",\"Ᵽ\":\"P\",\"Ꝑ\":\"P\",\"Ꝙ\":\"Q\",\"Ꝗ\":\"Q\",\"Ŕ\":\"R\",\"Ř\":\"R\",\"Ŗ\":\"R\",\"Ṙ\":\"R\",\"Ṛ\":\"R\",\"Ṝ\":\"R\",\"Ȑ\":\"R\",\"Ȓ\":\"R\",\"Ṟ\":\"R\",\"Ɍ\":\"R\",\"Ɽ\":\"R\",\"Ꜿ\":\"C\",\"Ǝ\":\"E\",\"Ś\":\"S\",\"Ṥ\":\"S\",\"Š\":\"S\",\"Ṧ\":\"S\",\"Ş\":\"S\",\"Ŝ\":\"S\",\"Ș\":\"S\",\"Ṡ\":\"S\",\"Ṣ\":\"S\",\"Ṩ\":\"S\",\"Ť\":\"T\",\"Ţ\":\"T\",\"Ṱ\":\"T\",\"Ț\":\"T\",\"Ⱦ\":\"T\",\"Ṫ\":\"T\",\"Ṭ\":\"T\",\"Ƭ\":\"T\",\"Ṯ\":\"T\",\"Ʈ\":\"T\",\"Ŧ\":\"T\",\"Ɐ\":\"A\",\"Ꞁ\":\"L\",\"Ɯ\":\"M\",\"Ʌ\":\"V\",\"Ꜩ\":\"TZ\",\"Ú\":\"U\",\"Ŭ\":\"U\",\"Ǔ\":\"U\",\"Û\":\"U\",\"Ṷ\":\"U\",\"Ü\":\"U\",\"Ǘ\":\"U\",\"Ǚ\":\"U\",\"Ǜ\":\"U\",\"Ǖ\":\"U\",\"Ṳ\":\"U\",\"Ụ\":\"U\",\"Ű\":\"U\",\"Ȕ\":\"U\",\"Ù\":\"U\",\"Ủ\":\"U\",\"Ư\":\"U\",\"Ứ\":\"U\",\"Ự\":\"U\",\"Ừ\":\"U\",\"Ử\":\"U\",\"Ữ\":\"U\",\"Ȗ\":\"U\",\"Ū\":\"U\",\"Ṻ\":\"U\",\"Ų\":\"U\",\"Ů\":\"U\",\"Ũ\":\"U\",\"Ṹ\":\"U\",\"Ṵ\":\"U\",\"Ꝟ\":\"V\",\"Ṿ\":\"V\",\"Ʋ\":\"V\",\"Ṽ\":\"V\",\"Ꝡ\":\"VY\",\"Ẃ\":\"W\",\"Ŵ\":\"W\",\"Ẅ\":\"W\",\"Ẇ\":\"W\",\"Ẉ\":\"W\",\"Ẁ\":\"W\",\"Ⱳ\":\"W\",\"Ẍ\":\"X\",\"Ẋ\":\"X\",\"Ý\":\"Y\",\"Ŷ\":\"Y\",\"Ÿ\":\"Y\",\"Ẏ\":\"Y\",\"Ỵ\":\"Y\",\"Ỳ\":\"Y\",\"Ƴ\":\"Y\",\"Ỷ\":\"Y\",\"Ỿ\":\"Y\",\"Ȳ\":\"Y\",\"Ɏ\":\"Y\",\"Ỹ\":\"Y\",\"Ź\":\"Z\",\"Ž\":\"Z\",\"Ẑ\":\"Z\",\"Ⱬ\":\"Z\",\"Ż\":\"Z\",\"Ẓ\":\"Z\",\"Ȥ\":\"Z\",\"Ẕ\":\"Z\",\"Ƶ\":\"Z\",\"Ĳ\":\"IJ\",\"Œ\":\"OE\",\"ᴀ\":\"A\",\"ᴁ\":\"AE\",\"ʙ\":\"B\",\"ᴃ\":\"B\",\"ᴄ\":\"C\",\"ᴅ\":\"D\",\"ᴇ\":\"E\",\"ꜰ\":\"F\",\"ɢ\":\"G\",\"ʛ\":\"G\",\"ʜ\":\"H\",\"ɪ\":\"I\",\"ʁ\":\"R\",\"ᴊ\":\"J\",\"ᴋ\":\"K\",\"ʟ\":\"L\",\"ᴌ\":\"L\",\"ᴍ\":\"M\",\"ɴ\":\"N\",\"ᴏ\":\"O\",\"ɶ\":\"OE\",\"ᴐ\":\"O\",\"ᴕ\":\"OU\",\"ᴘ\":\"P\",\"ʀ\":\"R\",\"ᴎ\":\"N\",\"ᴙ\":\"R\",\"ꜱ\":\"S\",\"ᴛ\":\"T\",\"ⱻ\":\"E\",\"ᴚ\":\"R\",\"ᴜ\":\"U\",\"ᴠ\":\"V\",\"ᴡ\":\"W\",\"ʏ\":\"Y\",\"ᴢ\":\"Z\",\"á\":\"a\",\"ă\":\"a\",\"ắ\":\"a\",\"ặ\":\"a\",\"ằ\":\"a\",\"ẳ\":\"a\",\"ẵ\":\"a\",\"ǎ\":\"a\",\"â\":\"a\",\"ấ\":\"a\",\"ậ\":\"a\",\"ầ\":\"a\",\"ẩ\":\"a\",\"ẫ\":\"a\",\"ä\":\"a\",\"ǟ\":\"a\",\"ȧ\":\"a\",\"ǡ\":\"a\",\"ạ\":\"a\",\"ȁ\":\"a\",\"à\":\"a\",\"ả\":\"a\",\"ȃ\":\"a\",\"ā\":\"a\",\"ą\":\"a\",\"ᶏ\":\"a\",\"ẚ\":\"a\",\"å\":\"a\",\"ǻ\":\"a\",\"ḁ\":\"a\",\"ⱥ\":\"a\",\"ã\":\"a\",\"ꜳ\":\"aa\",\"æ\":\"ae\",\"ǽ\":\"ae\",\"ǣ\":\"ae\",\"ꜵ\":\"ao\",\"ꜷ\":\"au\",\"ꜹ\":\"av\",\"ꜻ\":\"av\",\"ꜽ\":\"ay\",\"ḃ\":\"b\",\"ḅ\":\"b\",\"ɓ\":\"b\",\"ḇ\":\"b\",\"ᵬ\":\"b\",\"ᶀ\":\"b\",\"ƀ\":\"b\",\"ƃ\":\"b\",\"ɵ\":\"o\",\"ć\":\"c\",\"č\":\"c\",\"ç\":\"c\",\"ḉ\":\"c\",\"ĉ\":\"c\",\"ɕ\":\"c\",\"ċ\":\"c\",\"ƈ\":\"c\",\"ȼ\":\"c\",\"ď\":\"d\",\"ḑ\":\"d\",\"ḓ\":\"d\",\"ȡ\":\"d\",\"ḋ\":\"d\",\"ḍ\":\"d\",\"ɗ\":\"d\",\"ᶑ\":\"d\",\"ḏ\":\"d\",\"ᵭ\":\"d\",\"ᶁ\":\"d\",\"đ\":\"d\",\"ɖ\":\"d\",\"ƌ\":\"d\",\"ı\":\"i\",\"ȷ\":\"j\",\"ɟ\":\"j\",\"ʄ\":\"j\",\"ǳ\":\"dz\",\"ǆ\":\"dz\",\"é\":\"e\",\"ĕ\":\"e\",\"ě\":\"e\",\"ȩ\":\"e\",\"ḝ\":\"e\",\"ê\":\"e\",\"ế\":\"e\",\"ệ\":\"e\",\"ề\":\"e\",\"ể\":\"e\",\"ễ\":\"e\",\"ḙ\":\"e\",\"ë\":\"e\",\"ė\":\"e\",\"ẹ\":\"e\",\"ȅ\":\"e\",\"è\":\"e\",\"ẻ\":\"e\",\"ȇ\":\"e\",\"ē\":\"e\",\"ḗ\":\"e\",\"ḕ\":\"e\",\"ⱸ\":\"e\",\"ę\":\"e\",\"ᶒ\":\"e\",\"ɇ\":\"e\",\"ẽ\":\"e\",\"ḛ\":\"e\",\"ꝫ\":\"et\",\"ḟ\":\"f\",\"ƒ\":\"f\",\"ᵮ\":\"f\",\"ᶂ\":\"f\",\"ǵ\":\"g\",\"ğ\":\"g\",\"ǧ\":\"g\",\"ģ\":\"g\",\"ĝ\":\"g\",\"ġ\":\"g\",\"ɠ\":\"g\",\"ḡ\":\"g\",\"ᶃ\":\"g\",\"ǥ\":\"g\",\"ḫ\":\"h\",\"ȟ\":\"h\",\"ḩ\":\"h\",\"ĥ\":\"h\",\"ⱨ\":\"h\",\"ḧ\":\"h\",\"ḣ\":\"h\",\"ḥ\":\"h\",\"ɦ\":\"h\",\"ẖ\":\"h\",\"ħ\":\"h\",\"ƕ\":\"hv\",\"í\":\"i\",\"ĭ\":\"i\",\"ǐ\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ḯ\":\"i\",\"ị\":\"i\",\"ȉ\":\"i\",\"ì\":\"i\",\"ỉ\":\"i\",\"ȋ\":\"i\",\"ī\":\"i\",\"į\":\"i\",\"ᶖ\":\"i\",\"ɨ\":\"i\",\"ĩ\":\"i\",\"ḭ\":\"i\",\"ꝺ\":\"d\",\"ꝼ\":\"f\",\"ᵹ\":\"g\",\"ꞃ\":\"r\",\"ꞅ\":\"s\",\"ꞇ\":\"t\",\"ꝭ\":\"is\",\"ǰ\":\"j\",\"ĵ\":\"j\",\"ʝ\":\"j\",\"ɉ\":\"j\",\"ḱ\":\"k\",\"ǩ\":\"k\",\"ķ\":\"k\",\"ⱪ\":\"k\",\"ꝃ\":\"k\",\"ḳ\":\"k\",\"ƙ\":\"k\",\"ḵ\":\"k\",\"ᶄ\":\"k\",\"ꝁ\":\"k\",\"ꝅ\":\"k\",\"ĺ\":\"l\",\"ƚ\":\"l\",\"ɬ\":\"l\",\"ľ\":\"l\",\"ļ\":\"l\",\"ḽ\":\"l\",\"ȴ\":\"l\",\"ḷ\":\"l\",\"ḹ\":\"l\",\"ⱡ\":\"l\",\"ꝉ\":\"l\",\"ḻ\":\"l\",\"ŀ\":\"l\",\"ɫ\":\"l\",\"ᶅ\":\"l\",\"ɭ\":\"l\",\"ł\":\"l\",\"ǉ\":\"lj\",\"ſ\":\"s\",\"ẜ\":\"s\",\"ẛ\":\"s\",\"ẝ\":\"s\",\"ḿ\":\"m\",\"ṁ\":\"m\",\"ṃ\":\"m\",\"ɱ\":\"m\",\"ᵯ\":\"m\",\"ᶆ\":\"m\",\"ń\":\"n\",\"ň\":\"n\",\"ņ\":\"n\",\"ṋ\":\"n\",\"ȵ\":\"n\",\"ṅ\":\"n\",\"ṇ\":\"n\",\"ǹ\":\"n\",\"ɲ\":\"n\",\"ṉ\":\"n\",\"ƞ\":\"n\",\"ᵰ\":\"n\",\"ᶇ\":\"n\",\"ɳ\":\"n\",\"ñ\":\"n\",\"ǌ\":\"nj\",\"ó\":\"o\",\"ŏ\":\"o\",\"ǒ\":\"o\",\"ô\":\"o\",\"ố\":\"o\",\"ộ\":\"o\",\"ồ\":\"o\",\"ổ\":\"o\",\"ỗ\":\"o\",\"ö\":\"o\",\"ȫ\":\"o\",\"ȯ\":\"o\",\"ȱ\":\"o\",\"ọ\":\"o\",\"ő\":\"o\",\"ȍ\":\"o\",\"ò\":\"o\",\"ỏ\":\"o\",\"ơ\":\"o\",\"ớ\":\"o\",\"ợ\":\"o\",\"ờ\":\"o\",\"ở\":\"o\",\"ỡ\":\"o\",\"ȏ\":\"o\",\"ꝋ\":\"o\",\"ꝍ\":\"o\",\"ⱺ\":\"o\",\"ō\":\"o\",\"ṓ\":\"o\",\"ṑ\":\"o\",\"ǫ\":\"o\",\"ǭ\":\"o\",\"ø\":\"o\",\"ǿ\":\"o\",\"õ\":\"o\",\"ṍ\":\"o\",\"ṏ\":\"o\",\"ȭ\":\"o\",\"ƣ\":\"oi\",\"ꝏ\":\"oo\",\"ɛ\":\"e\",\"ᶓ\":\"e\",\"ɔ\":\"o\",\"ᶗ\":\"o\",\"ȣ\":\"ou\",\"ṕ\":\"p\",\"ṗ\":\"p\",\"ꝓ\":\"p\",\"ƥ\":\"p\",\"ᵱ\":\"p\",\"ᶈ\":\"p\",\"ꝕ\":\"p\",\"ᵽ\":\"p\",\"ꝑ\":\"p\",\"ꝙ\":\"q\",\"ʠ\":\"q\",\"ɋ\":\"q\",\"ꝗ\":\"q\",\"ŕ\":\"r\",\"ř\":\"r\",\"ŗ\":\"r\",\"ṙ\":\"r\",\"ṛ\":\"r\",\"ṝ\":\"r\",\"ȑ\":\"r\",\"ɾ\":\"r\",\"ᵳ\":\"r\",\"ȓ\":\"r\",\"ṟ\":\"r\",\"ɼ\":\"r\",\"ᵲ\":\"r\",\"ᶉ\":\"r\",\"ɍ\":\"r\",\"ɽ\":\"r\",\"ↄ\":\"c\",\"ꜿ\":\"c\",\"ɘ\":\"e\",\"ɿ\":\"r\",\"ś\":\"s\",\"ṥ\":\"s\",\"š\":\"s\",\"ṧ\":\"s\",\"ş\":\"s\",\"ŝ\":\"s\",\"ș\":\"s\",\"ṡ\":\"s\",\"ṣ\":\"s\",\"ṩ\":\"s\",\"ʂ\":\"s\",\"ᵴ\":\"s\",\"ᶊ\":\"s\",\"ȿ\":\"s\",\"ɡ\":\"g\",\"ᴑ\":\"o\",\"ᴓ\":\"o\",\"ᴝ\":\"u\",\"ť\":\"t\",\"ţ\":\"t\",\"ṱ\":\"t\",\"ț\":\"t\",\"ȶ\":\"t\",\"ẗ\":\"t\",\"ⱦ\":\"t\",\"ṫ\":\"t\",\"ṭ\":\"t\",\"ƭ\":\"t\",\"ṯ\":\"t\",\"ᵵ\":\"t\",\"ƫ\":\"t\",\"ʈ\":\"t\",\"ŧ\":\"t\",\"ᵺ\":\"th\",\"ɐ\":\"a\",\"ᴂ\":\"ae\",\"ǝ\":\"e\",\"ᵷ\":\"g\",\"ɥ\":\"h\",\"ʮ\":\"h\",\"ʯ\":\"h\",\"ᴉ\":\"i\",\"ʞ\":\"k\",\"ꞁ\":\"l\",\"ɯ\":\"m\",\"ɰ\":\"m\",\"ᴔ\":\"oe\",\"ɹ\":\"r\",\"ɻ\":\"r\",\"ɺ\":\"r\",\"ⱹ\":\"r\",\"ʇ\":\"t\",\"ʌ\":\"v\",\"ʍ\":\"w\",\"ʎ\":\"y\",\"ꜩ\":\"tz\",\"ú\":\"u\",\"ŭ\":\"u\",\"ǔ\":\"u\",\"û\":\"u\",\"ṷ\":\"u\",\"ü\":\"u\",\"ǘ\":\"u\",\"ǚ\":\"u\",\"ǜ\":\"u\",\"ǖ\":\"u\",\"ṳ\":\"u\",\"ụ\":\"u\",\"ű\":\"u\",\"ȕ\":\"u\",\"ù\":\"u\",\"ủ\":\"u\",\"ư\":\"u\",\"ứ\":\"u\",\"ự\":\"u\",\"ừ\":\"u\",\"ử\":\"u\",\"ữ\":\"u\",\"ȗ\":\"u\",\"ū\":\"u\",\"ṻ\":\"u\",\"ų\":\"u\",\"ᶙ\":\"u\",\"ů\":\"u\",\"ũ\":\"u\",\"ṹ\":\"u\",\"ṵ\":\"u\",\"ᵫ\":\"ue\",\"ꝸ\":\"um\",\"ⱴ\":\"v\",\"ꝟ\":\"v\",\"ṿ\":\"v\",\"ʋ\":\"v\",\"ᶌ\":\"v\",\"ⱱ\":\"v\",\"ṽ\":\"v\",\"ꝡ\":\"vy\",\"ẃ\":\"w\",\"ŵ\":\"w\",\"ẅ\":\"w\",\"ẇ\":\"w\",\"ẉ\":\"w\",\"ẁ\":\"w\",\"ⱳ\":\"w\",\"ẘ\":\"w\",\"ẍ\":\"x\",\"ẋ\":\"x\",\"ᶍ\":\"x\",\"ý\":\"y\",\"ŷ\":\"y\",\"ÿ\":\"y\",\"ẏ\":\"y\",\"ỵ\":\"y\",\"ỳ\":\"y\",\"ƴ\":\"y\",\"ỷ\":\"y\",\"ỿ\":\"y\",\"ȳ\":\"y\",\"ẙ\":\"y\",\"ɏ\":\"y\",\"ỹ\":\"y\",\"ź\":\"z\",\"ž\":\"z\",\"ẑ\":\"z\",\"ʑ\":\"z\",\"ⱬ\":\"z\",\"ż\":\"z\",\"ẓ\":\"z\",\"ȥ\":\"z\",\"ẕ\":\"z\",\"ᵶ\":\"z\",\"ᶎ\":\"z\",\"ʐ\":\"z\",\"ƶ\":\"z\",\"ɀ\":\"z\",\"ﬀ\":\"ff\",\"ﬃ\":\"ffi\",\"ﬄ\":\"ffl\",\"ﬁ\":\"fi\",\"ﬂ\":\"fl\",\"ĳ\":\"ij\",\"œ\":\"oe\",\"ﬆ\":\"st\",\"ₐ\":\"a\",\"ₑ\":\"e\",\"ᵢ\":\"i\",\"ⱼ\":\"j\",\"ₒ\":\"o\",\"ᵣ\":\"r\",\"ᵤ\":\"u\",\"ᵥ\":\"v\",\"ₓ\":\"x\"};\nString.prototype.latinise=function(){return this.replace(/[^A-Za-z0-9\\[\\] ]/g,function(a){return Latinise.latin_map[a]||a})};\nString.prototype.latinize=String.prototype.latinise;\nString.prototype.isLatin=function(){return this==this.latinise()};\n\n//node.warn(results);\nfor(var j=0;j < results.length;j++){\n    msg.Process = \"Tagging\";\n    //SETTING UP HUITEM INFORMATION\n    for(var k=0;k < results[j].materials.length;k++){\n        var Material = results[j].materials[k].Material;\n        var Material_Master = Material;\n        \n        Material_Master = Material_Master.replace(/[#]/g, \"-35-\"); //Removing the special character # and replacing with it's ASCII value 35\n        Material_Master = Material_Master.replace(/[.]/g, \"-46-\"); //Removing the special character . and replacing with it's ASCII value 46\n        Material_Master = Material_Master.replace(/[/]/g, \"-47-\"); //Removing the special character / and replacing with it's ASCII value 47\n        Material_Master = Material_Master.replace(/[(]/g, \"-40-\"); //Removing the special character ( and replacing with it's ASCII value 40\n        Material_Master = Material_Master.replace(/[)]/g, \"-41-\"); //Removing the special character ) and replacing with it's ASCII value 41\n        Material_Master = Material_Master.latinize(); //Removing diacritics\n        Material_Master = Material_Master.replace(/\\s/g, ''); //Removing spaces\n        \n        var hu = k+1;\n        \n        var bodyM = \"{\"+\n            \"\\\"thingTypeCode\\\":\\\"HUITEM\\\",\"+\n            \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"_\" +  results[j].materials[k].Batch + \"_\" + Material_Master + \"\\\",\"+\n            \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n            \"\\\"Production_Date\\\":\"+ currentTime + \",\"+\n            \"\\\"source\\\":\\\"FLOW_Tagging\\\",\"+\n            \"\\\"RAKPALLET\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n            \"\\\"Material_Code\\\":\\\"\"+ Material + \"\\\",\"+\n            \"\\\"Material_Master\\\":\\\"\"+ Material_Master + \"\\\",\"+\n            \"\\\"Batch\\\":\\\"\"+ results[j].materials[k].Batch + \"\\\",\"+\n            \"\\\"huitem\\\":\\\"\"+ pad(hu,6) + \"\\\"\";\n        if(results[j].materials[k].Qty){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            bodyM+=\"\\\"Qty\\\":\\\"\"+results[j].materials[k].Qty+\"\\\",\";\n            //****************** TEMPORARILY REMOVING THE RETAGGING PROCESS - 30/06/2021\n            //msg.Process = \"reTagging\";\n        }\n        if(results[j].key.location || results[j].key.zone){\n            if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n            }\n            if(results[j].key.zone && results[j].key.zone !== \"\"){\n                zone = results[j].key.zone;\n                zone = zone.replace(/[&]/g, \"\");\n                if((bodyM.slice(-1))===\"\\\"\"){\n                    bodyM+=\",\";\n                }\n                bodyM+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n            }\n        }\n        if(results[j].key.LocationDetails){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n            }\n            //node.warn(\"setting LocationDetails: \"+results[j].key.LocationDetails)\n            bodyM+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n            bodyM+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n        }\n        if(results[j].key.StorageLocation){\n            if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n           }\n           //node.warn(\"setting StorageLocation: \"+results[j].key.StorageLocation)\n            bodyM+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n        }\n        if((bodyM.slice(-1))===\"\\\"\"){\n                bodyM+=\",\";\n        }\n        bodyM+=\"\\\"Process\\\":\\\"\"+msg.Process+\"\\\"}\";\n        toUpdateM.push(JSON.parse(bodyM));\n    }\n    \n    if(results[j].key.Image){\n        toStore[0] = results[j].key.Image;\n        toStore[1] = results[j].key.serialNumber;\n        image.push(toStore);\n    }\n    \n    //SETTING UP PALLET INFORMATION\n    var bodyP = \"{\"+\n        \"\\\"thingTypeCode\\\":\\\"RAKPALLET\\\",\"+\n        \"\\\"timestamp\\\":\"+ currentTime + \",\"+\n        \"\\\"TaggingDate\\\":\"+ currentTime + \",\"+\n        \"\\\"ProcessTime\\\":\"+ currentTime + \",\"+\n        \"\\\"serialNumber\\\":\\\"\"+ results[j].key.serialNumber + \"\\\",\"+\n        \"\\\"PalletType\\\":\\\"\"+ results[j].key.PalletType + \"\\\",\"+\n        \"\\\"source\\\":\\\"MOBILE_Tagging\\\",\"+\n        \"\\\"facility\\\":\\\"RAKHQ\\\",\"+\n        \"\\\"Status\\\":\\\"Active\\\",\"+\n        \"\\\"User\\\":\\\"\"+ results[j].key.User + \"\\\",\"+\n        \"\\\"UUIDMobile\\\":\\\"\"+ results[j].key.UUIDMobile + \"\\\",\"+\n        \"\\\"Process\\\":\\\"\"+msg.Process+\"\\\"\";\n    if(results[j].key.Image){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"Image\\\":\\\"\"+IMserver+\"/\"+results[j].key.serialNumber+\"/pallet_\"+results[j].key.serialNumber+\".png\\\"\";\n    }\n    if(results[j].key.location || results[j].key.zone){\n        if(results[j].key.location && (!results[j].key.zone || results[j].key.zone === \"\")){\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"location\\\":\\\"\"+results[j].key.location+\"\\\"\";\n        }\n        if(results[j].key.zone && results[j].key.zone !== \"\"){\n            zone = results[j].key.zone;\n            zone = zone.replace(/[&]/g, \"\");\n            if((bodyP.slice(-1))===\"\\\"\"){\n                bodyP+=\",\";\n            }\n            bodyP+=\"\\\"zone\\\":\\\"\"+zone+\"\\\"\";\n        }\n    }\n    if(results[j].key.LocationDetails){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"LocationDetails\\\":\\\"\"+results[j].key.LocationDetails+\"\\\",\";\n        bodyP+=\"\\\"Plant\\\":\\\"\"+results[j].key.LocationDetails+\"\\\"\";\n    }\n    if(results[j].key.StorageLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"StorageLocation\\\":\\\"\"+results[j].key.StorageLocation+\"\\\"\";\n    }\n    if(results[j].key.BinLocation){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"BinLocation\\\":\\\"\"+results[j].key.BinLocation+\"\\\"\";\n    }\n    if(results[j].key.Lane){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"Lane\\\":\\\"\"+results[j].key.Lane+\"\\\"\";\n    }\n    if(results[j].key.L5Location){\n        if((bodyP.slice(-1))===\"\\\"\"){\n            bodyP+=\",\";\n        }\n        bodyP+=\"\\\"L5Location\\\":\\\"\"+results[j].key.L5Location+\"\\\"\";\n    }\n    bodyP+=\"}\";\n    \n    toUpdateP.push(JSON.parse(bodyP));\n\n}\n\n//node.warn(\"String of messages To Update: \" + toUpdateP);\nmsg.image=image;\nmsg.payloadP=toUpdateP;\nmsg.payloadM=toUpdateM;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 220,
        "wires": [
            [
                "f445bee4.bd466"
            ]
        ]
    },
    {
        "id": "ac5278eb.3b0488",
        "type": "sqlite",
        "z": "8bef0c82.c29b9",
        "mydb": "ae98c1c14c4ef5ac",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "TaggedPallets",
        "x": 770,
        "y": 880,
        "wires": [
            [
                "4388164.4a4a7e8"
            ]
        ]
    },
    {
        "id": "88e715bd.d99c28",
        "type": "inject",
        "z": "8bef0c82.c29b9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DELETE FROM TaggedPallets WHERE palletID IN ('32142300000001372716','32142300000001372715');",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 880,
        "wires": [
            [
                "7d428b2c.49a0b4",
                "8b1fc5d9.6cf4c8"
            ]
        ]
    },
    {
        "id": "4388164.4a4a7e8",
        "type": "debug",
        "z": "8bef0c82.c29b9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 990,
        "y": 880,
        "wires": []
    },
    {
        "id": "7d428b2c.49a0b4",
        "type": "function",
        "z": "8bef0c82.c29b9",
        "name": "select",
        "func": "msg.topic = \"SELECT * FROM TaggedPallets WHERE palletID IN ('32000000000000000008');\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 880,
        "wires": [
            [
                "ac5278eb.3b0488"
            ]
        ]
    },
    {
        "id": "7927802a.e8bc6",
        "type": "function",
        "z": "8bef0c82.c29b9",
        "name": "delete",
        "func": "msg.topic = \"DELETE FROM TaggedPallets WHERE palletID IN ('32000000000000000008');\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 960,
        "wires": [
            [
                "ac5278eb.3b0488"
            ]
        ]
    },
    {
        "id": "8b1fc5d9.6cf4c8",
        "type": "delay",
        "z": "8bef0c82.c29b9",
        "name": "5s",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 350,
        "y": 960,
        "wires": [
            [
                "7927802a.e8bc6"
            ]
        ]
    },
    {
        "id": "69436d9b1da6d899",
        "type": "base64",
        "z": "8bef0c82.c29b9",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 870,
        "y": 380,
        "wires": [
            [
                "5aab556b.c3a8cc"
            ]
        ]
    },
    {
        "id": "ab9aefac.61d2f",
        "type": "comment",
        "z": "b68ad1f2.8af23",
        "name": "File Browser",
        "info": "1) Update the default folder in the Init node\n2) Update the default folder in the Reset node as well\n3) You can duplicate the Reset nodes and use them as saved shortcuts\n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format.\n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point.",
        "x": 170,
        "y": 80,
        "wires": []
    },
    {
        "id": "ccc7a906.ad2198",
        "type": "inject",
        "z": "b68ad1f2.8af23",
        "name": "Init",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "/flows/logs/",
        "payloadType": "str",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "1875d48c.22bebb"
            ]
        ]
    },
    {
        "id": "b87d4fbe.87f7c",
        "type": "ui_button",
        "z": "b68ad1f2.8af23",
        "name": "",
        "group": "e57bd4af.42b448",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Refresh",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "1875d48c.22bebb"
            ]
        ]
    },
    {
        "id": "97e649c7.2143c8",
        "type": "ui_template",
        "z": "b68ad1f2.8af23",
        "group": "e57bd4af.42b448",
        "name": "",
        "order": 6,
        "width": "18",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\" height=\"400\" style=\"height: 400px;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1160,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a893130e.67722",
        "type": "template",
        "z": "b68ad1f2.8af23",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table width=\"100%\">\n    <tr><th>File Name</th><th>Size</th><th>Created</th><th>Changed</th></tr>\n    {{#payload}}\n        <tr>\n            <td><a href=\"/innovent/download?filename={{name}}\" target=\"blank\">{{fname}}</a></td>\n            <td>{{stat.size}}</td>\n            <td>{{stat.created}}</td>\n            <td>{{stat.changed}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 1000,
        "y": 240,
        "wires": [
            [
                "97e649c7.2143c8"
            ]
        ]
    },
    {
        "id": "6fdfe6a1.e56808",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "Convert timestamps",
        "func": "for (var i=0; i<msg.payload.length; i++) {\n    msg.payload[i].stat.created = msg.payload[i].stat.created.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.changed = msg.payload[i].stat.changed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.accessed = msg.payload[i].stat.accessed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.statusChanged = msg.payload[i].stat.statusChanged.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 240,
        "wires": [
            [
                "a893130e.67722"
            ]
        ]
    },
    {
        "id": "48e24f20.14cfc",
        "type": "http in",
        "z": "b68ad1f2.8af23",
        "name": "",
        "url": "/Download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 540,
        "wires": [
            [
                "6a718196.70c54"
            ]
        ]
    },
    {
        "id": "e87e059e.9f0148",
        "type": "http response",
        "z": "b68ad1f2.8af23",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 540,
        "wires": []
    },
    {
        "id": "6a718196.70c54",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "Get the file name",
        "func": "msg.filename = msg.req.query.filename;\nmsg.contentdisposition = \"attachment; filename=\\\"\" + msg.req.query.filename.replace(/^.*(\\\\|\\/|\\:)/, '') + \"\\\"\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 540,
        "wires": [
            [
                "b22bd460.95f708"
            ]
        ],
        "outputLabels": [
            "Folder selected",
            "File selected"
        ]
    },
    {
        "id": "b22bd460.95f708",
        "type": "file in",
        "z": "b68ad1f2.8af23",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "x": 640,
        "y": 540,
        "wires": [
            [
                "efc3b46f.435778"
            ]
        ]
    },
    {
        "id": "efc3b46f.435778",
        "type": "change",
        "z": "b68ad1f2.8af23",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/csv",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Content-Disposition",
                "pt": "msg",
                "to": "contentdisposition",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 540,
        "wires": [
            [
                "e87e059e.9f0148"
            ]
        ]
    },
    {
        "id": "1875d48c.22bebb",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder===undefined) {\n    folder=\"/\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden===undefined) {\n    hidden=false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic===\"up\") {\n    var the_arr = folder.split('/');\n    the_arr.pop();\n    folder=the_arr.join('/'); \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"change\") {\n    folder=msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"hidden\") {\n    hidden=msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 240,
        "wires": [
            [
                "d795c95e.5f1c78",
                "e8c1f83f.070408",
                "c4579d42.880e2"
            ]
        ]
    },
    {
        "id": "e8c1f83f.070408",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "e57bd4af.42b448",
        "order": 4,
        "width": "9",
        "height": "1",
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "x": 560,
        "y": 120,
        "wires": []
    },
    {
        "id": "65167ee.c41508",
        "type": "ui_button",
        "z": "b68ad1f2.8af23",
        "name": "",
        "group": "e57bd4af.42b448",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Up",
        "color": "",
        "bgcolor": "",
        "icon": "arrow_upwards",
        "payload": "",
        "payloadType": "str",
        "topic": "up",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "1875d48c.22bebb"
            ]
        ]
    },
    {
        "id": "9a61f2ea.47d2f",
        "type": "ui_button",
        "z": "b68ad1f2.8af23",
        "name": "",
        "group": "e57bd4af.42b448",
        "order": 8,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Open",
        "color": "",
        "bgcolor": "",
        "icon": "folder_open",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 250,
        "y": 360,
        "wires": [
            [
                "d1e7c29b.dc4b8"
            ]
        ]
    },
    {
        "id": "d1e7c29b.dc4b8",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "Change folder",
        "func": "// Get the filename from the flow context\nlet folderselected = flow.get(\"folderselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (folderselected===undefined) {\n    return;\n}\n\nmsg.topic = \"change\";\nmsg.payload = folderselected;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 360,
        "wires": [
            [
                "1875d48c.22bebb"
            ]
        ]
    },
    {
        "id": "ee6fcf4b.e545c",
        "type": "ui_button",
        "z": "b68ad1f2.8af23",
        "name": "",
        "group": "e57bd4af.42b448",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "color": "",
        "bgcolor": "",
        "icon": "autorenew",
        "payload": "/flows/logs/",
        "payloadType": "str",
        "topic": "change",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "1875d48c.22bebb"
            ]
        ]
    },
    {
        "id": "96e16353.3c019",
        "type": "ui_switch",
        "z": "b68ad1f2.8af23",
        "name": "",
        "label": "Hidden",
        "group": "e57bd4af.42b448",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "false",
        "topic": "hidden",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "check_box",
        "oncolor": "#000000",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "check_box_outline_blank",
        "offcolor": "#000000",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "1875d48c.22bebb"
            ]
        ]
    },
    {
        "id": "d795c95e.5f1c78",
        "type": "fs-file-lister",
        "z": "b68ad1f2.8af23",
        "name": "Files",
        "start": "/flows/logs/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 570,
        "y": 180,
        "wires": [
            [
                "6fdfe6a1.e56808"
            ]
        ]
    },
    {
        "id": "d1c4bb21.8e9e88",
        "type": "ui_dropdown",
        "z": "b68ad1f2.8af23",
        "name": "Folder Selector",
        "label": "",
        "place": "Select a folder",
        "group": "e57bd4af.42b448",
        "order": 7,
        "width": "5",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 980,
        "y": 280,
        "wires": [
            [
                "50e14b6a.19c6c4"
            ]
        ]
    },
    {
        "id": "3590d668.4dbd2a",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a foler\n    obj = {};\n    obj [\"[\"+msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')+\"]\"]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 280,
        "wires": [
            [
                "d1c4bb21.8e9e88"
            ]
        ]
    },
    {
        "id": "50e14b6a.19c6c4",
        "type": "change",
        "z": "b68ad1f2.8af23",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "folderselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c4579d42.880e2",
        "type": "fs-file-lister",
        "z": "b68ad1f2.8af23",
        "name": "Folders",
        "start": "/flows/logs/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "3590d668.4dbd2a"
            ]
        ]
    },
    {
        "id": "3bd9995f.a23096",
        "type": "ui_template",
        "z": "b68ad1f2.8af23",
        "group": "d6b2bd9.de2cc4",
        "name": "Logo / Clock",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<script id=\"clockScript1\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n        //add logo\n        var div1 = $('<div/>');\n        var logo = new Image();\n\n        logo.src = '/Logo_Color_transparent.png'\n        logo.height = 45;\n        div1[0].style.margin = '10px auto';\n\n        div1.append(logo);\n\n        //add clock\n        var div2 = $('<div/>');\n        var p = $('<p/>');\n\n        div2.append(p);\n        div2[0].style.margin = '5px';\n\n        function displayTime() {\n            p.text(new Date().toLocaleString());\n        }\n        \n        clockInterval = setInterval(displayTime, 1000);\n\n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n            \n            if(!toolbar.length) return;\n            \n            toolbar.append(div1);\n            toolbar.append(div2);\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 100);\n    });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 190,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "d4078a57.3fdb78",
        "type": "comment",
        "z": "b68ad1f2.8af23",
        "name": "Logo & Clock",
        "info": "1) Update the default folder in the Init node\n2) Update the default folder in the Reset node as well\n3) You can duplicate the Reset nodes and use them as saved shortcuts\n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format.\n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point.",
        "x": 190,
        "y": 700,
        "wires": []
    },
    {
        "id": "126895fc.5b79ba",
        "type": "OS",
        "z": "b68ad1f2.8af23",
        "name": "",
        "x": 450,
        "y": 1260,
        "wires": [
            [
                "f368344c.80a438",
                "9ce95911.b27248",
                "90cf723f.fe5d8",
                "513d6854.f16ca8"
            ]
        ]
    },
    {
        "id": "6855095d.0c9678",
        "type": "Uptime",
        "z": "b68ad1f2.8af23",
        "name": "",
        "x": 460,
        "y": 1160,
        "wires": [
            [
                "8b3133b2.3efb9"
            ]
        ]
    },
    {
        "id": "30596c95.9940f4",
        "type": "CPUs",
        "z": "b68ad1f2.8af23",
        "name": "",
        "x": 450,
        "y": 1360,
        "wires": [
            [
                "67f6f0c3.80d54"
            ]
        ]
    },
    {
        "id": "5be3ac08.83e7d4",
        "type": "Loadavg",
        "z": "b68ad1f2.8af23",
        "name": "",
        "x": 467,
        "y": 987,
        "wires": [
            [
                "690883e6.3002dc",
                "2aeed368.f365ec",
                "8560f760.94d288",
                "174bd0d.9bd912f"
            ]
        ]
    },
    {
        "id": "6c2d7e0f.c2e92",
        "type": "Memory",
        "z": "b68ad1f2.8af23",
        "name": "",
        "x": 460,
        "y": 1660,
        "wires": [
            [
                "9f6437f4.0a5f48",
                "2db0f134.14a06e",
                "c7896582.d0bde8",
                "423a4a3d.8ff164"
            ]
        ]
    },
    {
        "id": "f7e93580.580fa8",
        "type": "inject",
        "z": "b68ad1f2.8af23",
        "name": "update",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payloadType": "date",
        "x": 163,
        "y": 1160,
        "wires": [
            [
                "126895fc.5b79ba",
                "6855095d.0c9678",
                "30596c95.9940f4",
                "5be3ac08.83e7d4",
                "6c2d7e0f.c2e92",
                "7f9d1c2.eea1de4"
            ]
        ]
    },
    {
        "id": "690883e6.3002dc",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.loadavg[1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 960,
        "wires": [
            [
                "ea6cb0cc.c38c"
            ]
        ]
    },
    {
        "id": "2aeed368.f365ec",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.loadavg[2];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1000,
        "wires": [
            [
                "8cdc5581.3b5968"
            ]
        ]
    },
    {
        "id": "a6d4d9ca.be7c98",
        "type": "ui_gauge",
        "z": "b68ad1f2.8af23",
        "name": "CPU Load 1",
        "group": "8557a2db.08fba",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "1 Minute",
        "label": "load",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "4",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 810,
        "y": 920,
        "wires": []
    },
    {
        "id": "ea6cb0cc.c38c",
        "type": "ui_gauge",
        "z": "b68ad1f2.8af23",
        "name": "CPU Load 2",
        "group": "8557a2db.08fba",
        "order": 2,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "5 Minutes",
        "label": "load",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "4",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 810,
        "y": 960,
        "wires": []
    },
    {
        "id": "8cdc5581.3b5968",
        "type": "ui_gauge",
        "z": "b68ad1f2.8af23",
        "name": "CPU Load 3",
        "group": "8557a2db.08fba",
        "order": 4,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "15 Minutes",
        "label": "load",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "4",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 810,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9f6437f4.0a5f48",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.memusage;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1640,
        "wires": [
            [
                "2b75b472.704a3c"
            ]
        ]
    },
    {
        "id": "2b75b472.704a3c",
        "type": "ui_gauge",
        "z": "b68ad1f2.8af23",
        "name": "Memory Usage",
        "group": "bf70546e.d9c248",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "1 Minute",
        "label": "Usage",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 820,
        "y": 1640,
        "wires": []
    },
    {
        "id": "2db0f134.14a06e",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "function formatBytes(bytes,decimals) {\n   if(bytes === 0) return '0 Byte';\n   var k = 1000; // or 1024 for binary\n   var dm = decimals + 1 || 3;\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n   var i = Math.floor(Math.log(bytes) / Math.log(k));\n   return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nmsg.payload = formatBytes(msg.payload.totalmem);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1680,
        "wires": [
            [
                "6803a105.0c7d9"
            ]
        ]
    },
    {
        "id": "c7896582.d0bde8",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "function formatBytes(bytes,decimals) {\n   if(bytes === 0) return '0 Byte';\n   var k = 1000; // or 1024 for binary\n   var dm = decimals + 1 || 3;\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n   var i = Math.floor(Math.log(bytes) / Math.log(k));\n   return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nmsg.payload = formatBytes(msg.payload.freemem);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1720,
        "wires": [
            [
                "bf361221.b9cce"
            ]
        ]
    },
    {
        "id": "6803a105.0c7d9",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "bf70546e.d9c248",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Total Memory",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 820,
        "y": 1680,
        "wires": []
    },
    {
        "id": "bf361221.b9cce",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "bf70546e.d9c248",
        "order": 3,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Free Memory",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 810,
        "y": 1720,
        "wires": []
    },
    {
        "id": "8b3133b2.3efb9",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "function timeConversion(millisec) {\n\n    var seconds = (millisec / 1000).toFixed(1);\n\n    var minutes = (millisec / (1000 * 60)).toFixed(1);\n\n    var hours = (millisec / (1000 * 60 * 60)).toFixed(1);\n\n    var days = (millisec / (1000 * 60 * 60 * 24)).toFixed(1);\n\n    if (seconds < 60) {\n        return seconds + \" Sec\";\n    } else if (minutes < 60) {\n        return minutes + \" Min\";\n    } else if (hours < 24) {\n        return hours + \" Hrs\";\n    } else {\n        return days + \" Days\"\n    }\n}\n\nmsg.payload = timeConversion(msg.payload.uptime * 1000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1160,
        "wires": [
            [
                "5e636b7f.e65ef4"
            ]
        ]
    },
    {
        "id": "5e636b7f.e65ef4",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "c5c9b400.16e73",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Uptime",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 800,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f368344c.80a438",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.hostname;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1200,
        "wires": [
            [
                "e726ca94.745f68"
            ]
        ]
    },
    {
        "id": "e726ca94.745f68",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "c5c9b400.16e73",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Hostname",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 810,
        "y": 1200,
        "wires": []
    },
    {
        "id": "9ce95911.b27248",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.platform;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1240,
        "wires": [
            [
                "13e1fad1.48c725"
            ]
        ]
    },
    {
        "id": "13e1fad1.48c725",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "c5c9b400.16e73",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Platform",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 800,
        "y": 1240,
        "wires": []
    },
    {
        "id": "90cf723f.fe5d8",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.arch;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1280,
        "wires": [
            [
                "ebd372d2.0fa3a"
            ]
        ]
    },
    {
        "id": "ebd372d2.0fa3a",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "c5c9b400.16e73",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Arch",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 790,
        "y": 1280,
        "wires": []
    },
    {
        "id": "513d6854.f16ca8",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.release;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1320,
        "wires": [
            [
                "57bffddb.4bb474"
            ]
        ]
    },
    {
        "id": "57bffddb.4bb474",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "c5c9b400.16e73",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Release",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 800,
        "y": 1320,
        "wires": []
    },
    {
        "id": "67f6f0c3.80d54",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.cpus[0].model;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1360,
        "wires": [
            [
                "1b06de57.849002",
                "e92dce5.b70533",
                "27998a64.f36aa6",
                "12f47e78.eb8472"
            ]
        ]
    },
    {
        "id": "1b06de57.849002",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "c5c9b400.16e73",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "CPU 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 790,
        "y": 1360,
        "wires": []
    },
    {
        "id": "e92dce5.b70533",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "c5c9b400.16e73",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "CPU 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 790,
        "y": 1400,
        "wires": []
    },
    {
        "id": "27998a64.f36aa6",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "c5c9b400.16e73",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "CPU 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 790,
        "y": 1440,
        "wires": []
    },
    {
        "id": "12f47e78.eb8472",
        "type": "ui_text",
        "z": "b68ad1f2.8af23",
        "group": "c5c9b400.16e73",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "CPU 4",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 790,
        "y": 1480,
        "wires": []
    },
    {
        "id": "8560f760.94d288",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.loadavg[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1040,
        "wires": [
            [
                "d933869d.755538"
            ]
        ]
    },
    {
        "id": "d933869d.755538",
        "type": "ui_chart",
        "z": "b68ad1f2.8af23",
        "name": "CPU Load - Historical",
        "group": "8557a2db.08fba",
        "order": 0,
        "width": "0",
        "height": "0",
        "label": "24 Hours",
        "chartType": "line",
        "legend": "false",
        "xformat": "%H:%M:%S",
        "interpolate": "linear",
        "nodata": "",
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "outputs": 1,
        "x": 840,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "423a4a3d.8ff164",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.memusage;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1600,
        "wires": [
            [
                "c78394b9.4ca778"
            ]
        ]
    },
    {
        "id": "c78394b9.4ca778",
        "type": "ui_chart",
        "z": "b68ad1f2.8af23",
        "name": "Memory - 24 Hours",
        "group": "bf70546e.d9c248",
        "order": 0,
        "width": "0",
        "height": "0",
        "label": "24 Hours",
        "chartType": "line",
        "legend": "false",
        "xformat": "%H:%M:%S",
        "interpolate": "linear",
        "nodata": "",
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderUnit": "86400",
        "outputs": 2,
        "x": 830,
        "y": 1600,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ce173497.8f3ab8",
        "type": "comment",
        "z": "b68ad1f2.8af23",
        "name": "CPU Load",
        "info": "",
        "x": 790,
        "y": 860,
        "wires": []
    },
    {
        "id": "614c0ad2.500ff4",
        "type": "comment",
        "z": "b68ad1f2.8af23",
        "name": "Memory Usage",
        "info": "",
        "x": 810,
        "y": 1540,
        "wires": []
    },
    {
        "id": "e6765292.74007",
        "type": "comment",
        "z": "b68ad1f2.8af23",
        "name": "System Information",
        "info": "",
        "x": 820,
        "y": 1100,
        "wires": []
    },
    {
        "id": "174bd0d.9bd912f",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload.loadavg[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 920,
        "wires": [
            [
                "a6d4d9ca.be7c98"
            ]
        ]
    },
    {
        "id": "7f9d1c2.eea1de4",
        "type": "Drives",
        "z": "b68ad1f2.8af23",
        "name": "",
        "x": 460,
        "y": 1840,
        "wires": [
            [
                "12d9c10.40b963f"
            ]
        ]
    },
    {
        "id": "12d9c10.40b963f",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.payload = msg.payload[0].capacity*100;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 1840,
        "wires": [
            [
                "22846a49.7dc566"
            ]
        ]
    },
    {
        "id": "22846a49.7dc566",
        "type": "ui_gauge",
        "z": "b68ad1f2.8af23",
        "name": "Disk Usage",
        "group": "326d9292.76233e",
        "order": 1,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "Used Disk Space %",
        "label": "Usage",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 800,
        "y": 1840,
        "wires": []
    },
    {
        "id": "88191b57.d9e078",
        "type": "comment",
        "z": "b68ad1f2.8af23",
        "name": "Memory Usage",
        "info": "",
        "x": 810,
        "y": 1780,
        "wires": []
    },
    {
        "id": "5cacc3ed.07226c",
        "type": "comment",
        "z": "b68ad1f2.8af23",
        "name": "System info",
        "info": "1) Update the default folder in the Init node\n2) Update the default folder in the Reset node as well\n3) You can duplicate the Reset nodes and use them as saved shortcuts\n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format.\n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point.",
        "x": 170,
        "y": 1020,
        "wires": []
    },
    {
        "id": "a66881a1.3bcfa",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.topic = \"SELECT * FROM TaggedPallets where palletID = '32192300000002112137';\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 2380,
        "wires": [
            [
                "a085fa79ecb565a4",
                "e390b9b24fb36832"
            ]
        ]
    },
    {
        "id": "c1ea8eac.bbebf",
        "type": "inject",
        "z": "b68ad1f2.8af23",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 2280,
        "wires": [
            [
                "a66881a1.3bcfa"
            ]
        ]
    },
    {
        "id": "ec757194.e19ca",
        "type": "debug",
        "z": "b68ad1f2.8af23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 650,
        "y": 2380,
        "wires": []
    },
    {
        "id": "a085fa79ecb565a4",
        "type": "debug",
        "z": "b68ad1f2.8af23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 2340,
        "wires": []
    },
    {
        "id": "e390b9b24fb36832",
        "type": "sqlite",
        "z": "b68ad1f2.8af23",
        "mydb": "ae98c1c14c4ef5ac",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "TaggedPallets",
        "x": 480,
        "y": 2380,
        "wires": [
            [
                "ec757194.e19ca"
            ]
        ]
    },
    {
        "id": "35bff5e7ddae3526",
        "type": "function",
        "z": "b68ad1f2.8af23",
        "name": "",
        "func": "msg.topic = \"SELECT * FROM TaggedPallets ORDER BY date ASC LIMIT 50;\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2420,
        "wires": [
            []
        ]
    },
    {
        "id": "f22fc69f.3fd078",
        "type": "http in",
        "z": "24bd57.0c3052aa",
        "name": "GET FORKLIFTS",
        "url": "/api/forklifts",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "e910a54d.71b1a8",
                "72cf2f4c.b8dcb"
            ]
        ]
    },
    {
        "id": "e910a54d.71b1a8",
        "type": "function",
        "z": "24bd57.0c3052aa",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized SLP GET forklifts request, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized SLP GET forklifts request, proceeding... \");\n    msg.send=1;\n    \n    \n    msg.filters={};\n    msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/FORKLIFTDETAILS\";\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 200,
        "wires": [
            [
                "c9b6d11e.1dbca"
            ]
        ]
    },
    {
        "id": "1c14636.fa8f39d",
        "type": "function",
        "z": "24bd57.0c3052aa",
        "name": "ALL FORKLIFT DETAILS",
        "func": "var response = msg.payload;\nvar results = '';\nif(response){\n    results = response.results;\n}\nelse{\n    msg.payload = {Response:\"No data available\"};\n    msg.statusCode = 400;\n    return msg;\n}\n\nvar toResponse = [];\nvar forklift = '';\n\nif(results.length>0){\n    for(i=0;i<results.length;i++){\n        var details = results[i];\n        delete details[\"thing.headers\"];\n        delete details.group;\n        delete details.thingTypeId;\n        delete details.id;\n        delete details.CAMERAstatus;\n        delete details.GNSSstatus;\n        forklift = details;\n        toResponse.push(forklift);\n    }\n    node.warn(\"Success SLP Forklift request\")\n    msg.payload = toResponse;\n    msg.statusCode = 200;\n    return msg;\n}\nelse{\n    msg.payload = {Response:\"No data available\"};\n    msg.statusCode = 400;\n    return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 240,
        "wires": [
            [
                "315327d7.a3c148"
            ]
        ]
    },
    {
        "id": "b60cf2be.04be6",
        "type": "http request",
        "z": "24bd57.0c3052aa",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 830,
        "y": 240,
        "wires": [
            [
                "1c14636.fa8f39d",
                "5b002a7c.dbcd74"
            ]
        ]
    },
    {
        "id": "ac2fac38.18573",
        "type": "change",
        "z": "24bd57.0c3052aa",
        "name": "Filters",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 240,
        "wires": [
            [
                "b60cf2be.04be6"
            ]
        ]
    },
    {
        "id": "315327d7.a3c148",
        "type": "http response",
        "z": "24bd57.0c3052aa",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1250,
        "y": 240,
        "wires": []
    },
    {
        "id": "c9b6d11e.1dbca",
        "type": "switch",
        "z": "24bd57.0c3052aa",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 200,
        "wires": [
            [
                "1d6c41cb.f62a3e"
            ],
            [
                "ac2fac38.18573"
            ]
        ]
    },
    {
        "id": "1d6c41cb.f62a3e",
        "type": "http response",
        "z": "24bd57.0c3052aa",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 180,
        "wires": []
    },
    {
        "id": "72cf2f4c.b8dcb",
        "type": "debug",
        "z": "24bd57.0c3052aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 330,
        "y": 160,
        "wires": []
    },
    {
        "id": "9efc779d.878468",
        "type": "comment",
        "z": "24bd57.0c3052aa",
        "name": "GET FORKLIFT DATA FOR SLP INTERNAL PROCESS",
        "info": "",
        "x": 260,
        "y": 80,
        "wires": []
    },
    {
        "id": "5b002a7c.dbcd74",
        "type": "debug",
        "z": "24bd57.0c3052aa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1000,
        "y": 200,
        "wires": []
    },
    {
        "id": "3300f8ea.0aa3f8",
        "type": "http in",
        "z": "8cf8d9ad.9c9ed8",
        "name": "USER MANAGEMENT",
        "url": "/api/userspid",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 260,
        "wires": [
            [
                "4d8faef6.79224",
                "299cc530.e4bc5a"
            ]
        ]
    },
    {
        "id": "59517b43.150d24",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized User Management request, proceeding... \");\n    results = msg.payload;\n    \n    if(results.Process===\"UserCreation\"){\n        if(results.Username&&results.FirstName&&results.LastName&&results.Password){\n            var toUpdate = [];\n            if(!results.Email){\n                results.Email=\"\";\n            }\n            if(!results.Plant){\n                results.Plant=\"\";\n            }\n            if(!results.Manager){\n                results.Manager=\"\";\n            }\n            if(!results.Role){\n                results.Role=\"\";\n            }\n            var itemToUpdate = {  \n                \"thingTypeCode\" : \"USERS\",\n                \"timestamp\": currentTime,\n                \"serialNumber\": results.Username,\n    \t\t\t\"FirstName\": results.FirstName,\n    \t\t\t\"LastName\": results.LastName,\n    \t\t\t\"Email\": results.Email,\n    \t\t\t\"Username\": results.Username,\n    \t\t\t\"Password\": results.Password,\n    \t\t\t\"Plant\": results.Plant,\n    \t\t\t\"Manager\": results.Manager,\n    \t\t\t\"Process\": results.Process,\n    \t\t\t\"Role\": results.Role,\n    \t\t\t\"source\": \"MOBILE_\"+results.Process,\n    \t\t\t\"Status\": \"active\"\n            };\n            toUpdate.push(itemToUpdate);\n            msg.response = \"UserCreation\";\n            msg.Username = results.Username;\n            msg.payload=toUpdate;\n            msg.send=1;\n            return msg;\n        }else{\n            msg.response = \"invUserCreation\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n    \n    if(results.Process===\"Authenticate\"){\n        var server = global.get(\"server\");\n        msg.response = \"Authenticate\";\n        msg.Password=results.Password;\n        msg.Username = (results.Username).toUpperCase();\n        //msg.url = server+\"/riot-core-services/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.url = \"http://reports:8080/riot-core-reports/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.send=2;\n        return msg;\n    }\n    \n    if(results.Process===\"UserUpdate\"){\n        if(results.Username){\n            var toUpdate = [];\n            var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"USERS\\\",\"+\n            \"\\\"serialNumber\\\":\\\"\"+(results.Username).toUpperCase()+\n            \"\\\",\\\"Process\\\":\\\"\"+results.Process+\n            \"\\\",\\\"source\\\":\\\"MOBILE_\"+results.Process+\"\\\"\";\n            if(results.FirstName){\n                itemToUpdate+=\",\\\"FirstName\\\":\\\"\"+results.FirstName+\"\\\"\";\n            }\n    \t\tif(results.LastName){\n                itemToUpdate+=\",\\\"LastName\\\":\\\"\"+results.LastName+\"\\\"\";\n            }\n            if(results.Email){\n                itemToUpdate+=\",\\\"Email\\\":\\\"\"+results.Email+\"\\\"\";\n            }\n            if(results.Password){\n                itemToUpdate+=\",\\\"Password\\\":\\\"\"+results.Password+\"\\\"\";\n            }\n            if(results.Plant){\n                itemToUpdate+=\",\\\"Plant\\\":\\\"\"+results.Plant+\"\\\"\";\n            }\n            if(results.Manager){\n                itemToUpdate+=\",\\\"Manager\\\":\\\"\"+results.Manager+\"\\\"\";\n            }\n            if(results.Role){\n                itemToUpdate+=\",\\\"Role\\\":\\\"\"+results.Role+\"\\\"\";\n            }\n            if(results.Status){\n                itemToUpdate+=\",\\\"Status\\\":\\\"\"+results.Status+\"\\\"\";\n            }\n            if(!results.StorageLocation){\n                if(results.StorageLocation === \"\"){\n                    itemToUpdate+=\",\\\"StorageLocation\\\":\\\"\"+results.StorageLocation+\"\\\"\";\n                }\n            }\n            else{\n                itemToUpdate+=\",\\\"StorageLocation\\\":\\\"\"+results.StorageLocation+\"\\\"\";\n            }\n            \n            if(!results.PID){\n                if(results.PID === \"\"){\n                    itemToUpdate+=\",\\\"PID\\\":\\\"\"+results.PID+\"\\\"\";\n                }\n            }\n            else{\n                itemToUpdate+=\",\\\"PID\\\":\\\"\"+results.PID+\"\\\"\";\n            }\n            itemToUpdate+=\"}\";\n            //node.warn(\"PID - itemToUpdate value after changing LastName here: \"+itemToUpdate);\n            \n            itemToUpdate = JSON.parse(itemToUpdate);\n            //node.warn(\"PID - itemToUpdate value after JSON here: \"+itemToUpdate);\n            \n            toUpdate.push(itemToUpdate);\n            msg.response = \"UserUpdate\";\n            msg.Username = results.Username;\n            msg.payload=toUpdate;\n            msg.send=1;\n            return msg;\n        }else{\n            msg.response = \"invUserUpdate\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n    if(results.Process===\"GetUsers\"){\n        if(results.Role == \"Stock\"){\n            msg.response = \"GetUsers\";\n            var server = global.get(\"server\");\n            //msg.url = \"http://reports:8080/riot-core-services/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&order=LastName%3Aasc&treeView=false&returnFavorite=false&includeResults=true&includeTotal=true\";\n            msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/RAKGETPIDUSERS\";\n            \n            msg.send=3;\n            return msg;\n        }else{\n            msg.response = \"invGetUsers\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 253,
        "wires": [
            [
                "7037cc0a.b9c294",
                "ad27ac54.ccffb"
            ]
        ]
    },
    {
        "id": "b9b441a8.123a2",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1270,
        "y": 173,
        "wires": []
    },
    {
        "id": "b98ef4b3.1ded18",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/MOBILE&thingTypeCode=/RAKCERAMICS/USERS\";\ndelete msg.req;\ndelete msg.res;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 253,
        "wires": [
            [
                "80646b01.3d57d8",
                "af6b99e9.faf1c8"
            ]
        ]
    },
    {
        "id": "80646b01.3d57d8",
        "type": "half-bridge",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1330,
        "y": 253,
        "wires": [
            [
                "caa437e6.d2c4c8"
            ]
        ]
    },
    {
        "id": "caa437e6.d2c4c8",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1490,
        "y": 253,
        "wires": [
            [
                "2bc8f8c2.e539e8"
            ]
        ]
    },
    {
        "id": "2bc8f8c2.e539e8",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.response+\" for \"+msg.Username+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1640,
        "y": 253,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "5eebf37f.afadcc",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Processing",
        "func": "if(msg.response===\"UserCreation\"){\n    var message = {\"response\":\"Authorized. Processing UserCreation for \"+msg.Username};\n    msg.payload = {\n        \"response\":\"true\",\n        \"message\":message        \n    };\n    msg.statusCode = 200;\n    node.warn(\"PID - Authorized UserCreation response\")\n}\nif(msg.response===\"invUserCreation\"){\n    message = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    msg.statusCode = 400;\n    node.warn(\"PID - Incomplete paramenters UserCreation response\")\n}\nif(msg.response===\"UserUpdate\"){\n    message = {\"response\":\"Authorized. Processing User Update for \"+msg.Username};\n    msg.payload = {\n        \"response\":\"true\",\n        \"message\":message        \n    };\n    msg.statusCode = 200;\n    node.warn(\"PID - Authorized UserUpdate response\")\n}\nif(msg.response===\"invUserUpdate\"){\n    message = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    msg.statusCode = 400;\n    node.warn(\"PID - Incomplete paramenters UserUpdate response\")\n}\nif(msg.response===\"invGetUsers\"){\n    message = {\"response\":\"Bad request. Invalid Role specified for the request.\"};\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    msg.statusCode = 400;\n    node.warn(\"PID - Get Users Invalid Role sent response\")\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 173,
        "wires": [
            [
                "b9b441a8.123a2"
            ]
        ]
    },
    {
        "id": "7037cc0a.b9c294",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "e12e21a0.02e51",
        "type": "comment",
        "z": "8cf8d9ad.9c9ed8",
        "name": "FLOW FOR AUTHENTICATION - Supports: Login/Validation, New User, Update Details, Password Update, Dissasociate from PID",
        "info": "",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "6634ddee.f4bcb4",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Authentication",
        "func": "var results = msg.payload.results;\nvar StorageLocation = '', PID = '', message ={};\n\nif(msg.response === \"Authenticate\"){\n    if(results.length > 0){\n        if(results[0].Password === msg.Password && results[0].Status == 'active'){\n            node.warn(\" ***** PID - Authenticated user \"+results[0].Username+\" ***** \");\n            if(results[0].StorageLocation){\n                StorageLocation = results[0].StorageLocation;\n            }\n            if(results[0].PID){\n                PID = results[0].PID;\n            }\n            message = {\n                \"Username\":results[0].Username,\n                \"FirstName\":results[0].FirstName,\n                \"LastName\":results[0].LastName,\n                \"Role\":results[0].Role,\n                \"Plant\":results[0].Plant,\n                \"StorageLocation\":StorageLocation,\n                \"PID\":PID,\n                \"Manager\":results[0].Manager,\n                \"Email\":results[0].Email\n            };\n            msg.payload = {\n                \"response\":\"true\",\n                \"message\":message        \n            };\n            msg.statusCode = 200;\n            return msg;\n        }else{\n            node.warn(\" ***** Failed to authenticate user \"+results[0].Username+\" ***** \");\n            message = {\n                \"response\":\"Wrong credentials. Authentication failed.\"\n            };\n            msg.payload = {\n                \"response\":\"false\",\n                \"message\":message        \n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n    }else{\n            node.warn(\" ***** Failed to authenticate. User doesn't exist \");\n            message = {\n                \"response\":\"User doesn't exist. Authentication failed.\"\n            };\n            msg.payload = {\n                \"response\":\"false\",\n                \"message\":message        \n            };\n            msg.statusCode = 200;\n            return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1460,
        "y": 313,
        "wires": [
            [
                "f20931f5.f11b4"
            ]
        ]
    },
    {
        "id": "ad27ac54.ccffb",
        "type": "switch",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 911,
        "y": 253,
        "wires": [
            [
                "5eebf37f.afadcc"
            ],
            [
                "b98ef4b3.1ded18",
                "5eebf37f.afadcc"
            ],
            [
                "a9b7ab4c.1463f8"
            ],
            [
                "8967ead7.1e1d28"
            ]
        ]
    },
    {
        "id": "a14f0cd5.16e28",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1290,
        "y": 313,
        "wires": [
            [
                "6634ddee.f4bcb4",
                "1ef02888.066bd7"
            ]
        ]
    },
    {
        "id": "a9b7ab4c.1463f8",
        "type": "change",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 313,
        "wires": [
            [
                "a14f0cd5.16e28"
            ]
        ]
    },
    {
        "id": "f20931f5.f11b4",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1610,
        "y": 313,
        "wires": []
    },
    {
        "id": "af6b99e9.faf1c8",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1310,
        "y": 213,
        "wires": []
    },
    {
        "id": "1ef02888.066bd7",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1430,
        "y": 353,
        "wires": []
    },
    {
        "id": "299cc530.e4bc5a",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 450,
        "y": 320,
        "wires": []
    },
    {
        "id": "4d8faef6.79224",
        "type": "Load Balance",
        "z": "8cf8d9ad.9c9ed8",
        "defaultcapacity": 100,
        "dynamic": "6409711c.8bf87",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 480,
        "y": 260,
        "wires": [
            [
                "b12d6faa.cb3f7"
            ],
            [
                "59517b43.150d24"
            ],
            [
                "de615fb2.5be88"
            ],
            [
                "5184b2d7.cad47c"
            ]
        ]
    },
    {
        "id": "b12d6faa.cb3f7",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 690,
        "y": 180,
        "wires": []
    },
    {
        "id": "55d57e42.4f979",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "PID Users",
        "func": "var results = msg.payload.results;\nvar response = msg.payload;\nvar StorageLocation = '', PID = '';\nvar messageActive = {}, messageAvailable = {}, toResponseActive = [], toResponseAvailable = [];\n\nif(msg.response === \"GetUsers\" && !response.error){\n    if(results.length > 0){\n        for(i=0; i<results.length; i++){\n            if(results[i].StorageLocation && results[i].PID){\n                StorageLocation = results[i].StorageLocation;\n                PID = results[i].PID;\n                messageActive = {\n                    \"Username\":results[i].Username,\n                    \"FirstName\":results[i].FirstName,\n                    \"LastName\":results[i].LastName,\n                    \"Role\":results[i].Role,\n                    \"Plant\":results[i].Plant,\n                    \"StorageLocation\":StorageLocation,\n                    \"PID\":PID,\n                    \"Manager\":results[i].Manager\n                };\n                toResponseActive.push(messageActive);\n            }\n            else{\n                StorageLocation = '';\n                PID = '';\n                messageAvailable = {\n                    \"Username\":results[i].Username,\n                    \"FirstName\":results[i].FirstName,\n                    \"LastName\":results[i].LastName,\n                    \"Role\":results[i].Role,\n                    \"Plant\":results[i].Plant,\n                    \"Manager\":results[i].Manager\n                };\n                toResponseAvailable.push(messageAvailable);\n            }\n        }\n        if(toResponseActive.length > 0 || toResponseAvailable.length > 0){\n            msg.payload = {\n                \"response\":\"true\",\n                \"Active\":toResponseActive,\n                \"Available\":toResponseAvailable\n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n        else if(toResponseActive.length === 0 && toResponseAvailable.length === 0){\n            node.warn(\" ***** PID Failed to process request. No users registered for PID Stock Count \");\n            message = {\n                \"response\":\"No users registered for PID Stock Count.\"\n            };\n            msg.payload = {\n                \"response\":\"false\",\n                \"message\":message\n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n    }\n    else{\n        node.warn(\" ***** PID Failed to process request. Couldn't fetch users. \");\n        message = {\n            \"response\":\"Something went wrong. Couldn't fetch users at this moment, try again later.\"\n        };\n        msg.payload = {\n            \"response\":\"false\",\n            \"message\":message        \n        };\n        msg.statusCode = 200;\n        return msg;\n    }\n}\nelse{\n    node.warn(\" ***** PID Failed to process request. Couldn't fetch users. \");\n    message = response.error;\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1450,
        "y": 400,
        "wires": [
            [
                "d3634ddb.f7db3"
            ]
        ]
    },
    {
        "id": "b7e1272a.502eb8",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1290,
        "y": 400,
        "wires": [
            [
                "55d57e42.4f979",
                "34ac9df7.e2aa42"
            ]
        ]
    },
    {
        "id": "8967ead7.1e1d28",
        "type": "change",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 400,
        "wires": [
            [
                "b7e1272a.502eb8"
            ]
        ]
    },
    {
        "id": "d3634ddb.f7db3",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1610,
        "y": 400,
        "wires": []
    },
    {
        "id": "34ac9df7.e2aa42",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1430,
        "y": 440,
        "wires": []
    },
    {
        "id": "a7947065.cf382",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1330,
        "y": 540,
        "wires": []
    },
    {
        "id": "23e8f4e7.ba1e5c",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/MOBILE&thingTypeCode=/RAKCERAMICS/USERS\";\ndelete msg.req;\ndelete msg.res;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 620,
        "wires": [
            [
                "c43ad080.c7f19",
                "a5d5d3c5.d6e13"
            ]
        ]
    },
    {
        "id": "c43ad080.c7f19",
        "type": "half-bridge",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1390,
        "y": 620,
        "wires": [
            [
                "31c837ad.02f7e8"
            ]
        ]
    },
    {
        "id": "31c837ad.02f7e8",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1550,
        "y": 620,
        "wires": [
            [
                "408d5b6b.bf0004"
            ]
        ]
    },
    {
        "id": "408d5b6b.bf0004",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.response+\" for \"+msg.Username+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1700,
        "y": 620,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "251384a9.888e2c",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Processing",
        "func": "if(msg.response===\"UserCreation\"){\n    var message = {\"response\":\"Authorized. Processing UserCreation for \"+msg.Username};\n    msg.payload = {\n        \"response\":\"true\",\n        \"message\":message        \n    };\n    msg.statusCode = 200;\n    node.warn(\"PID - Authorized UserCreation response\")\n}\nif(msg.response===\"invUserCreation\"){\n    message = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    msg.statusCode = 400;\n    node.warn(\"PID - Incomplete paramenters UserCreation response\")\n}\nif(msg.response===\"UserUpdate\"){\n    message = {\"response\":\"Authorized. Processing User Update for \"+msg.Username};\n    msg.payload = {\n        \"response\":\"true\",\n        \"message\":message        \n    };\n    msg.statusCode = 200;\n    node.warn(\"PID - Authorized UserUpdate response\")\n}\nif(msg.response===\"invUserUpdate\"){\n    message = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    msg.statusCode = 400;\n    node.warn(\"PID - Incomplete paramenters UserUpdate response\")\n}\nif(msg.response===\"invGetUsers\"){\n    message = {\"response\":\"Bad request. Invalid Role specified for the request.\"};\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    msg.statusCode = 400;\n    node.warn(\"PID - Get Users Invalid Role sent response\")\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 540,
        "wires": [
            [
                "a7947065.cf382"
            ]
        ]
    },
    {
        "id": "16e7cae7.db67f5",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 970,
        "y": 687,
        "wires": []
    },
    {
        "id": "e3fbf5a0.3b4828",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Authentication",
        "func": "var results = msg.payload.results;\nvar StorageLocation = '', PID = '', message ={};\n\nif(msg.response === \"Authenticate\"){\n    if(results.length > 0){\n        if(results[0].Password === msg.Password && results[0].Status == 'active'){\n            node.warn(\" ***** PID - Authenticated user \"+results[0].Username+\" ***** \");\n            if(results[0].StorageLocation){\n                StorageLocation = results[0].StorageLocation;\n            }\n            if(results[0].PID){\n                PID = results[0].PID;\n            }\n            message = {\n                \"Username\":results[0].Username,\n                \"FirstName\":results[0].FirstName,\n                \"LastName\":results[0].LastName,\n                \"Role\":results[0].Role,\n                \"Plant\":results[0].Plant,\n                \"StorageLocation\":StorageLocation,\n                \"PID\":PID,\n                \"Manager\":results[0].Manager,\n                \"Email\":results[0].Email\n            };\n            msg.payload = {\n                \"response\":\"true\",\n                \"message\":message        \n            };\n            msg.statusCode = 200;\n            return msg;\n        }else{\n            node.warn(\" ***** Failed to authenticate user \"+results[0].Username+\" ***** \");\n            message = {\n                \"response\":\"Wrong credentials. Authentication failed.\"\n            };\n            msg.payload = {\n                \"response\":\"false\",\n                \"message\":message        \n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n    }else{\n            node.warn(\" ***** Failed to authenticate. User doesn't exist \");\n            message = {\n                \"response\":\"User doesn't exist. Authentication failed.\"\n            };\n            msg.payload = {\n                \"response\":\"false\",\n                \"message\":message        \n            };\n            msg.statusCode = 200;\n            return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1520,
        "y": 680,
        "wires": [
            [
                "59f28233.362c9c"
            ]
        ]
    },
    {
        "id": "a88482bb.890a1",
        "type": "switch",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 971,
        "y": 620,
        "wires": [
            [
                "251384a9.888e2c"
            ],
            [
                "23e8f4e7.ba1e5c",
                "251384a9.888e2c"
            ],
            [
                "1e9929d1.5e0ed6"
            ],
            [
                "bd68ca8a.dac738"
            ]
        ]
    },
    {
        "id": "5e23842b.5b89bc",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1350,
        "y": 680,
        "wires": [
            [
                "e3fbf5a0.3b4828",
                "8c7e32e1.25bc2"
            ]
        ]
    },
    {
        "id": "1e9929d1.5e0ed6",
        "type": "change",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 680,
        "wires": [
            [
                "5e23842b.5b89bc"
            ]
        ]
    },
    {
        "id": "59f28233.362c9c",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1670,
        "y": 680,
        "wires": []
    },
    {
        "id": "a5d5d3c5.d6e13",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1370,
        "y": 580,
        "wires": []
    },
    {
        "id": "8c7e32e1.25bc2",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1490,
        "y": 720,
        "wires": []
    },
    {
        "id": "df8241ec.73e63",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "PID Users",
        "func": "var results = msg.payload.results;\nvar response = msg.payload;\nvar StorageLocation = '', PID = '';\nvar messageActive = {}, messageAvailable = {}, toResponseActive = [], toResponseAvailable = [];\n\nif(msg.response === \"GetUsers\" && !response.error){\n    if(results.length > 0){\n        for(i=0; i<results.length; i++){\n            if(results[i].StorageLocation && results[i].PID){\n                StorageLocation = results[i].StorageLocation;\n                PID = results[i].PID;\n                messageActive = {\n                    \"Username\":results[i].Username,\n                    \"FirstName\":results[i].FirstName,\n                    \"LastName\":results[i].LastName,\n                    \"Role\":results[i].Role,\n                    \"Plant\":results[i].Plant,\n                    \"StorageLocation\":StorageLocation,\n                    \"PID\":PID,\n                    \"Manager\":results[i].Manager\n                };\n                toResponseActive.push(messageActive);\n            }\n            else{\n                StorageLocation = '';\n                PID = '';\n                messageAvailable = {\n                    \"Username\":results[i].Username,\n                    \"FirstName\":results[i].FirstName,\n                    \"LastName\":results[i].LastName,\n                    \"Role\":results[i].Role,\n                    \"Plant\":results[i].Plant,\n                    \"Manager\":results[i].Manager\n                };\n                toResponseAvailable.push(messageAvailable);\n            }\n        }\n        if(toResponseActive.length > 0 || toResponseAvailable.length > 0){\n            msg.payload = {\n                \"response\":\"true\",\n                \"Active\":toResponseActive,\n                \"Available\":toResponseAvailable\n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n        else if(toResponseActive.length === 0 && toResponseAvailable.length === 0){\n            node.warn(\" ***** PID Failed to process request. No users registered for PID Stock Count \");\n            message = {\n                \"response\":\"No users registered for PID Stock Count.\"\n            };\n            msg.payload = {\n                \"response\":\"false\",\n                \"message\":message\n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n    }\n    else{\n        node.warn(\" ***** PID Failed to process request. Couldn't fetch users. \");\n        message = {\n            \"response\":\"Something went wrong. Couldn't fetch users at this moment, try again later.\"\n        };\n        msg.payload = {\n            \"response\":\"false\",\n            \"message\":message        \n        };\n        msg.statusCode = 200;\n        return msg;\n    }\n}\nelse{\n    node.warn(\" ***** PID Failed to process request. Couldn't fetch users. \");\n    message = response.error;\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1510,
        "y": 767,
        "wires": [
            [
                "be753da3.89678"
            ]
        ]
    },
    {
        "id": "3594aa2.46c7756",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1350,
        "y": 767,
        "wires": [
            [
                "df8241ec.73e63",
                "b9094574.705ea8"
            ]
        ]
    },
    {
        "id": "bd68ca8a.dac738",
        "type": "change",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 767,
        "wires": [
            [
                "3594aa2.46c7756"
            ]
        ]
    },
    {
        "id": "be753da3.89678",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1670,
        "y": 767,
        "wires": []
    },
    {
        "id": "b9094574.705ea8",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1490,
        "y": 807,
        "wires": []
    },
    {
        "id": "de615fb2.5be88",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized User Management request, proceeding... \");\n    results = msg.payload;\n    \n    if(results.Process===\"UserCreation\"){\n        if(results.Username&&results.FirstName&&results.LastName&&results.Password){\n            var toUpdate = [];\n            if(!results.Email){\n                results.Email=\"\";\n            }\n            if(!results.Plant){\n                results.Plant=\"\";\n            }\n            if(!results.Manager){\n                results.Manager=\"\";\n            }\n            if(!results.Role){\n                results.Role=\"\";\n            }\n            var itemToUpdate = {  \n                \"thingTypeCode\" : \"USERS\",\n                \"timestamp\": currentTime,\n                \"serialNumber\": results.Username,\n    \t\t\t\"FirstName\": results.FirstName,\n    \t\t\t\"LastName\": results.LastName,\n    \t\t\t\"Email\": results.Email,\n    \t\t\t\"Username\": results.Username,\n    \t\t\t\"Password\": results.Password,\n    \t\t\t\"Plant\": results.Plant,\n    \t\t\t\"Manager\": results.Manager,\n    \t\t\t\"Process\": results.Process,\n    \t\t\t\"Role\": results.Role,\n    \t\t\t\"source\": \"MOBILE_\"+results.Process,\n    \t\t\t\"Status\": \"active\"\n            };\n            toUpdate.push(itemToUpdate);\n            msg.response = \"UserCreation\";\n            msg.Username = results.Username;\n            msg.payload=toUpdate;\n            msg.send=1;\n            return msg;\n        }else{\n            msg.response = \"invUserCreation\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n    \n    if(results.Process===\"Authenticate\"){\n        var server = global.get(\"server\");\n        msg.response = \"Authenticate\";\n        msg.Password=results.Password;\n        msg.Username = (results.Username).toUpperCase();\n        //msg.url = server+\"/riot-core-services/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.url = \"http://reports:8080/riot-core-reports/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.send=2;\n        return msg;\n    }\n    \n    if(results.Process===\"UserUpdate\"){\n        if(results.Username){\n            var toUpdate = [];\n            var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"USERS\\\",\"+\n            \"\\\"serialNumber\\\":\\\"\"+(results.Username).toUpperCase()+\n            \"\\\",\\\"Process\\\":\\\"\"+results.Process+\n            \"\\\",\\\"source\\\":\\\"MOBILE_\"+results.Process+\"\\\"\";\n            if(results.FirstName){\n                itemToUpdate+=\",\\\"FirstName\\\":\\\"\"+results.FirstName+\"\\\"\";\n            }\n    \t\tif(results.LastName){\n                itemToUpdate+=\",\\\"LastName\\\":\\\"\"+results.LastName+\"\\\"\";\n            }\n            if(results.Email){\n                itemToUpdate+=\",\\\"Email\\\":\\\"\"+results.Email+\"\\\"\";\n            }\n            if(results.Password){\n                itemToUpdate+=\",\\\"Password\\\":\\\"\"+results.Password+\"\\\"\";\n            }\n            if(results.Plant){\n                itemToUpdate+=\",\\\"Plant\\\":\\\"\"+results.Plant+\"\\\"\";\n            }\n            if(results.Manager){\n                itemToUpdate+=\",\\\"Manager\\\":\\\"\"+results.Manager+\"\\\"\";\n            }\n            if(results.Role){\n                itemToUpdate+=\",\\\"Role\\\":\\\"\"+results.Role+\"\\\"\";\n            }\n            if(results.Status){\n                itemToUpdate+=\",\\\"Status\\\":\\\"\"+results.Status+\"\\\"\";\n            }\n            if(!results.StorageLocation){\n                if(results.StorageLocation === \"\"){\n                    itemToUpdate+=\",\\\"StorageLocation\\\":\\\"\"+results.StorageLocation+\"\\\"\";\n                }\n            }\n            else{\n                itemToUpdate+=\",\\\"StorageLocation\\\":\\\"\"+results.StorageLocation+\"\\\"\";\n            }\n            \n            if(!results.PID){\n                if(results.PID === \"\"){\n                    itemToUpdate+=\",\\\"PID\\\":\\\"\"+results.PID+\"\\\"\";\n                }\n            }\n            else{\n                itemToUpdate+=\",\\\"PID\\\":\\\"\"+results.PID+\"\\\"\";\n            }\n            itemToUpdate+=\"}\";\n            //node.warn(\"PID - itemToUpdate value after changing LastName here: \"+itemToUpdate);\n            \n            itemToUpdate = JSON.parse(itemToUpdate);\n            //node.warn(\"PID - itemToUpdate value after JSON here: \"+itemToUpdate);\n            \n            toUpdate.push(itemToUpdate);\n            msg.response = \"UserUpdate\";\n            msg.Username = results.Username;\n            msg.payload=toUpdate;\n            msg.send=1;\n            return msg;\n        }else{\n            msg.response = \"invUserUpdate\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n    if(results.Process===\"GetUsers\"){\n        if(results.Role == \"Stock\"){\n            msg.response = \"GetUsers\";\n            var server = global.get(\"server\");\n            //msg.url = \"http://reports:8080/riot-core-services/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&order=LastName%3Aasc&treeView=false&returnFavorite=false&includeResults=true&includeTotal=true\";\n            msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/RAKGETPIDUSERS\";\n            \n            msg.send=3;\n            return msg;\n        }else{\n            msg.response = \"invGetUsers\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 620,
        "wires": [
            [
                "16e7cae7.db67f5",
                "a88482bb.890a1"
            ]
        ]
    },
    {
        "id": "9a2c4de.8c386b",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1270,
        "y": 900,
        "wires": []
    },
    {
        "id": "ed790275.886cf",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"PUT\";\nmsg.url = \"http://hbridge:8080/http-bridge/thingBridge/thing?bridgeCode=/RAKCERAMICS/MOBILE&thingTypeCode=/RAKCERAMICS/USERS\";\ndelete msg.req;\ndelete msg.res;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 980,
        "wires": [
            [
                "c09eb448.c962a8",
                "c3016560.34c7f8"
            ]
        ]
    },
    {
        "id": "c09eb448.c962a8",
        "type": "half-bridge",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "bridgeCode": "MOBILE",
        "specName": "",
        "messageSize": "200",
        "longitude": "",
        "latitude": "",
        "altitude": "",
        "declination": "",
        "units": "",
        "x": 1330,
        "y": 980,
        "wires": [
            [
                "f0bfbbba.bf76c8"
            ]
        ]
    },
    {
        "id": "f0bfbbba.bf76c8",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1490,
        "y": 980,
        "wires": [
            [
                "4e28ccfc.c58d74"
            ]
        ]
    },
    {
        "id": "4e28ccfc.c58d74",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Response",
        "func": "\nif(msg.statusCode !== 200){\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\nelse{\n    node.warn(\" ----- SUCCESSFUL Bridge Response AFTER PROCESSING \"+msg.response+\" ---- \");\n    node.warn(\" ***** Successfully processed \"+msg.response+\" for \"+msg.Username+\" ***** \");\n}\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1640,
        "y": 980,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "9aa5b648.ca96e8",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Processing",
        "func": "if(msg.response===\"UserCreation\"){\n    var message = {\"response\":\"Authorized. Processing UserCreation for \"+msg.Username};\n    msg.payload = {\n        \"response\":\"true\",\n        \"message\":message        \n    };\n    msg.statusCode = 200;\n    node.warn(\"PID - Authorized UserCreation response\")\n}\nif(msg.response===\"invUserCreation\"){\n    message = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    msg.statusCode = 400;\n    node.warn(\"PID - Incomplete paramenters UserCreation response\")\n}\nif(msg.response===\"UserUpdate\"){\n    message = {\"response\":\"Authorized. Processing User Update for \"+msg.Username};\n    msg.payload = {\n        \"response\":\"true\",\n        \"message\":message        \n    };\n    msg.statusCode = 200;\n    node.warn(\"PID - Authorized UserUpdate response\")\n}\nif(msg.response===\"invUserUpdate\"){\n    message = {\"response\":\"Bad request. Incomplete parameters\"};\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    msg.statusCode = 400;\n    node.warn(\"PID - Incomplete paramenters UserUpdate response\")\n}\nif(msg.response===\"invGetUsers\"){\n    message = {\"response\":\"Bad request. Invalid Role specified for the request.\"};\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    msg.statusCode = 400;\n    node.warn(\"PID - Get Users Invalid Role sent response\")\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 900,
        "wires": [
            [
                "9a2c4de.8c386b"
            ]
        ]
    },
    {
        "id": "eafb967d.0211b8",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 1047,
        "wires": []
    },
    {
        "id": "5f643a5f.14e0b4",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Authentication",
        "func": "var results = msg.payload.results;\nvar StorageLocation = '', PID = '', message ={};\n\nif(msg.response === \"Authenticate\"){\n    if(results.length > 0){\n        if(results[0].Password === msg.Password && results[0].Status == 'active'){\n            node.warn(\" ***** PID - Authenticated user \"+results[0].Username+\" ***** \");\n            if(results[0].StorageLocation){\n                StorageLocation = results[0].StorageLocation;\n            }\n            if(results[0].PID){\n                PID = results[0].PID;\n            }\n            message = {\n                \"Username\":results[0].Username,\n                \"FirstName\":results[0].FirstName,\n                \"LastName\":results[0].LastName,\n                \"Role\":results[0].Role,\n                \"Plant\":results[0].Plant,\n                \"StorageLocation\":StorageLocation,\n                \"PID\":PID,\n                \"Manager\":results[0].Manager,\n                \"Email\":results[0].Email\n            };\n            msg.payload = {\n                \"response\":\"true\",\n                \"message\":message        \n            };\n            msg.statusCode = 200;\n            return msg;\n        }else{\n            node.warn(\" ***** Failed to authenticate user \"+results[0].Username+\" ***** \");\n            message = {\n                \"response\":\"Wrong credentials. Authentication failed.\"\n            };\n            msg.payload = {\n                \"response\":\"false\",\n                \"message\":message        \n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n    }else{\n            node.warn(\" ***** Failed to authenticate. User doesn't exist \");\n            message = {\n                \"response\":\"User doesn't exist. Authentication failed.\"\n            };\n            msg.payload = {\n                \"response\":\"false\",\n                \"message\":message        \n            };\n            msg.statusCode = 200;\n            return msg;\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1460,
        "y": 1040,
        "wires": [
            [
                "8b1d0f03.793cf"
            ]
        ]
    },
    {
        "id": "51b86bc8.fd81f4",
        "type": "switch",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 911,
        "y": 980,
        "wires": [
            [
                "9aa5b648.ca96e8"
            ],
            [
                "ed790275.886cf",
                "9aa5b648.ca96e8"
            ],
            [
                "e7e7b8b6.663e08"
            ],
            [
                "ca2c01c0.a721f"
            ]
        ]
    },
    {
        "id": "ed789fc7.5c19b",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1290,
        "y": 1040,
        "wires": [
            [
                "5f643a5f.14e0b4",
                "b6deb3fd.cf1c8"
            ]
        ]
    },
    {
        "id": "e7e7b8b6.663e08",
        "type": "change",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 1040,
        "wires": [
            [
                "ed789fc7.5c19b"
            ]
        ]
    },
    {
        "id": "8b1d0f03.793cf",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1610,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c3016560.34c7f8",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1310,
        "y": 940,
        "wires": []
    },
    {
        "id": "b6deb3fd.cf1c8",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1430,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e93e3b39.da7078",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "PID Users",
        "func": "var results = msg.payload.results;\nvar response = msg.payload;\nvar StorageLocation = '', PID = '';\nvar messageActive = {}, messageAvailable = {}, toResponseActive = [], toResponseAvailable = [];\n\nif(msg.response === \"GetUsers\" && !response.error){\n    if(results.length > 0){\n        for(i=0; i<results.length; i++){\n            if(results[i].StorageLocation && results[i].PID){\n                StorageLocation = results[i].StorageLocation;\n                PID = results[i].PID;\n                messageActive = {\n                    \"Username\":results[i].Username,\n                    \"FirstName\":results[i].FirstName,\n                    \"LastName\":results[i].LastName,\n                    \"Role\":results[i].Role,\n                    \"Plant\":results[i].Plant,\n                    \"StorageLocation\":StorageLocation,\n                    \"PID\":PID,\n                    \"Manager\":results[i].Manager\n                };\n                toResponseActive.push(messageActive);\n            }\n            else{\n                StorageLocation = '';\n                PID = '';\n                messageAvailable = {\n                    \"Username\":results[i].Username,\n                    \"FirstName\":results[i].FirstName,\n                    \"LastName\":results[i].LastName,\n                    \"Role\":results[i].Role,\n                    \"Plant\":results[i].Plant,\n                    \"Manager\":results[i].Manager\n                };\n                toResponseAvailable.push(messageAvailable);\n            }\n        }\n        if(toResponseActive.length > 0 || toResponseAvailable.length > 0){\n            msg.payload = {\n                \"response\":\"true\",\n                \"Active\":toResponseActive,\n                \"Available\":toResponseAvailable\n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n        else if(toResponseActive.length === 0 && toResponseAvailable.length === 0){\n            node.warn(\" ***** PID Failed to process request. No users registered for PID Stock Count \");\n            message = {\n                \"response\":\"No users registered for PID Stock Count.\"\n            };\n            msg.payload = {\n                \"response\":\"false\",\n                \"message\":message\n            };\n            msg.statusCode = 200;\n            return msg;\n        }\n    }\n    else{\n        node.warn(\" ***** PID Failed to process request. Couldn't fetch users. \");\n        message = {\n            \"response\":\"Something went wrong. Couldn't fetch users at this moment, try again later.\"\n        };\n        msg.payload = {\n            \"response\":\"false\",\n            \"message\":message        \n        };\n        msg.statusCode = 200;\n        return msg;\n    }\n}\nelse{\n    node.warn(\" ***** PID Failed to process request. Couldn't fetch users. \");\n    message = response.error;\n    msg.payload = {\n        \"response\":\"false\",\n        \"message\":message        \n    };\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1450,
        "y": 1127,
        "wires": [
            [
                "52abd6b8.080a18"
            ]
        ]
    },
    {
        "id": "c32a8939.d131d8",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1290,
        "y": 1127,
        "wires": [
            [
                "e93e3b39.da7078",
                "68a155e0.e4fc2c"
            ]
        ]
    },
    {
        "id": "ca2c01c0.a721f",
        "type": "change",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"apikey\":\"WYMOJXX8QZ4TBAWS\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 1127,
        "wires": [
            [
                "c32a8939.d131d8"
            ]
        ]
    },
    {
        "id": "52abd6b8.080a18",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1610,
        "y": 1127,
        "wires": []
    },
    {
        "id": "68a155e0.e4fc2c",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1430,
        "y": 1167,
        "wires": []
    },
    {
        "id": "5184b2d7.cad47c",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized User Management request, proceeding... \");\n    results = msg.payload;\n    \n    if(results.Process===\"UserCreation\"){\n        if(results.Username&&results.FirstName&&results.LastName&&results.Password){\n            var toUpdate = [];\n            if(!results.Email){\n                results.Email=\"\";\n            }\n            if(!results.Plant){\n                results.Plant=\"\";\n            }\n            if(!results.Manager){\n                results.Manager=\"\";\n            }\n            if(!results.Role){\n                results.Role=\"\";\n            }\n            var itemToUpdate = {  \n                \"thingTypeCode\" : \"USERS\",\n                \"timestamp\": currentTime,\n                \"serialNumber\": results.Username,\n    \t\t\t\"FirstName\": results.FirstName,\n    \t\t\t\"LastName\": results.LastName,\n    \t\t\t\"Email\": results.Email,\n    \t\t\t\"Username\": results.Username,\n    \t\t\t\"Password\": results.Password,\n    \t\t\t\"Plant\": results.Plant,\n    \t\t\t\"Manager\": results.Manager,\n    \t\t\t\"Process\": results.Process,\n    \t\t\t\"Role\": results.Role,\n    \t\t\t\"source\": \"MOBILE_\"+results.Process,\n    \t\t\t\"Status\": \"active\"\n            };\n            toUpdate.push(itemToUpdate);\n            msg.response = \"UserCreation\";\n            msg.Username = results.Username;\n            msg.payload=toUpdate;\n            msg.send=1;\n            return msg;\n        }else{\n            msg.response = \"invUserCreation\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n    \n    if(results.Process===\"Authenticate\"){\n        var server = global.get(\"server\");\n        msg.response = \"Authenticate\";\n        msg.Password=results.Password;\n        msg.Username = (results.Username).toUpperCase();\n        //msg.url = server+\"/riot-core-services/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.url = \"http://reports:8080/riot-core-reports/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&where=serialNumber%3D\"+msg.Username+\"&treeView=false&returnFavorite=false&includeResults=true&includeTotal=false\";\n        msg.send=2;\n        return msg;\n    }\n    \n    if(results.Process===\"UserUpdate\"){\n        if(results.Username){\n            var toUpdate = [];\n            var itemToUpdate = \"{\\\"thingTypeCode\\\":\\\"USERS\\\",\"+\n            \"\\\"serialNumber\\\":\\\"\"+(results.Username).toUpperCase()+\n            \"\\\",\\\"Process\\\":\\\"\"+results.Process+\n            \"\\\",\\\"source\\\":\\\"MOBILE_\"+results.Process+\"\\\"\";\n            if(results.FirstName){\n                itemToUpdate+=\",\\\"FirstName\\\":\\\"\"+results.FirstName+\"\\\"\";\n            }\n    \t\tif(results.LastName){\n                itemToUpdate+=\",\\\"LastName\\\":\\\"\"+results.LastName+\"\\\"\";\n            }\n            if(results.Email){\n                itemToUpdate+=\",\\\"Email\\\":\\\"\"+results.Email+\"\\\"\";\n            }\n            if(results.Password){\n                itemToUpdate+=\",\\\"Password\\\":\\\"\"+results.Password+\"\\\"\";\n            }\n            if(results.Plant){\n                itemToUpdate+=\",\\\"Plant\\\":\\\"\"+results.Plant+\"\\\"\";\n            }\n            if(results.Manager){\n                itemToUpdate+=\",\\\"Manager\\\":\\\"\"+results.Manager+\"\\\"\";\n            }\n            if(results.Role){\n                itemToUpdate+=\",\\\"Role\\\":\\\"\"+results.Role+\"\\\"\";\n            }\n            if(results.Status){\n                itemToUpdate+=\",\\\"Status\\\":\\\"\"+results.Status+\"\\\"\";\n            }\n            if(!results.StorageLocation){\n                if(results.StorageLocation === \"\"){\n                    itemToUpdate+=\",\\\"StorageLocation\\\":\\\"\"+results.StorageLocation+\"\\\"\";\n                }\n            }\n            else{\n                itemToUpdate+=\",\\\"StorageLocation\\\":\\\"\"+results.StorageLocation+\"\\\"\";\n            }\n            \n            if(!results.PID){\n                if(results.PID === \"\"){\n                    itemToUpdate+=\",\\\"PID\\\":\\\"\"+results.PID+\"\\\"\";\n                }\n            }\n            else{\n                itemToUpdate+=\",\\\"PID\\\":\\\"\"+results.PID+\"\\\"\";\n            }\n            itemToUpdate+=\"}\";\n            //node.warn(\"PID - itemToUpdate value after changing LastName here: \"+itemToUpdate);\n            \n            itemToUpdate = JSON.parse(itemToUpdate);\n            //node.warn(\"PID - itemToUpdate value after JSON here: \"+itemToUpdate);\n            \n            toUpdate.push(itemToUpdate);\n            msg.response = \"UserUpdate\";\n            msg.Username = results.Username;\n            msg.payload=toUpdate;\n            msg.send=1;\n            return msg;\n        }else{\n            msg.response = \"invUserUpdate\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n    if(results.Process===\"GetUsers\"){\n        if(results.Role == \"Stock\"){\n            msg.response = \"GetUsers\";\n            var server = global.get(\"server\");\n            //msg.url = \"http://reports:8080/riot-core-services/api/things?fullyQualifiedThingTypeCode=%2FRAKCERAMICS%2FUSERS&order=LastName%3Aasc&treeView=false&returnFavorite=false&includeResults=true&includeTotal=true\";\n            msg.url = \"http://reports:8080/riot-core-reports/api/reportExecution/RAKGETPIDUSERS\";\n            \n            msg.send=3;\n            return msg;\n        }else{\n            msg.response = \"invGetUsers\";\n            msg.send=0;\n            return msg;\n        }\n        \n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 980,
        "wires": [
            [
                "eafb967d.0211b8",
                "51b86bc8.fd81f4"
            ]
        ]
    },
    {
        "id": "87fa7817.548948",
        "type": "http in",
        "z": "8cf8d9ad.9c9ed8",
        "name": "GET SLP-PID PALLET DATA",
        "url": "/api/pid/palletdata",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 1480,
        "wires": [
            [
                "3c213b64.5c9964",
                "a1a34b03.497448"
            ]
        ]
    },
    {
        "id": "5e4452f4.f9284c",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 790,
        "y": 1400,
        "wires": []
    },
    {
        "id": "7fddb14d.48111",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n        }\n    }\n    msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?RAKPALLET.serialNumber=\"+serialNumber+\"\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1473,
        "wires": [
            [
                "68a55e93.10b69"
            ]
        ]
    },
    {
        "id": "68a55e93.10b69",
        "type": "switch",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 1473,
        "wires": [
            [
                "4578165f.799c98"
            ],
            [
                "a19b79dc.ebcfe8"
            ]
        ]
    },
    {
        "id": "3c213b64.5c9964",
        "type": "Load Balance",
        "z": "8cf8d9ad.9c9ed8",
        "defaultcapacity": 100,
        "dynamic": "6409711c.8bf87",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 560,
        "y": 1480,
        "wires": [
            [
                "5e4452f4.f9284c"
            ],
            [
                "7fddb14d.48111"
            ],
            [
                "210603f7.24282c"
            ],
            [
                "5953c7c9.dd7938"
            ]
        ]
    },
    {
        "id": "a1a34b03.497448",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 390,
        "y": 1540,
        "wires": []
    },
    {
        "id": "f9f5153b.61e368",
        "type": "comment",
        "z": "8cf8d9ad.9c9ed8",
        "name": "FLOW FOR PALLET DATA - Exclusive for SLP and PID",
        "info": "",
        "x": 320,
        "y": 1320,
        "wires": []
    },
    {
        "id": "de2bb822.1be378",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Pallet Data",
        "func": "var server = global.get(\"server\");\n\nfunction convertEpochToSpecificTimezone(timeEpoch, offset) {\n    var d = new Date(timeEpoch);\n    var utc = d.getTime() + (d.getTimezoneOffset() * 60000); //This converts to UTC 00:00\n    var nd = new Date(utc + (3600000 * offset));\n    return nd.toLocaleString();\n}\n\nif (msg.statusCode !== 200) {\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n\n} else {\n    node.warn(\" ***** Successfully processed Pallet Data request ***** \");\n\n    var results = msg.payload.data;\n    node.warn(results);\n    var toResponse = [];\n    if (results && !results.length) {\n        //node.warn(\"no\")\n        msg.payload = {\n            \"response\": \"Invalid Pallet data request. No information found.\"\n        };\n        statusCode = 400;\n    } else {\n        //node.warn(\"yes\")\n        for (i = 0; i < results.length; i++) {\n            var palletdata = \"{\\\"serialNumber\\\":\\\"\" + results[i].RAKPALLET.serialNumber + \"\\\"\";\n            var Material_Master = results[i].Material_Master;\n            if (results[i].huitem) {\n                palletdata += \",\\\"huitem\\\":\\\"\" + results[i].huitem + \"\\\"\";\n            } else {\n                palletdata += \",\\\"huitem\\\":\\\"\\\"\";\n            }\n            if (results[i].Material_Code) {\n                palletdata += \",\\\"Material\\\":\\\"\" + results[i].Material_Code + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Material\\\":\\\"\\\"\";\n            }\n            if (results[i].Material_Master) {\n                palletdata += \",\\\"Material_Master\\\":\\\"\" + Material_Master + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Material_Master\\\":\\\"\\\"\";\n            }\n            if (results[i].Batch) {\n                palletdata += \",\\\"Batch\\\":\\\"\" + results[i].Batch + \"\\\"\";\n                var Batch = results[i].Batch;\n            } else {\n                palletdata += \",\\\"Batch\\\":\\\"\\\"\";\n            }\n            if (results[i].Qty) {\n                palletdata += \",\\\"Qty\\\":\\\"\" + results[i].Qty + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Qty\\\":\\\"\\\"\";\n            }\n            if (results[i].location && results[i].location.coordinates) {\n                let coordinates = results[i].location.coordinates;\n                let coordinatesString = coordinates.join(';') + \";0.0\";\n                palletdata += \",\\\"location\\\":\\\"\" + coordinatesString + \"\\\"\";\n            } else {\n                palletdata += \",\\\"location\\\":\\\"\\\"\";\n            }\n            if (results[i].LocationDetails) {\n                palletdata += \",\\\"LocationDetails\\\":\\\"\" + results[i].LocationDetails + \"\\\"\";\n            } else {\n                palletdata += \",\\\"LocationDetails\\\":\\\"\\\"\";\n            }\n            if (results[i].StorageLocation) {\n                palletdata += \",\\\"StorageLocation\\\":\\\"\" + results[i].StorageLocation + \"\\\"\";\n            } else {\n                palletdata += \",\\\"StorageLocation\\\":\\\"\\\"\";\n            }\n            if (results[i].Lane) {\n                palletdata += \",\\\"Lane\\\":\\\"\" + results[i].Lane + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Lane\\\":\\\"\\\"\";\n            }\n            if (results[i].BinLocation) {\n                palletdata += \",\\\"BinLocation\\\":\\\"\" + results[i].BinLocation + \"\\\"\";\n            } else {\n                palletdata += \",\\\"BinLocation\\\":\\\"\\\"\";\n            }\n            if (results[i].L5Location) {\n                palletdata += \",\\\"L5Location\\\":\\\"\" + results[i].L5Location + \"\\\"\";\n            } else {\n                palletdata += \",\\\"L5Location\\\":\\\"\\\"\";\n            }\n            if (results[i].ProcessTime) {\n                var Process_Time = convertEpochToSpecificTimezone(results[i].ProcessTime.value, +4)\n                palletdata += \",\\\"ProcessTime\\\":\\\"\" + Process_Time + \"\\\"\";\n            } else {\n                palletdata += \",\\\"ProcessTime\\\":\\\"\\\"\";\n            }\n            if (results[i].M2_PC_RM_Available) {\n                palletdata += \",\\\"M2_PC_RM_Available\\\":\\\"\" + results[i].M2_PC_RM_Available + \"\\\"\";\n            } else {\n                palletdata += \",\\\"M2_PC_RM_Available\\\":\\\"\\\"\";\n            }\n            if (results[i].M2_PC_RM_Per_Box_Numeric) {\n                palletdata += \",\\\"M2_PC_RM_Per_Box_Numeric\\\":\\\"\" + results[i].M2_PC_RM_Per_Box_Numeric + \"\\\"\";\n            } else {\n                palletdata += \",\\\"M2_PC_RM_Per_Box_Numeric\\\":\\\"\\\"\";\n            }\n            if (results[i].UOM) {\n                palletdata += \",\\\"UOM\\\":\\\"\" + results[i].UOM + \"\\\"\";\n            } else {\n                palletdata += \",\\\"UOM\\\":\\\"\\\"\";\n            }\n           if(results[i].Planning_Group){\n                palletdata+=\",\\\"Planning_Group\\\":\\\"\"+results[i].Planning_Group+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Planning_Group\\\":\\\"\\\"\";\n            }\n            if (results[i].RAKPALLET.Status) {\n                palletdata += \",\\\"Status\\\":\\\"\" + results[i].RAKPALLET.Status + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Status\\\":\\\"\\\"\";\n            }\n            palletdata += \"}\";\n\n            toResponse.push(JSON.parse(palletdata));\n        }\n\n        msg.payload = toResponse;\n    }\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1480,
        "wires": [
            [
                "9d0d74b7.28eb28",
                "27e097ec.6e60f8"
            ]
        ]
    },
    {
        "id": "91f65381.f84f7",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1310,
        "y": 1480,
        "wires": [
            [
                "de2bb822.1be378",
                "4c78fb69.e94f04"
            ]
        ]
    },
    {
        "id": "a19b79dc.ebcfe8",
        "type": "change",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 1480,
        "wires": [
            [
                "91f65381.f84f7"
            ]
        ]
    },
    {
        "id": "4c78fb69.e94f04",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1470,
        "y": 1440,
        "wires": []
    },
    {
        "id": "9d0d74b7.28eb28",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1670,
        "y": 1440,
        "wires": []
    },
    {
        "id": "4578165f.799c98",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1130,
        "y": 1440,
        "wires": []
    },
    {
        "id": "27e097ec.6e60f8",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1670,
        "y": 1480,
        "wires": []
    },
    {
        "id": "210603f7.24282c",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n        }\n    }\n    msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?RAKPALLET.serialNumber=\"+serialNumber+\"\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1620,
        "wires": [
            [
                "21136b0b.c52354"
            ]
        ]
    },
    {
        "id": "21136b0b.c52354",
        "type": "switch",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 1620,
        "wires": [
            [
                "a3a4f735.8f59c8"
            ],
            [
                "c56428ed.2a0ff8"
            ]
        ]
    },
    {
        "id": "3ac47676.67789a",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Pallet Data",
        "func": "var server = global.get(\"server\");\n\nfunction convertEpochToSpecificTimezone(timeEpoch, offset) {\n    var d = new Date(timeEpoch);\n    var utc = d.getTime() + (d.getTimezoneOffset() * 60000); //This converts to UTC 00:00\n    var nd = new Date(utc + (3600000 * offset));\n    return nd.toLocaleString();\n}\n\nif (msg.statusCode !== 200) {\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n\n} else {\n    node.warn(\" ***** Successfully processed Pallet Data request ***** \");\n\n    var results = msg.payload.data;\n    node.warn(results);\n    var toResponse = [];\n    if (results && !results.length) {\n        //node.warn(\"no\")\n        msg.payload = {\n            \"response\": \"Invalid Pallet data request. No information found.\"\n        };\n        statusCode = 400;\n    } else {\n        //node.warn(\"yes\")\n        for (i = 0; i < results.length; i++) {\n            var palletdata = \"{\\\"serialNumber\\\":\\\"\" + results[i].RAKPALLET.serialNumber + \"\\\"\";\n            var Material_Master = results[i].Material_Master;\n            if (results[i].huitem) {\n                palletdata += \",\\\"huitem\\\":\\\"\" + results[i].huitem + \"\\\"\";\n            } else {\n                palletdata += \",\\\"huitem\\\":\\\"\\\"\";\n            }\n            if (results[i].Material_Code) {\n                palletdata += \",\\\"Material\\\":\\\"\" + results[i].Material_Code + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Material\\\":\\\"\\\"\";\n            }\n            if (results[i].Material_Master) {\n                palletdata += \",\\\"Material_Master\\\":\\\"\" + Material_Master + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Material_Master\\\":\\\"\\\"\";\n            }\n            if (results[i].Batch) {\n                palletdata += \",\\\"Batch\\\":\\\"\" + results[i].Batch + \"\\\"\";\n                var Batch = results[i].Batch;\n            } else {\n                palletdata += \",\\\"Batch\\\":\\\"\\\"\";\n            }\n            if (results[i].Qty) {\n                palletdata += \",\\\"Qty\\\":\\\"\" + results[i].Qty + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Qty\\\":\\\"\\\"\";\n            }\n            if (results[i].location && results[i].location.coordinates) {\n                let coordinates = results[i].location.coordinates;\n                let coordinatesString = coordinates.join(';') + \";0.0\";\n                palletdata += \",\\\"location\\\":\\\"\" + coordinatesString + \"\\\"\";\n            } else {\n                palletdata += \",\\\"location\\\":\\\"\\\"\";\n            }\n            if (results[i].LocationDetails) {\n                palletdata += \",\\\"LocationDetails\\\":\\\"\" + results[i].LocationDetails + \"\\\"\";\n            } else {\n                palletdata += \",\\\"LocationDetails\\\":\\\"\\\"\";\n            }\n            if (results[i].StorageLocation) {\n                palletdata += \",\\\"StorageLocation\\\":\\\"\" + results[i].StorageLocation + \"\\\"\";\n            } else {\n                palletdata += \",\\\"StorageLocation\\\":\\\"\\\"\";\n            }\n            if (results[i].Lane) {\n                palletdata += \",\\\"Lane\\\":\\\"\" + results[i].Lane + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Lane\\\":\\\"\\\"\";\n            }\n            if (results[i].BinLocation) {\n                palletdata += \",\\\"BinLocation\\\":\\\"\" + results[i].BinLocation + \"\\\"\";\n            } else {\n                palletdata += \",\\\"BinLocation\\\":\\\"\\\"\";\n            }\n            if (results[i].L5Location) {\n                palletdata += \",\\\"L5Location\\\":\\\"\" + results[i].L5Location + \"\\\"\";\n            } else {\n                palletdata += \",\\\"L5Location\\\":\\\"\\\"\";\n            }\n            if (results[i].ProcessTime) {\n                var Process_Time = convertEpochToSpecificTimezone(results[i].ProcessTime.value, +4)\n                palletdata += \",\\\"ProcessTime\\\":\\\"\" + Process_Time + \"\\\"\";\n            } else {\n                palletdata += \",\\\"ProcessTime\\\":\\\"\\\"\";\n            }\n            if (results[i].M2_PC_RM_Available) {\n                palletdata += \",\\\"M2_PC_RM_Available\\\":\\\"\" + results[i].M2_PC_RM_Available + \"\\\"\";\n            } else {\n                palletdata += \",\\\"M2_PC_RM_Available\\\":\\\"\\\"\";\n            }\n            if (results[i].M2_PC_RM_Per_Box_Numeric) {\n                palletdata += \",\\\"M2_PC_RM_Per_Box_Numeric\\\":\\\"\" + results[i].M2_PC_RM_Per_Box_Numeric + \"\\\"\";\n            } else {\n                palletdata += \",\\\"M2_PC_RM_Per_Box_Numeric\\\":\\\"\\\"\";\n            }\n            if (results[i].UOM) {\n                palletdata += \",\\\"UOM\\\":\\\"\" + results[i].UOM + \"\\\"\";\n            } else {\n                palletdata += \",\\\"UOM\\\":\\\"\\\"\";\n            }\n           if(results[i].Planning_Group){\n                palletdata+=\",\\\"Planning_Group\\\":\\\"\"+results[i].Planning_Group+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Planning_Group\\\":\\\"\\\"\";\n            }\n            if (results[i].RAKPALLET.Status) {\n                palletdata += \",\\\"Status\\\":\\\"\" + results[i].RAKPALLET.Status + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Status\\\":\\\"\\\"\";\n            }\n            palletdata += \"}\";\n\n            toResponse.push(JSON.parse(palletdata));\n        }\n\n        msg.payload = toResponse;\n    }\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1627,
        "wires": [
            [
                "f2ef5df8.c0878",
                "1e6c089f.30a9a7"
            ]
        ]
    },
    {
        "id": "89d7bd24.7783b",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1350,
        "y": 1627,
        "wires": [
            [
                "3ac47676.67789a",
                "cbd2c90e.f72288"
            ]
        ]
    },
    {
        "id": "cbd2c90e.f72288",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1510,
        "y": 1587,
        "wires": []
    },
    {
        "id": "f2ef5df8.c0878",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1710,
        "y": 1587,
        "wires": []
    },
    {
        "id": "a3a4f735.8f59c8",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1170,
        "y": 1587,
        "wires": []
    },
    {
        "id": "1e6c089f.30a9a7",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1710,
        "y": 1627,
        "wires": []
    },
    {
        "id": "5953c7c9.dd7938",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar server = global.get(\"server\");\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Pallet Data request, proceeding... \");\n    results = msg.payload;\n    msg.send=1;\n    if(results.serialNumber){\n        var serialNumber = results.serialNumber;\n        msg.payload={\"serial\":serialNumber};\n    }else{\n        if(results.Material){\n            var Material = results.Material;\n            msg.payload={\"Material_Code\":Material};\n        }\n    }\n     msg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/HUITEM/all?RAKPALLET.serialNumber=\"+serialNumber+\"\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1760,
        "wires": [
            [
                "a01acfce.aa2b5"
            ]
        ]
    },
    {
        "id": "a01acfce.aa2b5",
        "type": "switch",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "property": "send",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 1760,
        "wires": [
            [
                "78979b17.48fde4"
            ],
            [
                "cef493cd.0528d"
            ]
        ]
    },
    {
        "id": "f0ca8a13.1732a8",
        "type": "function",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Pallet Data",
        "func": "var server = global.get(\"server\");\n\nfunction convertEpochToSpecificTimezone(timeEpoch, offset) {\n    var d = new Date(timeEpoch);\n    var utc = d.getTime() + (d.getTimezoneOffset() * 60000); //This converts to UTC 00:00\n    var nd = new Date(utc + (3600000 * offset));\n    return nd.toLocaleString();\n}\n\nif (msg.statusCode !== 200) {\n    node.warn(\" ----- ERROR Bridge Response ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n\n} else {\n    node.warn(\" ***** Successfully processed Pallet Data request ***** \");\n\n    var results = msg.payload.data;\n    node.warn(results);\n    var toResponse = [];\n    if (results && !results.length) {\n        //node.warn(\"no\")\n        msg.payload = {\n            \"response\": \"Invalid Pallet data request. No information found.\"\n        };\n        statusCode = 400;\n    } else {\n        //node.warn(\"yes\")\n        for (i = 0; i < results.length; i++) {\n            var palletdata = \"{\\\"serialNumber\\\":\\\"\" + results[i].RAKPALLET.serialNumber + \"\\\"\";\n            var Material_Master = results[i].Material_Master;\n            if (results[i].huitem) {\n                palletdata += \",\\\"huitem\\\":\\\"\" + results[i].huitem + \"\\\"\";\n            } else {\n                palletdata += \",\\\"huitem\\\":\\\"\\\"\";\n            }\n            if (results[i].Material_Code) {\n                palletdata += \",\\\"Material\\\":\\\"\" + results[i].Material_Code + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Material\\\":\\\"\\\"\";\n            }\n            if (results[i].Material_Master) {\n                palletdata += \",\\\"Material_Master\\\":\\\"\" + Material_Master + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Material_Master\\\":\\\"\\\"\";\n            }\n            if (results[i].Batch) {\n                palletdata += \",\\\"Batch\\\":\\\"\" + results[i].Batch + \"\\\"\";\n                var Batch = results[i].Batch;\n            } else {\n                palletdata += \",\\\"Batch\\\":\\\"\\\"\";\n            }\n            if (results[i].Qty) {\n                palletdata += \",\\\"Qty\\\":\\\"\" + results[i].Qty + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Qty\\\":\\\"\\\"\";\n            }\n            if (results[i].location && results[i].location.coordinates) {\n                let coordinates = results[i].location.coordinates;\n                let coordinatesString = coordinates.join(';') + \";0.0\";\n                palletdata += \",\\\"location\\\":\\\"\" + coordinatesString + \"\\\"\";\n            } else {\n                palletdata += \",\\\"location\\\":\\\"\\\"\";\n            }\n            if (results[i].LocationDetails) {\n                palletdata += \",\\\"LocationDetails\\\":\\\"\" + results[i].LocationDetails + \"\\\"\";\n            } else {\n                palletdata += \",\\\"LocationDetails\\\":\\\"\\\"\";\n            }\n            if (results[i].StorageLocation) {\n                palletdata += \",\\\"StorageLocation\\\":\\\"\" + results[i].StorageLocation + \"\\\"\";\n            } else {\n                palletdata += \",\\\"StorageLocation\\\":\\\"\\\"\";\n            }\n            if (results[i].Lane) {\n                palletdata += \",\\\"Lane\\\":\\\"\" + results[i].Lane + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Lane\\\":\\\"\\\"\";\n            }\n            if (results[i].BinLocation) {\n                palletdata += \",\\\"BinLocation\\\":\\\"\" + results[i].BinLocation + \"\\\"\";\n            } else {\n                palletdata += \",\\\"BinLocation\\\":\\\"\\\"\";\n            }\n            if (results[i].L5Location) {\n                palletdata += \",\\\"L5Location\\\":\\\"\" + results[i].L5Location + \"\\\"\";\n            } else {\n                palletdata += \",\\\"L5Location\\\":\\\"\\\"\";\n            }\n            if (results[i].ProcessTime) {\n                var Process_Time = convertEpochToSpecificTimezone(results[i].ProcessTime.value, +4)\n                palletdata += \",\\\"ProcessTime\\\":\\\"\" + Process_Time + \"\\\"\";\n            } else {\n                palletdata += \",\\\"ProcessTime\\\":\\\"\\\"\";\n            }\n            if (results[i].M2_PC_RM_Available) {\n                palletdata += \",\\\"M2_PC_RM_Available\\\":\\\"\" + results[i].M2_PC_RM_Available + \"\\\"\";\n            } else {\n                palletdata += \",\\\"M2_PC_RM_Available\\\":\\\"\\\"\";\n            }\n            if (results[i].M2_PC_RM_Per_Box_Numeric) {\n                palletdata += \",\\\"M2_PC_RM_Per_Box_Numeric\\\":\\\"\" + results[i].M2_PC_RM_Per_Box_Numeric + \"\\\"\";\n            } else {\n                palletdata += \",\\\"M2_PC_RM_Per_Box_Numeric\\\":\\\"\\\"\";\n            }\n            if (results[i].UOM) {\n                palletdata += \",\\\"UOM\\\":\\\"\" + results[i].UOM + \"\\\"\";\n            } else {\n                palletdata += \",\\\"UOM\\\":\\\"\\\"\";\n            }\n           if(results[i].Planning_Group){\n                palletdata+=\",\\\"Planning_Group\\\":\\\"\"+results[i].Planning_Group+\"\\\"\";\n            }else{\n                palletdata+=\",\\\"Planning_Group\\\":\\\"\\\"\";\n            }\n            if (results[i].RAKPALLET.Status) {\n                palletdata += \",\\\"Status\\\":\\\"\" + results[i].RAKPALLET.Status + \"\\\"\";\n            } else {\n                palletdata += \",\\\"Status\\\":\\\"\\\"\";\n            }\n            palletdata += \"}\";\n\n            toResponse.push(JSON.parse(palletdata));\n        }\n\n        msg.payload = toResponse;\n    }\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1767,
        "wires": [
            [
                "d4eb6e7a.32b2e",
                "d988c6ec.0f4278"
            ]
        ]
    },
    {
        "id": "d8540311.30893",
        "type": "http request",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 1310,
        "y": 1767,
        "wires": [
            [
                "f0ca8a13.1732a8",
                "271c4664.529f6a"
            ]
        ]
    },
    {
        "id": "271c4664.529f6a",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1470,
        "y": 1727,
        "wires": []
    },
    {
        "id": "d4eb6e7a.32b2e",
        "type": "debug",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1670,
        "y": 1727,
        "wires": []
    },
    {
        "id": "78979b17.48fde4",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1130,
        "y": 1727,
        "wires": []
    },
    {
        "id": "d988c6ec.0f4278",
        "type": "http response",
        "z": "8cf8d9ad.9c9ed8",
        "name": "",
        "x": 1670,
        "y": 1767,
        "wires": []
    },
    {
        "id": "cef493cd.0528d",
        "type": "change",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 1767,
        "wires": [
            [
                "d8540311.30893"
            ]
        ]
    },
    {
        "id": "c56428ed.2a0ff8",
        "type": "change",
        "z": "8cf8d9ad.9c9ed8",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1627,
        "wires": [
            [
                "89d7bd24.7783b"
            ]
        ]
    },
    {
        "id": "3ad5a53f4003d107",
        "type": "http in",
        "z": "d46758fd179faf99",
        "name": "UPDATE L5 and GRID",
        "url": "/api/updatelocations/v1",
        "method": "patch",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "7f1fb2d37c170b2d",
                "61277bee4566b074"
            ]
        ]
    },
    {
        "id": "bed1f5f18671a28c",
        "type": "function",
        "z": "d46758fd179faf99",
        "name": "Validate Request",
        "func": "// Function to check for special characters\nfunction containsSpecialChars(str) {\n    var splChars = \"*|,\\\":<>[]{}`\\';()@&$#%/?!\";\n    for (var i = 0; i < str.length; i++) {\n        if (splChars.indexOf(str.charAt(i)) !== -1) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// Function to check if a value is non-empty and not null\nfunction isValidValue(value) {\n    return typeof value === 'string' && value.trim() !== '';\n}\n\n// Function to validate UDFs fields\nfunction validateUDFs(udfs) {\n    const udfsFields = ['L5Location', 'GridID', 'User'];\n    for (let field of udfsFields) {\n        const fieldValue = udfs[field] ? udfs[field].value : undefined;\n        if (!fieldValue || !isValidValue(fieldValue)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Validate the received request\nvar headers = msg.req.headers;\n\n// Check if the API key is correct\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials.\");\n    msg.payload = { \"response\": \"Unauthorized\" };\n    msg.statusCode = 401;\n    return [msg, null];\n} else {\n    node.warn(\"Authorized L5Loc & GridID Update transaction, proceeding...\");\n    let results = msg.payload;\n\n    for (let result of results) {\n        // Check for special characters in serialNumber\n        if (containsSpecialChars(result.serialNumber) || result.serialNumber.length < 18 || result.serialNumber.length > 24) {\n            msg.payload = { \"response\": \"Invalid QR code.\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n\n        // Validate UDFs\n        if (!validateUDFs(result.udfs)) {\n            msg.payload = { \"response\": \"Invalid UDFs. Missing or empty values detected.\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n        \n        // Validate Process\n        if (result.process !== 'l5gUpdate') {\n            msg.payload = { \"response\": \"Invalid process declared for endpoint.\" };\n            msg.statusCode = 400;\n            return msg;\n        }\n    }\n    \n    msg.payloadOriginal = msg.payload;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 240,
        "wires": [
            [
                "5142bd5aa529e33a"
            ]
        ]
    },
    {
        "id": "9763a1706d50f360",
        "type": "http response",
        "z": "d46758fd179faf99",
        "name": "",
        "x": 1010,
        "y": 220,
        "wires": []
    },
    {
        "id": "5142bd5aa529e33a",
        "type": "switch",
        "z": "d46758fd179faf99",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 240,
        "wires": [
            [
                "9763a1706d50f360"
            ],
            [
                "9763a1706d50f360"
            ],
            [
                "518e0a19ec8e7b78"
            ]
        ]
    },
    {
        "id": "61277bee4566b074",
        "type": "Load Balance",
        "z": "d46758fd179faf99",
        "defaultcapacity": 100,
        "dynamic": "fe6cdb09.f4b208",
        "hashType": "pearson",
        "mps": "",
        "name": "",
        "noavailability": "admin",
        "nocapacity": "admin",
        "outputs": 4,
        "routes": "3",
        "selection": "next",
        "sourceProperty": "msg.topic",
        "sticky": "",
        "x": 440,
        "y": 240,
        "wires": [
            [
                "117c5e9073912c02"
            ],
            [
                "bed1f5f18671a28c"
            ],
            [
                "bed1f5f18671a28c"
            ],
            [
                "bed1f5f18671a28c"
            ]
        ]
    },
    {
        "id": "7f1fb2d37c170b2d",
        "type": "debug",
        "z": "d46758fd179faf99",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 410,
        "y": 320,
        "wires": []
    },
    {
        "id": "fe8fbe0036d28820",
        "type": "file",
        "z": "d46758fd179faf99",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 630,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6a4eb1c11506ae76",
        "type": "function",
        "z": "d46758fd179faf99",
        "name": "Inbound Logs",
        "func": "var currentDate = new Date();\nvar shortDate = (currentDate.getMonth()+1) + '-'+ currentDate.getFullYear();\nvar initialTime = (currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate());\nvar filename = '/flows/logs/RAK/LOC-UPDATE/'+ shortDate + '/inbound/' + initialTime + '.txt';\nmsg.filename = filename;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 180,
        "wires": [
            [
                "fe8fbe0036d28820",
                "117c5e9073912c02"
            ]
        ]
    },
    {
        "id": "117c5e9073912c02",
        "type": "debug",
        "z": "d46758fd179faf99",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 630,
        "y": 180,
        "wires": []
    },
    {
        "id": "518e0a19ec8e7b78",
        "type": "function",
        "z": "d46758fd179faf99",
        "name": "Prepare Item Messages",
        "func": "var message = msg.payload;\nvar currentTime = new Date().getTime();\n\n// Processing\nvar toUpdateP = [];\nmessage.forEach((item) => {\n    let serialNumber = item.serialNumber;\n    let process = item.process;\n    let userValue = item.udfs.User.value;\n    let GridIDValue = item.udfs.GridID.value;\n    let L5LocationValue = item.udfs.L5Location.value;\n       // Setting up pallet information\n    var bodyP = \"{\"+\n        \"\\\"serialNumber\\\":\\\"\" + serialNumber + \"\\\",\"+\n        \"\\\"User\\\":\\\"\" + userValue + \"\\\",\"+\n        \"\\\"GridID\\\":\\\"\" + GridIDValue + \"\\\",\"+\n        \"\\\"Process\\\":\\\"\" + process + \"\\\",\"+\n        \"\\\"L5Location\\\":\\\"\" + L5LocationValue + \"\\\"\";\n\n // Extracting location and making it an object\n    let location = item.udfs.location.value; // assuming location is a string like \"lat;long\"\n    let locationObject = null;\n    if (location) {\n        let locationArray = location.split(';').map(Number);\n        locationObject = {\n            \"type\": \"Point\",\n            \"coordinates\": locationArray\n        };\n        bodyP += \",\\\"location\\\":\" + JSON.stringify(locationObject);\n           node.warn(bodyP);\n    }\n    bodyP += \"}\";\n\n\n    toUpdateP.push(JSON.parse(bodyP)); // Directly push the object\n});\n\nmsg.payloadP = toUpdateP;\n\n// Set the response message\nmsg.payload = { \"response\": \"Success, update processed for \" + toUpdateP.length + \" Pallets\" };\nmsg.statusCode = 200;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 260,
        "wires": [
            [
                "162e93d15c8c8459",
                "76992eb6a4317291",
                "b419fef3782edfc9"
            ]
        ]
    },
    {
        "id": "76992eb6a4317291",
        "type": "change",
        "z": "d46758fd179faf99",
        "name": "RAKPALLET",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payloadP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 260,
        "wires": [
            [
                "5166de19c6506f3b"
            ]
        ]
    },
    {
        "id": "5166de19c6506f3b",
        "type": "function",
        "z": "d46758fd179faf99",
        "name": "Chunk Payload",
        "func": "var totalMsgs = msg.payload;\n//node.warn(totalMsgs);\nvar chunkPayload = [];\nvar i,j,temparray,chunk = 50;\n\nfor (i=0,j=totalMsgs.length; i<j; i+=chunk) {\n    temparray = totalMsgs.slice(i,i+chunk);\n    chunkPayload.push({payload:temparray});\n}\n\nreturn [chunkPayload];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 260,
        "wires": [
            [
                "8cbf17ba243ab608"
            ]
        ]
    },
    {
        "id": "8cbf17ba243ab608",
        "type": "delay",
        "z": "d46758fd179faf99",
        "name": "5s",
        "pauseType": "rate",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1610,
        "y": 260,
        "wires": [
            [
                "832a3ff4d0b5e2a0"
            ]
        ]
    },
    {
        "id": "832a3ff4d0b5e2a0",
        "type": "function",
        "z": "d46758fd179faf99",
        "name": "Prepare HTTP item",
        "func": "msg.method = \"POST\";\nmsg.url = \"http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKPALLET/bulk/serialNumber\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 260,
        "wires": [
            [
                "4a5cb82fa24cf3da"
            ]
        ]
    },
    {
        "id": "129c53fd2add8229",
        "type": "http request",
        "z": "d46758fd179faf99",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 2150,
        "y": 260,
        "wires": [
            [
                "17770b5e65fe5ef4",
                "206abe6b2d5dc5f5"
            ]
        ]
    },
    {
        "id": "162e93d15c8c8459",
        "type": "http response",
        "z": "d46758fd179faf99",
        "name": "",
        "x": 1270,
        "y": 220,
        "wires": []
    },
    {
        "id": "17770b5e65fe5ef4",
        "type": "debug",
        "z": "d46758fd179faf99",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 2310,
        "y": 220,
        "wires": []
    },
    {
        "id": "ab52d6556cb91691",
        "type": "debug",
        "z": "d46758fd179faf99",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 2130,
        "y": 200,
        "wires": []
    },
    {
        "id": "206abe6b2d5dc5f5",
        "type": "function",
        "z": "d46758fd179faf99",
        "name": "Response",
        "func": "msg.payload = JSON.parse(msg.payload);\nif(msg.payload.success !== true){\n    node.warn(\" ----- ERROR Bridge Response L5Location & GridID update ---- \");\n    node.warn(msg.payload);\n    node.warn(msg.headers);\n    node.warn(msg.statusCode);\n    node.warn(msg.responseUrl);\n    msg.tmp = 0;\n    return msg;\n    \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 260,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.png"
    },
    {
        "id": "b419fef3782edfc9",
        "type": "debug",
        "z": "d46758fd179faf99",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1270,
        "y": 300,
        "wires": []
    },
    {
        "id": "4a5cb82fa24cf3da",
        "type": "change",
        "z": "d46758fd179faf99",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 260,
        "wires": [
            [
                "ab52d6556cb91691",
                "129c53fd2add8229"
            ]
        ]
    },
    {
        "id": "87b47ffd7c4b31a3",
        "type": "function",
        "z": "d46758fd179faf99",
        "name": "old_Prepare Item Messages",
        "func": "var message = msg.payload;\nvar currentTime = new Date().getTime();\n\n// Processing\nvar toUpdateP = [];\nmessage.forEach((item) => {\n    let serialNumber = item.serialNumber;\n    let process = item.process;\n    let userValue = item.udfs.User.value;\n    let GridIDValue = item.udfs.GridID.value;\n    let L5LocationValue = item.udfs.L5Location.value;\n    \n    // Setting up pallet information\n     var bodyP = \"{\"+\n        \"\\\"serialNumber\\\":\\\"\" + serialNumber + \"\\\",\"+\n        \"\\\"User\\\":\\\"\" + userValue + \"\\\",\"+\n        \"\\\"GridID\\\":\\\"\" + GridIDValue + \"\\\",\"+\n        \"\\\"Process\\\":\\\"\" + process + \"\\\",\"+\n        \"\\\"L5Location\\\":\\\"\" + L5LocationValue + \"\\\"\"+\n    \"}\";\n        \n    toUpdateP.push(JSON.parse(bodyP)); // Directly push the object\n});\n\nmsg.payloadP = toUpdateP;\n\n// Set the response message\nmsg.payload = { \"response\": \"Success, update processed for \" + toUpdateP.length + \" Pallets\" };\nmsg.statusCode = 200;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "b419fef3782edfc9",
                "76992eb6a4317291",
                "162e93d15c8c8459"
            ]
        ]
    },
    {
        "id": "f48b195ed7db745c",
        "type": "http in",
        "z": "29d858278349a4dd",
        "name": "Get Location from innfini",
        "url": "/get/location",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "a9e06a05d3383031"
            ]
        ]
    },
    {
        "id": "a9e06a05d3383031",
        "type": "function",
        "z": "29d858278349a4dd",
        "name": "Validate Request",
        "func": "//Validate the received request\nvar headers = msg.req.headers;\n// Check if the API key is correct\nif (!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS') {\n    node.warn(\"Unauthorized transaction, wrong credentials.\");\n    msg.payload = { \"response\": \"Unauthorized\" };\n    msg.statusCode = 401;\n    return [msg, null];\n}else{\n    node.warn(\"Authorized Get Locations transaction, proceeding... \");\n   return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 200,
        "wires": [
            [
                "cc5aeaa42d9f9c81"
            ]
        ]
    },
    {
        "id": "6d21405f66442057",
        "type": "debug",
        "z": "29d858278349a4dd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1330,
        "y": 240,
        "wires": []
    },
    {
        "id": "88cd15ec4eed765d",
        "type": "http response",
        "z": "29d858278349a4dd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1330,
        "y": 160,
        "wires": []
    },
    {
        "id": "d88bc66bd866e181",
        "type": "http request",
        "z": "29d858278349a4dd",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 950,
        "y": 200,
        "wires": [
            [
                "b5f61b21a44ef0a8"
            ]
        ]
    },
    {
        "id": "4cc9e7483716fc7f",
        "type": "change",
        "z": "29d858278349a4dd",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://139.59.151.223:5000/core/thing-type/661f5436174cde64b663fbf4/RAKLOCATIONS/all",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 200,
        "wires": [
            [
                "d88bc66bd866e181",
                "b8a8f0db7430a4db"
            ]
        ]
    },
    {
        "id": "b8a8f0db7430a4db",
        "type": "debug",
        "z": "29d858278349a4dd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 890,
        "y": 260,
        "wires": []
    },
    {
        "id": "2277d5579a8a77a1",
        "type": "comment",
        "z": "29d858278349a4dd",
        "name": "Flow for get Mapped Locations from vizix",
        "info": "",
        "x": 260,
        "y": 100,
        "wires": []
    },
    {
        "id": "b5f61b21a44ef0a8",
        "type": "function",
        "z": "29d858278349a4dd",
        "name": "Change Property Name",
        "func": "node.warn(msg.payload)\nmsg.payload = {\n    success: msg.payload.success,\n    total: msg.payload.total,\n    results: msg.payload.data,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "88cd15ec4eed765d",
                "6d21405f66442057"
            ]
        ]
    },
    {
        "id": "b498fd4309e4d77b",
        "type": "http response",
        "z": "29d858278349a4dd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 750,
        "y": 120,
        "wires": []
    },
    {
        "id": "cc5aeaa42d9f9c81",
        "type": "switch",
        "z": "29d858278349a4dd",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "401",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 200,
        "wires": [
            [
                "b498fd4309e4d77b"
            ],
            [
                "4cc9e7483716fc7f"
            ]
        ]
    },
    {
        "id": "a6686df69921a3e0",
        "type": "sqlite",
        "z": "29d858278349a4dd",
        "mydb": "ae98c1c14c4ef5ac",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Get Items",
        "x": 500,
        "y": 420,
        "wires": [
            [
                "9e57c60a2859b048",
                "fc31489caca65c5b"
            ]
        ]
    },
    {
        "id": "875b8b1bb95b64f4",
        "type": "http in",
        "z": "29d858278349a4dd",
        "name": "",
        "url": "/run_query",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 480,
        "wires": [
            [
                "9b5416042b72a3ae"
            ]
        ]
    },
    {
        "id": "9b5416042b72a3ae",
        "type": "function",
        "z": "29d858278349a4dd",
        "name": "Validate Request 2.0",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\nvar currentTime = new Date().getTime();\nqueryResults=\"\";\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS_run_query'){\n    node.warn(\"Unauthorized Lookup transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    msg.send=0;\n    return msg;\n}\nelse{\n    node.warn(\"Authorized Lookup request, proceeding... \");\n    results = msg.payload;\n  \n    msg.topic = results.query;\n    msg.send=1;\n    return msg;\n\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 420,
        "wires": [
            [
                "a6686df69921a3e0"
            ]
        ]
    },
    {
        "id": "9e57c60a2859b048",
        "type": "http response",
        "z": "29d858278349a4dd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 780,
        "y": 480,
        "wires": []
    },
    {
        "id": "fc31489caca65c5b",
        "type": "debug",
        "z": "29d858278349a4dd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 670,
        "y": 380,
        "wires": []
    },
    {
        "id": "fc699fa2369ca2a3",
        "type": "http in",
        "z": "29d858278349a4dd",
        "name": "Body_records",
        "url": "/body_data",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "be00d609ea5f716a",
                "2e738cbe034355f7"
            ]
        ]
    },
    {
        "id": "be00d609ea5f716a",
        "type": "debug",
        "z": "29d858278349a4dd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 326,
        "y": 715,
        "wires": []
    },
    {
        "id": "2e738cbe034355f7",
        "type": "http response",
        "z": "29d858278349a4dd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 300,
        "y": 800,
        "wires": []
    },
    {
        "id": "db1a918307a9facc",
        "type": "comment",
        "z": "29d858278349a4dd",
        "name": "Flow for to push DCD demo data to Dashboard ",
        "info": "",
        "x": 200,
        "y": 640,
        "wires": []
    },
    {
        "id": "1bd52dcb191e0e2c",
        "type": "debug",
        "z": "cc9eba98c223b353",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 360,
        "wires": []
    },
    {
        "id": "ed7ff795593c43ad",
        "type": "http in",
        "z": "cc9eba98c223b353",
        "name": "user-auth",
        "url": "/stock-count/auth/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 280,
        "wires": [
            [
                "730c15fb6cc21bce",
                "e30d0ed88b7e2094"
            ]
        ]
    },
    {
        "id": "015f2a409661ad14",
        "type": "comment",
        "z": "cc9eba98c223b353",
        "name": "Authentication/Registration user for stock count table users",
        "info": "",
        "x": 390,
        "y": 160,
        "wires": []
    },
    {
        "id": "377dd98b81b3b77f",
        "type": "function",
        "z": "cc9eba98c223b353",
        "name": "Prepare Item Messages",
        "func": "let results = msg.payload;\nlet username = results.username;\nlet password = results.password;\nmsg.payload = {\n    username: username,\n    password: password\n };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 320,
        "wires": [
            [
                "bc02291f3db685f5"
            ]
        ]
    },
    {
        "id": "730c15fb6cc21bce",
        "type": "function",
        "z": "cc9eba98c223b353",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized User Authentication transaction, proceeding... \");\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 280,
        "wires": [
            [
                "1537d1b8d284b068"
            ]
        ]
    },
    {
        "id": "1537d1b8d284b068",
        "type": "switch",
        "z": "cc9eba98c223b353",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 280,
        "wires": [
            [
                "e03112cd4ab1fbfd"
            ],
            [
                "377dd98b81b3b77f"
            ]
        ]
    },
    {
        "id": "e03112cd4ab1fbfd",
        "type": "http response",
        "z": "cc9eba98c223b353",
        "name": "",
        "x": 730,
        "y": 240,
        "wires": []
    },
    {
        "id": "e30d0ed88b7e2094",
        "type": "debug",
        "z": "cc9eba98c223b353",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 240,
        "wires": []
    },
    {
        "id": "50b3ae7854fd3627",
        "type": "function",
        "z": "cc9eba98c223b353",
        "name": "",
        "func": "let users = msg.payload; // Assuming users is an array of user objects\nlet password = msg.password; // Password provided by user\n\nlet authenticatedUser = null;\nlet success = false;\n\nfor (let i = 0; i < users.length; i++) {\n  let user = users[i];\n  if (user.password === password) {\n    authenticatedUser = user;\n    success = true;\n    break;\n  }\n}\n\nif (success) {\n  msg.payload = {\n    success: true,\n    message: \"Success\",\n    user: authenticatedUser\n  };\n} else {\n  msg.payload = {\n    success: false,\n    message: \"No Record Found\"\n  };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4b607d0bddb3cb6e",
        "type": "inject",
        "z": "cc9eba98c223b353",
        "name": "Manual",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{     \"username\": \"20041663\",     \"password\": \"test123\" }",
        "payloadType": "str",
        "x": 850,
        "y": 380,
        "wires": [
            [
                "bc02291f3db685f5"
            ]
        ]
    },
    {
        "id": "1481b6efd2799427",
        "type": "mongodb-node",
        "z": "cc9eba98c223b353",
        "mongodb": "880aa783e78c1721",
        "name": "user-auth",
        "collection": "stockCountUser",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 1000,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "ae940f549287ddc4",
        "type": "http response",
        "z": "cc9eba98c223b353",
        "name": "",
        "x": 1290,
        "y": 320,
        "wires": []
    },
    {
        "id": "cede2d5b0d12beeb",
        "type": "debug",
        "z": "cc9eba98c223b353",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 660,
        "wires": []
    },
    {
        "id": "97d73956614dd55f",
        "type": "http in",
        "z": "cc9eba98c223b353",
        "name": "user-registeration",
        "url": "/stock-count/auth/Register",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 580,
        "wires": [
            [
                "6d1d95af0fc6108a",
                "9363a99b1e1c77c6"
            ]
        ]
    },
    {
        "id": "905766f083288191",
        "type": "function",
        "z": "cc9eba98c223b353",
        "name": "Prepare Item Messages",
        "func": "let results = msg.payload;\nlet username = results.username;\nlet password = results.password;\nmsg.payload = {\n    \"name\": results.name,\n    \"username\": results.username,\n    \"password\": results.password,\n    \"plant\": results.plant,\n    \"storageLocation\": results.storageLocation,\n    \"sapId\": results.sapId,\n    \"role\": results.role\n };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 620,
        "wires": [
            [
                "eebd5d092ce849a0"
            ]
        ]
    },
    {
        "id": "6d1d95af0fc6108a",
        "type": "function",
        "z": "cc9eba98c223b353",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized User Authentication transaction, proceeding... \");\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 580,
        "wires": [
            [
                "88bc0521f374ccdc"
            ]
        ]
    },
    {
        "id": "88bc0521f374ccdc",
        "type": "switch",
        "z": "cc9eba98c223b353",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 580,
        "wires": [
            [
                "746002a1beb445c5"
            ],
            [
                "905766f083288191"
            ]
        ]
    },
    {
        "id": "746002a1beb445c5",
        "type": "http response",
        "z": "cc9eba98c223b353",
        "name": "",
        "x": 750,
        "y": 540,
        "wires": []
    },
    {
        "id": "9363a99b1e1c77c6",
        "type": "debug",
        "z": "cc9eba98c223b353",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 540,
        "wires": []
    },
    {
        "id": "68f2cf46780bf4d4",
        "type": "function",
        "z": "cc9eba98c223b353",
        "name": "",
        "func": "if (msg.payload.insertedCount !== 1) {\n  node.warn(\"----- ERROR Bridge Response ----\");\n  node.warn(msg.payload);\n  node.warn(msg.headers);\n  node.warn(msg.responseUrl);\n  return msg;\n} else {\n  node.warn(\"***** User Created Successfully \" + JSON.stringify(msg.payload.ops) + \"\");\n  msg.payload.ops\n  return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "3b082db682a9288f",
        "type": "inject",
        "z": "cc9eba98c223b353",
        "name": "Manual",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{     \"name\": \"Shehzad4\",     \"username\": \"952278510\",     \"password\": \"test1234\",     \"plant\": \"MG3\",     \"storageLocation\": \"TC6\",     \"sapId\": \"95227810\",     \"role\": \"stockHelper\" }",
        "payloadType": "str",
        "x": 870,
        "y": 680,
        "wires": [
            [
                "eebd5d092ce849a0"
            ]
        ]
    },
    {
        "id": "09ab57d2dc0a5cd5",
        "type": "mongodb-node",
        "z": "cc9eba98c223b353",
        "mongodb": "880aa783e78c1721",
        "name": "user-auth",
        "collection": "stockCountUser",
        "operation": "insert",
        "upsert": false,
        "multi": false,
        "x": 1000,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "9a0ebcb49a56af38",
        "type": "http response",
        "z": "cc9eba98c223b353",
        "name": "",
        "x": 1210,
        "y": 620,
        "wires": []
    },
    {
        "id": "62c45121c8efb2bd",
        "type": "comment",
        "z": "cc9eba98c223b353",
        "name": "Registration user for stock count table users",
        "info": "",
        "x": 350,
        "y": 480,
        "wires": []
    },
    {
        "id": "efd885c0bee06485",
        "type": "comment",
        "z": "cc9eba98c223b353",
        "name": "Get pidocs based on assigned_pid",
        "info": "",
        "x": 320,
        "y": 840,
        "wires": []
    },
    {
        "id": "03a7e538faadb254",
        "type": "debug",
        "z": "cc9eba98c223b353",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1040,
        "wires": []
    },
    {
        "id": "2e79eeac4ee6fe09",
        "type": "http in",
        "z": "cc9eba98c223b353",
        "name": "Get-pidocs-by-id",
        "url": "/api/v1/pidocs",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 960,
        "wires": [
            [
                "b50870e1a6156bf2",
                "92a79d865f0d477e"
            ]
        ]
    },
    {
        "id": "ddbcb3b160acd523",
        "type": "function",
        "z": "cc9eba98c223b353",
        "name": "Prepare Item Messages",
        "func": "// Load the mongodb module from the global context\nconst mongodb = global.get('mongodb');\n\n// Assuming msg.payload contains {\"_id\": \"66389282af188528397f81bb\"}\nlet pidocsID = msg.payload._id;\n\n// Convert the string _id to an ObjectId\nlet objectId = new mongodb.ObjectId(pidocsID);\n\n// Construct the payload with the ObjectId\nmsg.payload = {\n    \"_id\": objectId // Use the ObjectId constructor directly\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 980,
        "wires": [
            [
                "5851462dbcaa02b3",
                "595ae30f4ed3394f"
            ]
        ]
    },
    {
        "id": "b50870e1a6156bf2",
        "type": "function",
        "z": "cc9eba98c223b353",
        "name": "Validate Request",
        "func": "//PROCESS TO VALIDATE THE RECEIVED REQUEST\nvar headers = msg.req.headers;\n\n//checking if the api_key is correct, otherwise response is Unauthorized\nif(!headers.apikey || headers.apikey != 'WYMOJXX8QZ4TBAWS'){\n    node.warn(\"Unauthorized transaction, wrong credentials. \");\n    msg.payload = {\"response\":\"Unauthorized\"};\n    msg.statusCode = 401;\n    return [msg,null];\n}\nelse{\n    node.warn(\"Authorized User Authentication transaction, proceeding... \");\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 960,
        "wires": [
            [
                "a96204a4a46beb52"
            ]
        ]
    },
    {
        "id": "a96204a4a46beb52",
        "type": "switch",
        "z": "cc9eba98c223b353",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 960,
        "wires": [
            [
                "c218f2242b947e29"
            ],
            [
                "ddbcb3b160acd523"
            ]
        ]
    },
    {
        "id": "c218f2242b947e29",
        "type": "http response",
        "z": "cc9eba98c223b353",
        "name": "",
        "x": 750,
        "y": 920,
        "wires": []
    },
    {
        "id": "92a79d865f0d477e",
        "type": "debug",
        "z": "cc9eba98c223b353",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 920,
        "wires": []
    },
    {
        "id": "7b28633a59222be5",
        "type": "function",
        "z": "cc9eba98c223b353",
        "name": "",
        "func": "if (msg.payload.insertedCount !== 1) {\n  node.warn(\"----- ERROR Bridge Response ----\");\n  node.warn(msg.payload);\n  node.warn(msg.headers);\n  node.warn(msg.responseUrl);\n  return msg;\n} else {\n  node.warn(\"***** User Created Successfully \" + JSON.stringify(msg.payload.ops) + \"\");\n  msg.payload.ops\n  return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 960,
        "wires": [
            [
                "e9a6651f20a4dfd6",
                "03a7e538faadb254"
            ]
        ]
    },
    {
        "id": "09a03578dc3361bf",
        "type": "inject",
        "z": "cc9eba98c223b353",
        "name": "Manual",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{     \"name\": \"Shehzad1\",     \"username\": \"952278555\",     \"password\": \"test1234\",     \"plant\": \"MG3\",     \"storageLocation\": \"TC6\",     \"sapId\": \"95227855\",     \"role\": \"stockHelper\" }",
        "payloadType": "str",
        "x": 870,
        "y": 1060,
        "wires": [
            [
                "595ae30f4ed3394f"
            ]
        ]
    },
    {
        "id": "595ae30f4ed3394f",
        "type": "mongodb-node",
        "z": "cc9eba98c223b353",
        "mongodb": "880aa783e78c1721",
        "name": "user-auth",
        "collection": "physicalInventoryDoc",
        "operation": "find",
        "upsert": false,
        "multi": false,
        "x": 1020,
        "y": 1000,
        "wires": [
            [
                "e9a6651f20a4dfd6",
                "03a7e538faadb254"
            ]
        ]
    },
    {
        "id": "e9a6651f20a4dfd6",
        "type": "http response",
        "z": "cc9eba98c223b353",
        "name": "",
        "x": 1330,
        "y": 1000,
        "wires": []
    },
    {
        "id": "5851462dbcaa02b3",
        "type": "debug",
        "z": "cc9eba98c223b353",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 960,
        "wires": []
    },
    {
        "id": "d0a88582c35bcbec",
        "type": "http request",
        "z": "cc9eba98c223b353",
        "name": "user-auth",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1140,
        "y": 320,
        "wires": [
            [
                "ae940f549287ddc4",
                "1bd52dcb191e0e2c"
            ]
        ]
    },
    {
        "id": "eebd5d092ce849a0",
        "type": "http request",
        "z": "cc9eba98c223b353",
        "name": "user-auth",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://164.90.229.163:6001/api/v1/stock-count/auth/Register",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1000,
        "y": 620,
        "wires": [
            [
                "9a0ebcb49a56af38",
                "cede2d5b0d12beeb"
            ]
        ]
    },
    {
        "id": "bc02291f3db685f5",
        "type": "change",
        "z": "cc9eba98c223b353",
        "name": "Set headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"x-api-key\":\"99927ec1-8668-45ae-8709-2db03366e680\",\"Content-Type\":\"application/json\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "http://164.90.229.163:6001/api/v1/stock-count/auth/login",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 320,
        "wires": [
            [
                "d0a88582c35bcbec"
            ]
        ]
    }
]